-*- mode: compilation; default-directory: "~/.Wicci/Core/" -*-
Compilation started at Mon Jul 25 15:56:48

make clean-all && make rebuild-all
rm -f /home/greg/.Wicci/Make/wicci1/*
dropdb --if-exists wicci1 && createdb wicci1
rm -f /home/greg/.Wicci/Core/*/Makefile.depends
(cd /home/greg/.Wicci/Core; make TAGS TAGS-sql TAGS-c)
make[1]: Entering directory '/home/greg/Projects/Wicci/Core'
make[1]: 'TAGS' is up to date.
make[1]: 'TAGS-sql' is up to date.
make[1]: 'TAGS-c' is up to date.
make[1]: Leaving directory '/home/greg/Projects/Wicci/Core'
for f in $(< /home/greg/.Wicci/Core/WICCI-SQL-DIRS); do (cd /home/greg/.Wicci/Core/"$f" ; make -f /home/greg/.Wicci/Core/Makefile.wicci  Makefile.depends); done
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S0_lib'
PATH=".:$PATH" make-depends WICCI-SQL-FILES | grep -v '^	$(PSQL)'> Makefile.depends
make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S0_lib'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S1_refs'
PATH=".:$PATH" make-depends WICCI-SQL-FILES | grep -v '^	$(PSQL)'> Makefile.depends
make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S1_refs'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S2_core'
PATH=".:$PATH" make-depends WICCI-SQL-FILES | grep -v '^	$(PSQL)'> Makefile.depends
make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S2_core'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S3_more'
PATH=".:$PATH" make-depends WICCI-SQL-FILES | grep -v '^	$(PSQL)'> Makefile.depends
make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S3_more'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S4_doc'
PATH=".:$PATH" make-depends WICCI-SQL-FILES | grep -v '^	$(PSQL)'> Makefile.depends
make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S4_doc'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S5_xml'
PATH=".:$PATH" make-depends WICCI-SQL-FILES | grep -v '^	$(PSQL)'> Makefile.depends
make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S5_xml'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S6_http'
PATH=".:$PATH" make-depends WICCI-SQL-FILES | grep -v '^	$(PSQL)'> Makefile.depends
make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S6_http'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S7_wicci'
PATH=".:$PATH" make-depends WICCI-SQL-FILES | grep -v '^	$(PSQL)'> Makefile.depends
make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S7_wicci'
for f in $(< /home/greg/.Wicci/Core/WICCI-CORE-DIRS); do (cd /home/greg/.Wicci/Core/"$f" ; make all || exit 2) || exit 1; done
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/C_lib'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/C_lib'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S0_lib'
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f brama.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/brama.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/brama.sql-out-err /home/greg/.Wicci/Make/wicci1/brama.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
CREATE EXTENSION
CREATE EXTENSION
CREATE EXTENSION
CREATE EXTENSION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE TABLE
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
       set_file        
-----------------------
 s0_lib brama.sql $Id$
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xtest.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xtest.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xtest.sql-out-err /home/greg/.Wicci/Make/wicci1/xtest.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

       set_file       
----------------------
 s0_lib xtest.sql $Id
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f misc.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/misc.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/misc.sql-out-err /home/greg/.Wicci/Make/wicci1/misc.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

      set_file       
---------------------
 s0_lib misc.sql $Id
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f array.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/array.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/array.sql-out-err /home/greg/.Wicci/Make/wicci1/array.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

       set_file       
----------------------
 s0_lib array.sql $Id
(1 row)

CREATE FUNCTION
            test_func            
---------------------------------
 try_array_sub(anyarray,integer)
(1 row)

            test_func            
---------------------------------
 try_array_sub(anyarray,integer)
(1 row)

            test_func            
---------------------------------
 try_array_sub(anyarray,integer)
(1 row)

CREATE FUNCTION
COMMENT
                test_func                 
------------------------------------------
 array_sub(anyarray,integer,regprocedure)
(1 row)

CREATE FUNCTION
COMMENT
        test_func         
--------------------------
 array_is_empty(anyarray)
(1 row)

        test_func         
--------------------------
 array_is_empty(anyarray)
(1 row)

        test_func         
--------------------------
 array_is_empty(anyarray)
(1 row)

CREATE FUNCTION
COMMENT
       test_func        
------------------------
 array_length(anyarray)
(1 row)

       test_func        
------------------------
 array_length(anyarray)
(1 row)

       test_func        
------------------------
 array_length(anyarray)
(1 row)

CREATE FUNCTION
COMMENT
        test_func         
--------------------------
 array_or_empty(anyarray)
(1 row)

        test_func         
--------------------------
 array_or_empty(anyarray)
(1 row)

CREATE FUNCTION
COMMENT
      test_func       
----------------------
 array_head(anyarray)
(1 row)

      test_func       
----------------------
 array_head(anyarray)
(1 row)

CREATE FUNCTION
COMMENT
      test_func       
----------------------
 array_tail(anyarray)
(1 row)

      test_func       
----------------------
 array_tail(anyarray)
(1 row)

CREATE FUNCTION
COMMENT
               test_func               
---------------------------------------
 array_steps(anyarray,integer,integer)
(1 row)

CREATE FUNCTION
COMMENT
       test_func       
-----------------------
 array_pairs(anyarray)
(1 row)

       test_func       
-----------------------
 array_pairs(anyarray)
(1 row)

       test_func       
-----------------------
 array_pairs(anyarray)
(1 row)

       test_func       
-----------------------
 array_pairs(anyarray)
(1 row)

CREATE FUNCTION
COMMENT
            test_func            
---------------------------------
 array_indices(anyarray,integer)
(1 row)

            test_func            
---------------------------------
 array_indices(anyarray,integer)
(1 row)

            test_func            
---------------------------------
 array_indices(anyarray,integer)
(1 row)

CREATE FUNCTION
COMMENT
            test_func             
----------------------------------
 array_rindices(anyarray,integer)
(1 row)

            test_func             
----------------------------------
 array_rindices(anyarray,integer)
(1 row)

            test_func             
----------------------------------
 array_rindices(anyarray,integer)
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
        test_func         
--------------------------
 array_to_rlist(anyarray)
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
         test_func         
---------------------------
 array_non_nulls(anyarray)
(1 row)

         test_func         
---------------------------
 array_non_nulls(anyarray)
(1 row)

CREATE FUNCTION
        test_func        
-------------------------
 array_reverse(anyarray)
(1 row)

CREATE FUNCTION
COMMENT
            test_func            
---------------------------------
 array_without(anyarray,integer)
(1 row)

             test_func             
-----------------------------------
 array_remove(anyarray,anyelement)
(1 row)

CREATE FUNCTION
COMMENT
           test_func           
-------------------------------
 array_diff(anyarray,anyarray)
(1 row)

CREATE FUNCTION
COMMENT
              test_func               
--------------------------------------
 array_interpose(anyarray,anyelement)
(1 row)

CREATE FUNCTION
COMMENT
         test_func         
---------------------------
 array_join(anyarray,text)
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f triggers.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/triggers.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/triggers.sql-out-err /home/greg/.Wicci/Make/wicci1/triggers.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

psql:triggers.sql:3: NOTICE:  00000: set_file(text,text) misc.sql $Id raised unique_violation!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 set_file 
----------
 
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f schemas-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/schemas-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/schemas-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/schemas-schema.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

           set_file            
-------------------------------
 s0_lib schemas-schema.sql $Id
(1 row)

psql:schemas-schema.sql:10: NOTICE:  00000: type "schema_ids" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
psql:schemas-schema.sql:11: NOTICE:  00000: type "maybe_schema_ids" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
psql:schemas-schema.sql:12: NOTICE:  00000: type "schema_id_arrays" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
psql:schemas-schema.sql:14: NOTICE:  00000: type "schema_names" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
psql:schemas-schema.sql:15: NOTICE:  00000: type "maybe_schema_names" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
CREATE DOMAIN
CREATE DOMAIN
CREATE DOMAIN
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE DOMAIN
CREATE DOMAIN
psql:schemas-schema.sql:43: NOTICE:  00000: sequence "schema_id_seq" does not exist, skipping
LOCATION:  DropErrorMsgNonExistent, tablecmds.c:763
DROP SEQUENCE
CREATE SEQUENCE
CREATE FUNCTION
CREATE TABLE
COMMENT
COMMENT
ALTER SEQUENCE
CREATE TABLE
COMMENT
COMMENT
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
psql:schemas-schema.sql:271: NOTICE:  00000: trigger "our_namespace_insert" for relation "our_namespaces" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP TRIGGER
psql:schemas-schema.sql:272: NOTICE:  00000: trigger "our_namespace_update" for relation "our_namespaces" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP TRIGGER
CREATE TRIGGER
psql:schemas-schema.sql:278: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS our_namespaces_no_update_trigger ON our_namespaces CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:schemas-schema.sql:278: NOTICE:  00000: trigger "our_namespaces_no_update_trigger" for relation "our_namespaces" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:schemas-schema.sql:278: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER our_namespaces_no_update_trigger
  BEFORE UPDATE ON our_namespaces
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_monotonic 
-------------------
 our_namespaces
(1 row)

psql:schemas-schema.sql:280: NOTICE:  00000: new_schema_name_id(schema_names) foo ->  1 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 get_schema_name_id 
--------------------
                  1
(1 row)

psql:schemas-schema.sql:283: NOTICE:  00000: new_schema_name_id(schema_names) pg_catalog ->  2 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
INSERT 0 1
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f schemas-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/schemas-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/schemas-code.sql-out-err /home/greg/.Wicci/Make/wicci1/schemas-code.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

          set_file           
-----------------------------
 s0_lib schemas-code.sql $Id
(1 row)

CREATE FUNCTION
COMMENT
CREATE VIEW
CREATE VIEW
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
psql:schemas-code.sql:100: NOTICE:  00000: new_schema_name_id(schema_names) public ->  3 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
          test_func           
------------------------------
 declare_schema(schema_names)
(1 row)

psql:schemas-code.sql:105: NOTICE:  00000: new_schema_name_id(schema_names) s0_lib ->  4 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
          test_func           
------------------------------
 declare_schema(schema_names)
(1 row)

CREATE FUNCTION
CREATE FUNCTION
        test_func        
-------------------------
 schema_name(schema_ids)
(1 row)

psql:schemas-code.sql:129: NOTICE:  00000: 
---> META declare_system_schema(text)
CREATE SCHEMA foo
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
          test_func           
------------------------------
 declare_schema(schema_names)
(1 row)

CREATE FUNCTION
         test_func         
---------------------------
 schema_path_array(text[])
(1 row)

CREATE FUNCTION
           test_func           
-------------------------------
 schema_path(schema_id_arrays)
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
           test_func            
--------------------------------
 schema_path_push(schema_names)
(1 row)

           test_func            
--------------------------------
 schema_path_drop(schema_names)
(1 row)

CREATE FUNCTION
COMMENT
psql:schemas-code.sql:261: NOTICE:  00000: 
---> META drop_schema(schema_names)
DROP SCHEMA foo CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
         test_func         
---------------------------
 drop_schema(schema_names)
(1 row)

         test_func         
---------------------------
 drop_schema(schema_names)
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE VIEW
COMMENT
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f modules-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/modules-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/modules-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/modules-schema.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

           set_file            
-------------------------------
 s0_lib modules-schema.sql $Id
(1 row)

CREATE DOMAIN
CREATE DOMAIN
CREATE DOMAIN
CREATE DOMAIN
CREATE SEQUENCE
CREATE FUNCTION
CREATE TYPE
COMMENT
CREATE TABLE
COMMENT
ALTER SEQUENCE
CREATE TABLE
COMMENT
INSERT 0 1
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f modules-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/modules-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/modules-code.sql-out-err /home/greg/.Wicci/Make/wicci1/modules-code.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

          set_file           
-----------------------------
 s0_lib modules-code.sql $Id
(1 row)

CREATE VIEW
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
      test_func      
---------------------
 file_basename(text)
(1 row)

CREATE FUNCTION
COMMENT
              test_func               
--------------------------------------
 infer_module_name(schema_names,text)
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
psql:modules-code.sql:197: NOTICE:  00000: record_early_modules: recording s0_lib.brama
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:modules-code.sql:197: NOTICE:  00000: record_early_modules: recording s0_lib.xtest
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:modules-code.sql:197: NOTICE:  00000: record_early_modules: recording s0_lib.misc
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:modules-code.sql:197: NOTICE:  00000: record_early_modules: recording s0_lib.array
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:modules-code.sql:197: NOTICE:  00000: record_early_modules: recording s0_lib.schemas-schema
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:modules-code.sql:197: NOTICE:  00000: record_early_modules: recording s0_lib.schemas-code
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:modules-code.sql:197: NOTICE:  00000: record_early_modules: recording s0_lib.modules-schema
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:modules-code.sql:197: NOTICE:  00000: record_early_modules: recording s0_lib.modules-code
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 record_early_modules 
----------------------
 
(1 row)

DROP FUNCTION
           test_func            
--------------------------------
 module_schema_name(module_ids)
(1 row)

              test_func               
--------------------------------------
 module_id(schema_names,module_names)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f module-deps-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/module-deps-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/module-deps-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/module-deps-schema.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                                   set_file                                   
------------------------------------------------------------------------------
 schema module-deps-schema.sql, module module-deps-schema, revision $Id, id 9
(1 row)

CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f module-deps-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/module-deps-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/module-deps-code.sql-out-err /home/greg/.Wicci/Make/wicci1/module-deps-code.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                                 set_file                                  
---------------------------------------------------------------------------
 schema module-deps-code.sql, module module-deps-code, revision $Id, id 10
(1 row)

CREATE VIEW
CREATE VIEW
CREATE FUNCTION
COMMENT
CREATE VIEW
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
                                         require_module                                         
------------------------------------------------------------------------------------------------
 module id: 9 schema: s0_lib name: module-deps-schema filename: module-deps-schema.sql rev: $Id
(1 row)

               require_procedure               
-----------------------------------------------
 module_requires_module(module_ids,module_ids)
(1 row)

      require_procedure       
------------------------------
 require_module(module_names)
(1 row)

           require_procedure            
----------------------------------------
 module_provides_entity(module_ids,oid)
(1 row)

        require_procedure        
---------------------------------
 require_procedure(regprocedure)
(1 row)

   require_procedure   
-----------------------
 require_type(regtype)
(1 row)

    require_procedure    
-------------------------
 require_table(regclass)
(1 row)

           require_procedure            
----------------------------------------
 module_requires_entity(module_ids,oid)
(1 row)

psql:module-deps-code.sql:192: NOTICE:  00000: module_requires_entity(module_ids,oid) 10 17018 raised unique_violation!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
        require_procedure        
---------------------------------
 require_procedure(regprocedure)
(1 row)

psql:module-deps-code.sql:193: NOTICE:  00000: module_requires_entity(module_ids,oid) 10 17019 raised unique_violation!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   require_procedure   
-----------------------
 require_type(regtype)
(1 row)

psql:module-deps-code.sql:194: NOTICE:  00000: module_requires_entity(module_ids,oid) 10 17020 raised unique_violation!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
    require_procedure    
-------------------------
 require_table(regclass)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f bool.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/bool.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/bool.sql-out-err /home/greg/.Wicci/Make/wicci1/bool.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                     set_file                      
---------------------------------------------------
 schema bool.sql, module bool, revision $Id, id 11
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f debug-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/debug-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/debug-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/debug-schema.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                             set_file                              
-------------------------------------------------------------------
 schema debug-schema.sql, module debug-schema, revision $Id, id 12
(1 row)

CREATE TABLE
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f debug-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/debug-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/debug-code.sql-out-err /home/greg/.Wicci/Make/wicci1/debug-code.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                           set_file                            
---------------------------------------------------------------
 schema debug-code.sql, module debug-code, revision $Id, id 13
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f str.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/str.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/str.sql-out-err /home/greg/.Wicci/Make/wicci1/str.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                    set_file                     
-------------------------------------------------
 schema str.sql, module str, revision $Id, id 14
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
      test_func      
---------------------
 str_trim_deep(text)
(1 row)

CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f pg-meta.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/pg-meta.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/pg-meta.sql-out-err /home/greg/.Wicci/Make/wicci1/pg-meta.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                        set_file                         
---------------------------------------------------------
 schema pg-meta.sql, module pg-meta, revision $Id, id 15
(1 row)

                            require_module                            
----------------------------------------------------------------------
 module id: 4 schema: s0_lib name: array filename: array.sql rev: $Id
(1 row)

CREATE TYPE
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f meta-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/meta-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/meta-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/meta-schema.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                            set_file                             
-----------------------------------------------------------------
 schema meta-schema.sql, module meta-schema, revision $Id, id 16
(1 row)

psql:meta-schema.sql:31: NOTICE:  00000: type "meta_entities" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
COMMENT
CREATE TABLE
COMMENT
COMMENT
INSERT 0 1
INSERT 0 12
psql:meta-schema.sql:90: NOTICE:  00000: type "sql_exprs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
psql:meta-schema.sql:91: NOTICE:  00000: type "maybe_sql_exprs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
CREATE DOMAIN
COMMENT
CREATE DOMAIN
CREATE TABLE
COMMENT
COMMENT
COMMENT
COMMENT
psql:meta-schema.sql:113: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS meta_colargs_abstract_trigger ON meta_colargs CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:meta-schema.sql:113: NOTICE:  00000: trigger "meta_colargs_abstract_trigger" for relation "meta_colargs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:meta-schema.sql:113: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER meta_colargs_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON meta_colargs
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_abstract 
------------------
 meta_colargs
(1 row)

CREATE TYPE
CREATE DOMAIN
CREATE DOMAIN
CREATE DOMAIN
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE TABLE
psql:meta-schema.sql:151: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS meta_args_abstract_trigger ON meta_args CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:meta-schema.sql:151: NOTICE:  00000: trigger "meta_args_abstract_trigger" for relation "meta_args" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:meta-schema.sql:151: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER meta_args_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON meta_args
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_abstract 
------------------
 meta_args
(1 row)

CREATE TYPE
CREATE FUNCTION
CREATE TYPE
CREATE FUNCTION
CREATE TYPE
CREATE FUNCTION
CREATE TYPE
CREATE TYPE
CREATE DOMAIN
CREATE TABLE
COMMENT
psql:meta-schema.sql:249: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS meta_funcs_abstract_trigger ON meta_funcs CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:meta-schema.sql:249: NOTICE:  00000: trigger "meta_funcs_abstract_trigger" for relation "meta_funcs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:meta-schema.sql:249: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER meta_funcs_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON meta_funcs
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_abstract 
------------------
 meta_funcs
(1 row)

CREATE DOMAIN
CREATE DOMAIN
CREATE DOMAIN
CREATE DOMAIN
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE TYPE
COMMENT
CREATE FUNCTION
CREATE TABLE
CREATE DOMAIN
COMMENT
psql:meta-schema.sql:306: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS abstract_constraints_abstract_trigger ON abstract_constraints CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:meta-schema.sql:306: NOTICE:  00000: trigger "abstract_constraints_abstract_trigger" for relation "abstract_constraints" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:meta-schema.sql:306: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER abstract_constraints_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON abstract_constraints
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   declare_abstract   
----------------------
 abstract_constraints
(1 row)

CREATE TABLE
psql:meta-schema.sql:312: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS check_constraints_abstract_trigger ON check_constraints CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:meta-schema.sql:312: NOTICE:  00000: trigger "check_constraints_abstract_trigger" for relation "check_constraints" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:meta-schema.sql:312: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER check_constraints_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON check_constraints
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_abstract  
-------------------
 check_constraints
(1 row)

CREATE TYPE
CREATE TABLE
psql:meta-schema.sql:324: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS index_constraints_abstract_trigger ON index_constraints CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:meta-schema.sql:324: NOTICE:  00000: trigger "index_constraints_abstract_trigger" for relation "index_constraints" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:meta-schema.sql:324: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER index_constraints_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON index_constraints
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_abstract  
-------------------
 index_constraints
(1 row)

CREATE TYPE
COMMENT
CREATE FUNCTION
CREATE TYPE
COMMENT
CREATE FUNCTION
CREATE TABLE
psql:meta-schema.sql:364: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS meta_foreign_keys_abstract_trigger ON meta_foreign_keys CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:meta-schema.sql:364: NOTICE:  00000: trigger "meta_foreign_keys_abstract_trigger" for relation "meta_foreign_keys" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:meta-schema.sql:364: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER meta_foreign_keys_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON meta_foreign_keys
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_abstract  
-------------------
 meta_foreign_keys
(1 row)

CREATE TABLE
COMMENT
psql:meta-schema.sql:376: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS meta_columns_abstract_trigger ON meta_columns CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:meta-schema.sql:376: NOTICE:  00000: trigger "meta_columns_abstract_trigger" for relation "meta_columns" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:meta-schema.sql:376: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER meta_columns_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON meta_columns
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_abstract 
------------------
 meta_columns
(1 row)

CREATE TYPE
CREATE TABLE
COMMENT
psql:meta-schema.sql:411: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS meta_composite_types_abstract_trigger ON meta_composite_types CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:meta-schema.sql:411: NOTICE:  00000: trigger "meta_composite_types_abstract_trigger" for relation "meta_composite_types" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:meta-schema.sql:411: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER meta_composite_types_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON meta_composite_types
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   declare_abstract   
----------------------
 meta_composite_types
(1 row)

CREATE TABLE
COMMENT
psql:meta-schema.sql:435: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS meta_tables_abstract_trigger ON meta_tables CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:meta-schema.sql:435: NOTICE:  00000: trigger "meta_tables_abstract_trigger" for relation "meta_tables" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:meta-schema.sql:435: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER meta_tables_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON meta_tables
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_abstract 
------------------
 meta_tables
(1 row)

CREATE TYPE
CREATE TYPE
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE TABLE
COMMENT
COMMENT
COMMENT
COMMENT
COMMENT
COMMENT
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f meta-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/meta-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/meta-code.sql-out-err /home/greg/.Wicci/Make/wicci1/meta-code.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                          set_file                           
-------------------------------------------------------------
 schema meta-code.sql, module meta-code, revision $Id, id 17
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
               test_func               
---------------------------------------
 comment_text(meta_entities,text,text)
(1 row)

               test_func               
---------------------------------------
 comment_text(meta_entities,text,text)
(1 row)

CREATE FUNCTION
psql:meta-code.sql:319: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON FUNCTION create_comment(meta_entities, text, text) IS
'creates comment in database';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                   create_comment                   
----------------------------------------------------
 FUNCTION create_comment(meta_entities, text, text)+
         creates comment in database
(1 row)

CREATE FUNCTION
psql:meta-code.sql:330: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON FUNCTION create_function_comment(regprocedure,text) IS
'creates a comment on a function';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
               create_function_comment               
-----------------------------------------------------
 FUNCTION create_function_comment(regprocedure,text)+
         creates a comment on a function
(1 row)

CREATE FUNCTION
psql:meta-code.sql:340: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON FUNCTION create_table_comment(regclass,text) IS
'creates a comment on a table';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
           create_function_comment            
----------------------------------------------
 FUNCTION create_table_comment(regclass,text)+
         creates a comment on a table
(1 row)

CREATE FUNCTION
psql:meta-code.sql:350: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON FUNCTION comment_column(regclass,text,text) IS
'creates a comment on a column';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
           create_function_comment           
---------------------------------------------
 FUNCTION comment_column(regclass,text,text)+
         creates a comment on a column
(1 row)

CREATE FUNCTION
psql:meta-code.sql:360: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON FUNCTION create_type_comment(regtype,text) IS
'creates a comment on a type';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
          create_function_comment           
--------------------------------------------
 FUNCTION create_type_comment(regtype,text)+
         creates a comment on a type
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
psql:meta-code.sql:1711: NOTICE:  00000: 
---> META create_func_comment(regprocedure,meta_args[],text)

COMMENT ON FUNCTION create_func_comment(regprocedure,meta_args[],text) IS
'create_func_comment(func, args, comment): creating a comment starting with the function and argument names';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                create_func_comment                 
----------------------------------------------------
 create_func_comment(regprocedure,meta_args[],text)
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f meta-tst.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/meta-tst.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/meta-tst.sql-out-err /home/greg/.Wicci/Make/wicci1/meta-tst.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                         set_file                          
-----------------------------------------------------------
 schema meta-tst.sql, module meta-tst, revision $Id, id 18
(1 row)

          test_func          
-----------------------------
 arg_text(meta_args,boolean)
(1 row)

          test_func          
-----------------------------
 arg_text(meta_args,boolean)
(1 row)

          test_func          
-----------------------------
 arg_text(meta_args,boolean)
(1 row)

          test_func          
-----------------------------
 arg_text(meta_args,boolean)
(1 row)

               test_func_tokens                
-----------------------------------------------
 meta_func_head_text(text,meta_args[],boolean)
(1 row)

               test_func_tokens                
-----------------------------------------------
 meta_func_head_text(text,meta_args[],boolean)
(1 row)

              test_func_tokens               
---------------------------------------------
 func_head_comment_text(regproc,meta_args[])
(1 row)

              test_func_tokens               
---------------------------------------------
 func_head_comment_text(regproc,meta_args[])
(1 row)

                                                                                                                                                      meta_sql_func                                                                                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 (t,test_func_tokens,"{""(name,text,,meta__in,f)"",""(return_type,regtype,,meta__in,f)"",""(args,meta_args[],,meta__in,f)"",""(comment,text,,meta__in,f)"",""(lang,meta_langs,,meta__in,f)"",""(body,text,,meta__in,f)""}",void,f,meta__sql,meta__stable,meta__strict,meta__invoker,,,{}," SELECT 'hello world!' ",,,"")
(1 row)

      test_func_tokens      
----------------------------
 meta_func_text(meta_funcs)
(1 row)

                                       meta_func_text                                       
--------------------------------------------------------------------------------------------
 CREATE  OR REPLACE                                                                        +
 FUNCTION test_func_tokens(                                                                +
 name text, return_type regtype, args meta_args[], comment text, lang meta_langs, body text+
 )                                                                                         +
 RETURNS void LANGUAGE SQL  STRICT AS                                                      +
 ' SELECT ''hello world!'' ';                                                              +
 
(1 row)

      test_func_tokens      
----------------------------
 meta_func_text(meta_funcs)
(1 row)

                                 func_comment_text                                 
-----------------------------------------------------------------------------------
                                                                                  +
 COMMENT ON FUNCTION func_comment_text(regprocedure,meta_args[],text) IS          +
 'func_comment_text(func, args, comment): generate a nice comment for a function';+
 
(1 row)

CREATE FUNCTION
DROP FUNCTION
      test_func_tokens      
----------------------------
 meta_func_text(meta_funcs)
(1 row)

psql:meta-tst.sql:224: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION greet(name text)
RETURNS text LANGUAGE SQL  STRICT AS
' SELECT ''Hello '' || $1 || '', how do you do?'' ';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:meta-tst.sql:224: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION greet(text) IS
'greet(name): greet someone nicely by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_func 
-------------
 greet(text)
(1 row)

           greet            
----------------------------
 Hello Lynn, how do you do?
(1 row)

              test_func_tokens              
--------------------------------------------
 column_name_array_text(column_name_arrays)
(1 row)

                 test_func                 
-------------------------------------------
 is_table_constraint(abstract_constraints)
(1 row)

                        test_func                        
---------------------------------------------------------
 is_column_constraint(column_names,abstract_constraints)
(1 row)

                        test_func                        
---------------------------------------------------------
 is_column_constraint(column_names,abstract_constraints)
(1 row)

                        test_func                        
---------------------------------------------------------
 is_column_constraint(column_names,abstract_constraints)
(1 row)

                                test_func_tokens                                 
---------------------------------------------------------------------------------
 check_constraint(text,column_name_arrays,constraint_deferrings,maybe_sql_exprs)
(1 row)

             table_check_constraint_texts             
------------------------------------------------------
 {"CONSTRAINT foo_bar_cnst","CONSTRAINT foobar_cnst"}
(1 row)

 try_column_checks_text 
------------------------
 CHECK (foobar > 0)
(1 row)

               test_func_tokens                
-----------------------------------------------
 index_constraint_text(text,index_constraints)
(1 row)

               test_func_tokens                
-----------------------------------------------
 index_constraint_text(text,index_constraints)
(1 row)

               test_func_tokens                
-----------------------------------------------
 index_constraint_text(text,index_constraints)
(1 row)

                    test_func_tokens                     
---------------------------------------------------------
 try_column_primary_text(column_names,index_constraints)
(1 row)

                     test_func_tokens                     
----------------------------------------------------------
 try_column_unique_text(column_names,index_constraints[])
(1 row)

          test_func_tokens           
-------------------------------------
 foreign_key_text(meta_foreign_keys)
(1 row)

               meta_column                
------------------------------------------
 (id,integer,0,t,"Not the Freudian one!")
(1 row)

        test_func_tokens        
--------------------------------
 meta_column_text(meta_columns)
(1 row)

     primary_meta_column_array      
------------------------------------
 {"(entity,meta_entities,,f,\"\")"}
(1 row)

     array     
---------------
 {"name text"}
(1 row)

               array_to_string               
---------------------------------------------
 entity meta_entities PRIMARY KEY,          +
 name text UNIQUE,                          +
 commentable boolean NOT NULL DEFAULT 'true'
(1 row)

       test_func_tokens       
------------------------------
 meta_table_text(meta_tables)
(1 row)

              test_func              
-------------------------------------
 primary_meta_column_array(regclass)
(1 row)

        test_func_tokens         
---------------------------------
 get_primary_forn_keys(regclass)
(1 row)

                                                  meta_trigger                                                   
-----------------------------------------------------------------------------------------------------------------
 (,our_namespace_insert,our_namespaces,trigger__before,f,{trigger__insert},{},,f,f,t,,"our_namespace_insert()",)
(1 row)

         test_func_tokens         
----------------------------------
 meta_trigger_text(meta_triggers)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f meta-more-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/meta-more-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/meta-more-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/meta-more-schema.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                                 set_file                                  
---------------------------------------------------------------------------
 schema meta-more-schema.sql, module meta-more-schema, revision $Id, id 19
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f meta-more-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/meta-more-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/meta-more-code.sql-out-err /home/greg/.Wicci/Make/wicci1/meta-more-code.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                               set_file                                
-----------------------------------------------------------------------
 schema meta-more-code.sql, module meta-more-code, revision $Id, id 20
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f handles.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/handles.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/handles.sql-out-err /home/greg/.Wicci/Make/wicci1/handles.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                        set_file                         
---------------------------------------------------------
 schema handles.sql, module handles, revision $Id, id 21
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
psql:handles.sql:138: NOTICE:  00000: type "handles" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
CREATE DOMAIN
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
psql:handles.sql:372: NOTICE:  00000: type "tables_procs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f handles-tst-data.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/handles-tst-data.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/handles-tst-data.sql-out-err /home/greg/.Wicci/Make/wicci1/handles-tst-data.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                                 set_file                                  
---------------------------------------------------------------------------
 schema handles-tst-data.sql, module handles-tst-data, revision $Id, id 22
(1 row)

CREATE TABLE
INSERT 0 1
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f handles-tst.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/handles-tst.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/handles-tst.sql-out-err /home/greg/.Wicci/Make/wicci1/handles-tst.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                            set_file                             
-----------------------------------------------------------------
 schema handles-tst.sql, module handles-tst, revision $Id, id 23
(1 row)

                                      handle_table_for_text                                       
--------------------------------------------------------------------------------------------------
 CREATE TABLE meta_entity_traits_row_handles (                                                   +
         handle handles NOT NULL UNIQUE,                                                         +
         entity meta_entities PRIMARY KEY  REFERENCES meta_entity_traits(entity)ON DELETE CASCADE+
 );                                                                                              +
 
(1 row)

psql:handles-tst.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE meta_entity_traits_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:18: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE meta_entity_traits_row_handles (
	handle handles NOT NULL UNIQUE,
	entity meta_entities PRIMARY KEY  REFERENCES meta_entity_traits(entity)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:18: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE meta_entity_traits_row_handles IS
'row handles associated with meta_entity_traits rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:18: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:18: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
    create_handle_table_for     
--------------------------------
 meta_entity_traits_row_handles
(1 row)

psql:handles-tst.sql:20: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE table_with_2_primaries_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:20: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE table_with_2_primaries_row_handles (
	handle handles NOT NULL UNIQUE,
	i integer,
	n text,
	 PRIMARY KEY(i, n),
	 FOREIGN KEY(i, n) REFERENCES table_with_2_primaries(i, n)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:20: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE table_with_2_primaries_row_handles IS
'row handles associated with table_with_2_primaries rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:20: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:20: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:20: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
      create_handle_table_for       
------------------------------------
 table_with_2_primaries_row_handles
(1 row)

                    test_func                     
--------------------------------------------------
 create_handle_table_for(regclass,meta_columns[])
(1 row)

                    test_func                     
--------------------------------------------------
 create_handle_table_for(regclass,meta_columns[])
(1 row)

psql:handles-tst.sql:49: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE meta_entity_traits_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE meta_entity_traits_row_handles (
	handle handles NOT NULL UNIQUE,
	entity meta_entities PRIMARY KEY  REFERENCES meta_entity_traits(entity)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE meta_entity_traits_row_handles IS
'row handles associated with meta_entity_traits rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION meta_entity_traits_row_get_(handle handles, entity meta_entities)
RETURNS meta_entity_traits LANGUAGE SQL  STRICT AS
'SELECT meta_entity_traits.*
 FROM meta_entity_traits,meta_entity_traits_row_handles
WHERE
meta_entity_traits_row_handles.handle=$1 AND meta_entity_traits_row_handles.entity=$2
AND
meta_entity_traits.entity=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION meta_entity_traits_row_get_(handles,meta_entities) IS
'meta_entity_traits_row_get_(handle, entity): find existing handle for row of meta_entity_traits; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION meta_entity_traits_row_set_(handle handles, entity meta_entities)
RETURNS meta_entity_traits LANGUAGE SQL  STRICT AS
'
	INSERT INTO meta_entity_traits_row_handles VALUES ( $1, $2);
	SELECT meta_entity_traits_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION meta_entity_traits_row_set_(handles,meta_entities) IS
'meta_entity_traits_row_set_(handle, entity): make new handle for row of meta_entity_traits; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION meta_entity_traits_row(handle handles, entity meta_entities)
RETURNS meta_entity_traits LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   meta_entity_traits_row_get_( $1, $2),
   meta_entity_traits_row_set_( $1, $2)
  )FROM debug_enter(
  ''meta_entity_traits_row(handles, meta_entities)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION meta_entity_traits_row(handles,meta_entities) IS
'meta_entity_traits_row(handle, entity): ensure handle for row of meta_entity_traits given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION meta_entity_traits_row(handle handles)
RETURNS meta_entity_traits LANGUAGE SQL  STRICT AS
'SELECT meta_entity_traits.*
  FROM meta_entity_traits, meta_entity_traits_row_handles
  WHERE $1 = meta_entity_traits_row_handles.handle
    AND meta_entity_traits.entity=meta_entity_traits_row_handles.entity';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION meta_entity_traits_row(handles) IS
's0_lib.meta_entity_traits_row(handle): return a row given a handle for meta_entity_traits';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION meta_entity_traits_default_handle(entity meta_entities)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT ''entity='' || ($1)::text
FROM meta_entity_traits
WHERE entity=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION meta_entity_traits_default_handle(meta_entities) IS
'meta_entity_traits_default_handle(entity): returns a default row handle (textual primary key) for meta_entity_traits as text';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_meta_entity_traits_handle(entity meta_entities)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   (SELECT handle FROM meta_entity_traits_row_handles WHERE entity=$1),
   meta_entity_traits_default_handle( $1)
  )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION meta_entity_traits_entity(handle handles)
RETURNS meta_entities LANGUAGE SQL  STRICT AS
'SELECT entity FROM meta_entity_traits_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION meta_entity_traits_entity(handles) IS
'meta_entity_traits_entity(handle): given a row handle for meta_entity_traits return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION meta_entity_traits_entity(handle handles, entity meta_entities)
RETURNS meta_entities LANGUAGE SQL  STRICT AS
'SELECT (meta_entity_traits_row( $1, $2)).entity';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:49: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION meta_entity_traits_entity(handles,meta_entities) IS
's0_lib.meta_entity_traits_entity(handle, entity): set handle for primary key of meta_entity_traits and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                                            create_handles_plus_for                                                                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({meta_entity_traits_row_handles},"{""meta_entity_traits_row(handles,meta_entities)"",meta_entity_traits_row(handles),meta_entity_traits_default_handle(meta_entities),get_meta_entity_traits_handle(meta_entities),meta_entity_traits_entity(handles),""meta_entity_traits_entity(handles,meta_entities)""}")
(1 row)

psql:handles-tst.sql:51: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE table_with_2_primaries_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE table_with_2_primaries_row_handles (
	handle handles NOT NULL UNIQUE,
	i integer,
	n text,
	 PRIMARY KEY(i, n),
	 FOREIGN KEY(i, n) REFERENCES table_with_2_primaries(i, n)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE table_with_2_primaries_row_handles IS
'row handles associated with table_with_2_primaries rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION table_with_2_primaries_row_get_(handle handles, i integer, n text)
RETURNS table_with_2_primaries LANGUAGE SQL  STRICT AS
'SELECT table_with_2_primaries.*
 FROM table_with_2_primaries,table_with_2_primaries_row_handles
WHERE
table_with_2_primaries_row_handles.handle=$1 AND table_with_2_primaries_row_handles.i=$2 AND table_with_2_primaries_row_handles.n=$3
AND
table_with_2_primaries.i=$2 AND table_with_2_primaries.n=$3';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION table_with_2_primaries_row_get_(handles,integer,text) IS
'table_with_2_primaries_row_get_(handle, i, n): find existing handle for row of table_with_2_primaries; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION table_with_2_primaries_row_set_(handle handles, i integer, n text)
RETURNS table_with_2_primaries LANGUAGE SQL  STRICT AS
'
	INSERT INTO table_with_2_primaries_row_handles VALUES ( $1, $2, $3);
	SELECT table_with_2_primaries_row_get_( $1, $2, $3)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION table_with_2_primaries_row_set_(handles,integer,text) IS
'table_with_2_primaries_row_set_(handle, i, n): make new handle for row of table_with_2_primaries; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION table_with_2_primaries_row(handle handles, i integer, n text)
RETURNS table_with_2_primaries LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   table_with_2_primaries_row_get_( $1, $2, $3),
   table_with_2_primaries_row_set_( $1, $2, $3)
  )FROM debug_enter(
  ''table_with_2_primaries_row(handles, integer, text)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION table_with_2_primaries_row(handles,integer,text) IS
'table_with_2_primaries_row(handle, i, n): ensure handle for row of table_with_2_primaries given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION table_with_2_primaries_row(handle handles)
RETURNS table_with_2_primaries LANGUAGE SQL  STRICT AS
'SELECT table_with_2_primaries.*
  FROM table_with_2_primaries, table_with_2_primaries_row_handles
  WHERE $1 = table_with_2_primaries_row_handles.handle
    AND table_with_2_primaries.i=table_with_2_primaries_row_handles.i AND table_with_2_primaries.n=table_with_2_primaries_row_handles.n';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION table_with_2_primaries_row(handles) IS
's0_lib.table_with_2_primaries_row(handle): return a row given a handle for table_with_2_primaries';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION table_with_2_primaries_default_handle(i integer, n text)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT ''i='' || ($1)::text|| '';'' ||''n='' || ($2)::text
FROM table_with_2_primaries
WHERE i=$1 AND n=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION table_with_2_primaries_default_handle(integer,text) IS
'table_with_2_primaries_default_handle(i, n): returns a default row handle (textual primary key) for table_with_2_primaries as text';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:handles-tst.sql:51: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_table_with_2_primaries_handle(i integer, n text)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   (SELECT handle FROM table_with_2_primaries_row_handles WHERE i=$1 AND n=$2),
   table_with_2_primaries_default_handle( $1, $2)
  )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                             create_handles_plus_for                                                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({table_with_2_primaries_row_handles},"{""table_with_2_primaries_row(handles,integer,text)"",table_with_2_primaries_row(handles),""table_with_2_primaries_default_handle(integer,text)"",""get_table_with_2_primaries_handle(integer,text)""}")
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f bitset-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/bitset-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/bitset-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/bitset-schema.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                              set_file                               
---------------------------------------------------------------------
 schema bitset-schema.sql, module bitset-schema, revision $Id, id 24
(1 row)

psql:bitset-schema.sql:23: NOTICE:  00000: type "bitset_chunk_bits_" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
psql:bitset-schema.sql:24: NOTICE:  00000: type "bitset_chunks_" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
psql:bitset-schema.sql:25: NOTICE:  00000: type "bitsets" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
CREATE DOMAIN
CREATE DOMAIN
CREATE DOMAIN
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f bitset-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/bitset-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/bitset-code.sql-out-err /home/greg/.Wicci/Make/wicci1/bitset-code.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                            set_file                             
-----------------------------------------------------------------
 schema bitset-code.sql, module bitset-code, revision $Id, id 25
(1 row)

CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f bitset-tst.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/bitset-tst.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/bitset-tst.sql-out-err /home/greg/.Wicci/Make/wicci1/bitset-tst.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                           set_file                            
---------------------------------------------------------------
 schema bitset-tst.sql, module bitset-tst, revision $Id, id 26
(1 row)

      test_func       
----------------------
 empty_bitset_chunk()
(1 row)

     test_func      
--------------------
 to_bitset(integer)
(1 row)

     test_func      
--------------------
 to_bitset(integer)
(1 row)

         test_func          
----------------------------
 in_bitset(integer,bitsets)
(1 row)

         test_func          
----------------------------
 in_bitset(integer,bitsets)
(1 row)

         test_func          
----------------------------
 in_bitset(integer,bitsets)
(1 row)

         test_func          
----------------------------
 in_bitset(integer,bitsets)
(1 row)

         test_func          
----------------------------
 ni_bitset(integer,bitsets)
(1 row)

             test_func             
-----------------------------------
 bitset_chunk_text(bitset_chunks_)
(1 row)

             test_func             
-----------------------------------
 bitset_chunk_text(bitset_chunks_)
(1 row)

                 test_func                 
-------------------------------------------
 bitset_chunk_text_trimmed(bitset_chunks_)
(1 row)

      test_func       
----------------------
 bitset_text(bitsets)
(1 row)

      test_func       
----------------------
 bitset_text(bitsets)
(1 row)

      test_func       
----------------------
 bitset_text(bitsets)
(1 row)

      test_func       
----------------------
 bitset_text(bitsets)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f time.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/time.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/time.sql-out-err /home/greg/.Wicci/Make/wicci1/time.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                     set_file                      
---------------------------------------------------
 schema time.sql, module time, revision $Id, id 27
(1 row)

CREATE DOMAIN
CREATE DOMAIN
CREATE FUNCTION
CREATE FUNCTION
CREATE TABLE
COMMENT
COMMENT
psql:time.sql:41: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS time_ranges_abstract_trigger ON time_ranges CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:time.sql:41: NOTICE:  00000: trigger "time_ranges_abstract_trigger" for relation "time_ranges" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:time.sql:41: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER time_ranges_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON time_ranges
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_abstract 
------------------
 time_ranges
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f notes-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/notes-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/notes-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/notes-schema.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                             set_file                              
-------------------------------------------------------------------
 schema notes-schema.sql, module notes-schema, revision $Id, id 28
(1 row)

psql:notes-schema.sql:22: NOTICE:  00000: type "note_author_ids" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
CREATE DOMAIN
psql:notes-schema.sql:26: NOTICE:  00000: sequence "note_author_id_seq" does not exist, skipping
LOCATION:  DropErrorMsgNonExistent, tablecmds.c:763
DROP SEQUENCE
CREATE SEQUENCE
CREATE FUNCTION
CREATE TABLE
COMMENT
ALTER SEQUENCE
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE note_authors_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE note_authors_row_handles (
	handle handles NOT NULL UNIQUE,
	id note_author_ids PRIMARY KEY  REFERENCES note_authors(id)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE note_authors_row_handles IS
'row handles associated with note_authors rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION note_authors_row_get_(handle handles, id note_author_ids)
RETURNS note_authors LANGUAGE SQL  STRICT AS
'SELECT note_authors.*
 FROM note_authors,note_authors_row_handles
WHERE
note_authors_row_handles.handle=$1 AND note_authors_row_handles.id=$2
AND
note_authors.id=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION note_authors_row_get_(handles,note_author_ids) IS
'note_authors_row_get_(handle, id): find existing handle for row of note_authors; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION note_authors_row_set_(handle handles, id note_author_ids)
RETURNS note_authors LANGUAGE SQL  STRICT AS
'
	INSERT INTO note_authors_row_handles VALUES ( $1, $2);
	SELECT note_authors_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION note_authors_row_set_(handles,note_author_ids) IS
'note_authors_row_set_(handle, id): make new handle for row of note_authors; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION note_authors_row(handle handles, id note_author_ids)
RETURNS note_authors LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   note_authors_row_get_( $1, $2),
   note_authors_row_set_( $1, $2)
  )FROM debug_enter(
  ''note_authors_row(handles, note_author_ids)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION note_authors_row(handles,note_author_ids) IS
'note_authors_row(handle, id): ensure handle for row of note_authors given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION note_authors_row(handle handles)
RETURNS note_authors LANGUAGE SQL  STRICT AS
'SELECT note_authors.*
  FROM note_authors, note_authors_row_handles
  WHERE $1 = note_authors_row_handles.handle
    AND note_authors.id=note_authors_row_handles.id';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION note_authors_row(handles) IS
's0_lib.note_authors_row(handle): return a row given a handle for note_authors';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION note_authors_default_handle(id note_author_ids)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT ''id='' || ($1)::text
FROM note_authors
WHERE id=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION note_authors_default_handle(note_author_ids) IS
'note_authors_default_handle(id): returns a default row handle (textual primary key) for note_authors as text';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_note_authors_handle(id note_author_ids)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   (SELECT handle FROM note_authors_row_handles WHERE id=$1),
   note_authors_default_handle( $1)
  )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION note_authors_id(handle handles)
RETURNS note_author_ids LANGUAGE SQL  STRICT AS
'SELECT id FROM note_authors_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION note_authors_id(handles) IS
'note_authors_id(handle): given a row handle for note_authors return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION note_authors_id(handle handles, id note_author_ids)
RETURNS note_author_ids LANGUAGE SQL  STRICT AS
'SELECT (note_authors_row( $1, $2)).id';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION note_authors_id(handles,note_author_ids) IS
's0_lib.note_authors_id(handle, id): set handle for primary key of note_authors and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                       create_handles_plus_for                                                                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({note_authors_row_handles},"{""note_authors_row(handles,note_author_ids)"",note_authors_row(handles),note_authors_default_handle(note_author_ids),get_note_authors_handle(note_author_ids),note_authors_id(handles),""note_authors_id(handles,note_author_ids)""}")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
psql:notes-schema.sql:60: NOTICE:  00000: type "note_feature_ids" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
psql:notes-schema.sql:61: NOTICE:  00000: type "note_feature_sets" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
CREATE DOMAIN
CREATE DOMAIN
CREATE TABLE
COMMENT
psql:notes-schema.sql:74: NOTICE:  00000: type "attributed_note_ids" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
psql:notes-schema.sql:75: NOTICE:  00000: type "attributed_note_id_arrays" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
CREATE DOMAIN
CREATE DOMAIN
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
psql:notes-schema.sql:97: NOTICE:  00000: sequence "attributed_note_id_seq" does not exist, skipping
LOCATION:  DropErrorMsgNonExistent, tablecmds.c:763
DROP SEQUENCE
CREATE SEQUENCE
CREATE FUNCTION
CREATE TABLE
ALTER SEQUENCE
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE attributed_notes_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE attributed_notes_row_handles (
	handle handles NOT NULL UNIQUE,
	id attributed_note_ids PRIMARY KEY  REFERENCES attributed_notes(id)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE attributed_notes_row_handles IS
'row handles associated with attributed_notes rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION attributed_notes_row_get_(handle handles, id attributed_note_ids)
RETURNS attributed_notes LANGUAGE SQL  STRICT AS
'SELECT attributed_notes.*
 FROM attributed_notes,attributed_notes_row_handles
WHERE
attributed_notes_row_handles.handle=$1 AND attributed_notes_row_handles.id=$2
AND
attributed_notes.id=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION attributed_notes_row_get_(handles,attributed_note_ids) IS
'attributed_notes_row_get_(handle, id): find existing handle for row of attributed_notes; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION attributed_notes_row_set_(handle handles, id attributed_note_ids)
RETURNS attributed_notes LANGUAGE SQL  STRICT AS
'
	INSERT INTO attributed_notes_row_handles VALUES ( $1, $2);
	SELECT attributed_notes_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION attributed_notes_row_set_(handles,attributed_note_ids) IS
'attributed_notes_row_set_(handle, id): make new handle for row of attributed_notes; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION attributed_notes_row(handle handles, id attributed_note_ids)
RETURNS attributed_notes LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   attributed_notes_row_get_( $1, $2),
   attributed_notes_row_set_( $1, $2)
  )FROM debug_enter(
  ''attributed_notes_row(handles, attributed_note_ids)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION attributed_notes_row(handles,attributed_note_ids) IS
'attributed_notes_row(handle, id): ensure handle for row of attributed_notes given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION attributed_notes_row(handle handles)
RETURNS attributed_notes LANGUAGE SQL  STRICT AS
'SELECT attributed_notes.*
  FROM attributed_notes, attributed_notes_row_handles
  WHERE $1 = attributed_notes_row_handles.handle
    AND attributed_notes.id=attributed_notes_row_handles.id';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION attributed_notes_row(handles) IS
's0_lib.attributed_notes_row(handle): return a row given a handle for attributed_notes';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION attributed_notes_id(handle handles)
RETURNS attributed_note_ids LANGUAGE SQL  STRICT AS
'SELECT id FROM attributed_notes_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION attributed_notes_id(handles) IS
'attributed_notes_id(handle): given a row handle for attributed_notes return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION attributed_notes_id(handle handles, id attributed_note_ids)
RETURNS attributed_note_ids LANGUAGE SQL  STRICT AS
'SELECT (attributed_notes_row( $1, $2)).id';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:notes-schema.sql:116: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION attributed_notes_id(handles,attributed_note_ids) IS
's0_lib.attributed_notes_id(handle, id): set handle for primary key of attributed_notes and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                             create_handles_for                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({attributed_notes_row_handles},"{""attributed_notes_row(handles,attributed_note_ids)"",attributed_notes_row(handles),attributed_notes_id(handles),""attributed_notes_id(handles,attributed_note_ids)""}")
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f notes-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/notes-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/notes-code.sql-out-err /home/greg/.Wicci/Make/wicci1/notes-code.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                           set_file                            
---------------------------------------------------------------
 schema notes-code.sql, module notes-code, revision $Id, id 29
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f pg-xml.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/pg-xml.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/pg-xml.sql-out-err /home/greg/.Wicci/Make/wicci1/pg-xml.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                      set_file                       
-----------------------------------------------------
 schema pgxml.sql, module pgxml, revision $Id, id 30
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE TYPE
CREATE TYPE
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE TYPE
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-code.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-code.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                         set_file                          
-----------------------------------------------------------
 schema xml-code.sql, module xml-code, revision $Id, id 31
(1 row)

CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f html.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/html.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/html.sql-out-err /home/greg/.Wicci/Make/wicci1/html.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                     set_file                      
---------------------------------------------------
 schema html.sql, module html, revision $Id, id 32
(1 row)

CREATE FUNCTION
                  provide_procedure                  
-----------------------------------------------------
 html_element(text,text,text,text,text[],anyelement)
(1 row)

CREATE FUNCTION
           provide_procedure            
----------------------------------------
 html_elements(text,text,text,anyarray)
(1 row)

CREATE FUNCTION
             provide_procedure              
--------------------------------------------
 html_button(text,text,text,text,text,text)
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f s0-lib.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/s0-lib.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/s0-lib.sql-out-err /home/greg/.Wicci/Make/wicci1/s0-lib.sql-out
psql:../settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:../settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
 set_schema_path 
-----------------
 {s0_lib,public}
(1 row)

  ensure_schema_ready  
-----------------------
 ensure_schema_ready()
(1 row)

                       set_file                        
-------------------------------------------------------
 schema s0-lib.sql, module s0-lib, revision $Id, id 33
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
                                  list_strict_non_try_funcs                                  
---------------------------------------------------------------------------------------------
 citextin(cstring)
 citextout(citext)
 citextrecv(internal)
 citextsend(citext)
 citext(character)
 citext(boolean)
 citext(inet)
 citext_eq(citext,citext)
 citext_ne(citext,citext)
 citext_lt(citext,citext)
 citext_le(citext,citext)
 citext_gt(citext,citext)
 citext_ge(citext,citext)
 citext_cmp(citext,citext)
 citext_hash(citext)
 citext_smaller(citext,citext)
 citext_larger(citext,citext)
 texticlike(citext,citext)
 texticnlike(citext,citext)
 texticregexeq(citext,citext)
 texticregexne(citext,citext)
 texticlike(citext,text)
 texticnlike(citext,text)
 texticregexeq(citext,text)
 texticregexne(citext,text)
 regexp_matches(citext,citext)
 regexp_matches(citext,citext,text)
 regexp_replace(citext,citext,text)
 regexp_replace(citext,citext,text,text)
 regexp_split_to_array(citext,citext)
 regexp_split_to_array(citext,citext,text)
 regexp_split_to_table(citext,citext)
 regexp_split_to_table(citext,citext,text)
 strpos(citext,citext)
 replace(citext,citext,citext)
 g_int_decompress(internal)
 split_part(citext,citext,integer)
 translate(citext,citext,text)
 bqarr_in(cstring)
 bqarr_out(query_int)
 querytree(query_int)
 boolop(integer[],query_int)
 rboolop(query_int,integer[])
 _int_matchsel(internal,oid,internal,integer)
 _int_contains(integer[],integer[])
 _int_contained(integer[],integer[])
 _int_overlap(integer[],integer[])
 _int_same(integer[],integer[])
 _int_different(integer[],integer[])
 _int_union(integer[],integer[])
 _int_inter(integer[],integer[])
 _int_overlap_sel(internal,oid,internal,integer)
 _int_contains_sel(internal,oid,internal,integer)
 _int_contained_sel(internal,oid,internal,integer)
 _int_overlap_joinsel(internal,oid,internal,smallint,internal)
 _int_contains_joinsel(internal,oid,internal,smallint,internal)
 _int_contained_joinsel(internal,oid,internal,smallint,internal)
 intset(integer)
 icount(integer[])
 sort(integer[],text)
 sort(integer[])
 sort_asc(integer[])
 sort_desc(integer[])
 uniq(integer[])
 idx(integer[],integer)
 subarray(integer[],integer,integer)
 subarray(integer[],integer)
 intarray_push_elem(integer[],integer)
 intarray_push_array(integer[],integer[])
 intarray_del_elem(integer[],integer)
 intset_union_elem(integer[],integer)
 intset_subtract(integer[],integer[])
 g_int_consistent(internal,integer[],smallint,oid,internal)
 g_int_compress(internal)
 g_int_penalty(internal,internal,internal)
 g_int_picksplit(internal,internal)
 g_int_union(internal,internal)
 g_int_same(integer[],integer[],internal)
 _intbig_in(cstring)
 _intbig_out(intbig_gkey)
 g_intbig_consistent(internal,integer[],smallint,oid,internal)
 g_intbig_compress(internal)
 g_intbig_decompress(internal)
 g_intbig_penalty(internal,internal,internal)
 g_intbig_picksplit(internal,internal)
 g_intbig_union(internal,internal)
 g_intbig_same(intbig_gkey,intbig_gkey,internal)
 ginint4_queryextract(integer[],internal,smallint,internal,internal,internal,internal)
 ginint4_consistent(internal,smallint,integer[],integer,internal,internal,internal,internal)
 xml_valid(text)
 xml_encode_special_chars(text)
 xpath_string(text,text)
 xpath_nodeset(text,text,text,text)
 xpath_number(text,text)
 xpath_bool(text,text)
 xpath_list(text,text,text)
 xpath_list(text,text)
 xpath_nodeset(text,text)
 xpath_nodeset(text,text,text)
 xpath_table(text,text,text,text,text)
 xslt_process(text,text,text)
 xslt_process(text,text)
 hstore_in(cstring)
 hstore_out(hstore)
 hstore_recv(internal)
 hstore_send(hstore)
 hstore_version_diag(hstore)
 fetchval(hstore,text)
 slice_array(hstore,text[])
 slice(hstore,text[])
 isexists(hstore,text)
 exist(hstore,text)
 exists_any(hstore,text[])
 exists_all(hstore,text[])
 isdefined(hstore,text)
 defined(hstore,text)
 delete(hstore,text)
 delete(hstore,text[])
 delete(hstore,hstore)
 hs_concat(hstore,hstore)
 hs_contains(hstore,hstore)
 hs_contained(hstore,hstore)
 hstore(text[])
 hstore_to_json(hstore)
 hstore_to_json_loose(hstore)
 hstore_to_jsonb(hstore)
 hstore_to_jsonb_loose(hstore)
 hstore_to_array(hstore)
 hstore_to_matrix(hstore)
 akeys(hstore)
 avals(hstore)
 skeys(hstore)
 svals(hstore)
 each(hstore)
 hstore_eq(hstore,hstore)
 hstore_ne(hstore,hstore)
 hstore_gt(hstore,hstore)
 hstore_ge(hstore,hstore)
 hstore_lt(hstore,hstore)
 hstore_le(hstore,hstore)
 hstore_cmp(hstore,hstore)
 hstore_hash(hstore)
 ghstore_in(cstring)
 ghstore_out(ghstore)
 ghstore_compress(internal)
 ghstore_decompress(internal)
 ghstore_penalty(internal,internal,internal)
 ghstore_picksplit(internal,internal)
 ghstore_union(internal,internal)
 ghstore_same(ghstore,ghstore,internal)
 ghstore_consistent(internal,hstore,smallint,oid,internal)
 gin_extract_hstore(hstore,internal)
 gin_extract_hstore_query(hstore,internal,smallint,internal,internal)
 gin_consistent_hstore(internal,smallint,hstore,integer,internal,internal)
 test_select(text)
 str_cgi_decode(text)
 trigger_comment_text(meta_triggers,regprocedure)
 greet(text)
 meta_entity_traits_row_get_(handles,meta_entities)
 meta_entity_traits_row_set_(handles,meta_entities)
 meta_entity_traits_row(handles,meta_entities)
 meta_entity_traits_row(handles)
 meta_entity_traits_default_handle(meta_entities)
 get_meta_entity_traits_handle(meta_entities)
 meta_entity_traits_entity(handles)
 meta_entity_traits_entity(handles,meta_entities)
 table_with_2_primaries_row_get_(handles,integer,text)
 table_with_2_primaries_row_set_(handles,integer,text)
 table_with_2_primaries_row(handles,integer,text)
 table_with_2_primaries_row(handles)
 table_with_2_primaries_default_handle(integer,text)
 get_table_with_2_primaries_handle(integer,text)
 note_authors_row_get_(handles,note_author_ids)
 note_authors_row_set_(handles,note_author_ids)
 note_authors_row(handles,note_author_ids)
 note_authors_row(handles)
 note_authors_default_handle(note_author_ids)
 get_note_authors_handle(note_author_ids)
 note_authors_id(handles)
 note_authors_id(handles,note_author_ids)
 attributed_notes_row_get_(handles,attributed_note_ids)
 attributed_notes_row_set_(handles,attributed_note_ids)
 attributed_notes_row(handles,attributed_note_ids)
 attributed_notes_row(handles)
 attributed_notes_id(handles)
 attributed_notes_id(handles,attributed_note_ids)
(186 rows)

make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S0_lib'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S1_refs'
cc  -fpic -g -I/usr/local/pgsql-9.6beta3/include/server -I/home/greg/.Wicci/Core/C_lib -Wall -std=gnu99 -c -o /home/greg/.Wicci/Make/wicci1/debug-test.o debug-test.c
debug-test.c: In function ‘main’:
debug-test.c:28:18: warning: value computed is not used [-Wunused-value]
   DebugLevel > 0 && WARN_OUT("This is your last warning.");
                  ^
debug-test.c:29:18: warning: value computed is not used [-Wunused-value]
   DebugLevel > 0 && BUG_OUT("This should be an error.");
                  ^
cc  -fpic -g -I/usr/local/pgsql-9.6beta3/include/server -I/home/greg/.Wicci/Core/C_lib -Wall -std=gnu99 -c -o /home/greg/.Wicci/Make/wicci1/debug-log.o debug-log.c
cc -o /home/greg/.Wicci/Make/wicci1/debug-test /home/greg/.Wicci/Make/wicci1/debug-test.o /home/greg/.Wicci/Make/wicci1/debug-log.o
rm -f debug-test.log
/home/greg/.Wicci/Make/wicci1/debug-test
diff debug-test.log debug-test.log.good
cc -fpic -g -I/usr/local/pgsql-9.6beta3/include/server -I/home/greg/.Wicci/Core/C_lib -Wall -std=gnu99 -o /home/greg/.Wicci/Make/wicci1/refs-sizes refs-sizes.c
/home/greg/.Wicci/Make/wicci1/refs-sizes psql-set > /home/greg/.Wicci/Make/wicci1/refs-sizes.sql
cc -fpic -g -I/usr/local/pgsql-9.6beta3/include/server -I/home/greg/.Wicci/Core/C_lib -Wall -std=gnu99 -o /home/greg/.Wicci/Make/wicci1/spx.o -c spx.c
In file included from spx-calls.h:23:0,
                 from spx.h:36,
                 from spx.c:20:
spx.c: In function ‘RowColDatumType’:
spx.c:1615:2: warning: format ‘%d’ expects argument of type ‘int’, but argument 9 has type ‘uint64 {aka long unsigned int}’ [-Wformat=]
  );
  ^
debug-log.h:56:22: note: in definition of macro ‘MSG_OUT’
  fprintf(debug_out, #level " " __VA_ARGS__);   \
                      ^
debug-log.h:74:22: note: in expansion of macro ‘BUG_OUT’
  if ( ! (bool_exp) ) BUG_OUT(      \
                      ^
debug-log.h:82:3: note: in expansion of macro ‘AssertExpFuncMore’
   AssertExpFuncMore(bool_exp, func, ", " msg, ## __VA_ARGS__)
   ^
spx-calls.h:146:2: note: in expansion of macro ‘AssertExpFuncMsg’
  AssertExpFuncMsg(bool_exp, JoinCalls(calls), ## __VA_ARGS__)
  ^
spx-calls.h:150:2: note: in expansion of macro ‘AssertByMsg_’
  AssertByMsg_(_CALL_, bool_exp, ## __VA_ARGS__)
  ^
spx.c:1611:2: note: in expansion of macro ‘CallAssertMsg’
  CallAssertMsg(
  ^
In file included from /usr/local/pgsql-9.6beta3/include/server/postgres.h:48:0,
                 from spx.h:28,
                 from spx.c:20:
debug-log.h:75:3: warning: format ‘%d’ expects argument of type ‘int’, but argument 8 has type ‘uint64 {aka long unsigned int}’ [-Wformat=]
   "%s:%d:\n\tExpected %s in %s" more,    \
   ^
/usr/local/pgsql-9.6beta3/include/server/utils/elog.h:107:14: note: in definition of macro ‘ereport_domain’
    errfinish rest; \
              ^
debug-log.h:52:2: note: in expansion of macro ‘ereport’
  ereport(level, ( errmsg( __VA_ARGS__ ) ) )
  ^
debug-log.h:59:2: note: in expansion of macro ‘EREPORT_LEVEL_MSG’
  EREPORT_LEVEL_MSG(level, __VA_ARGS__ ); \
  ^
debug-log.h:69:22: note: in expansion of macro ‘MSG_OUT’
 #define BUG_OUT(...) MSG_OUT(ERROR, __VA_ARGS__)
                      ^
debug-log.h:74:22: note: in expansion of macro ‘BUG_OUT’
  if ( ! (bool_exp) ) BUG_OUT(      \
                      ^
debug-log.h:82:3: note: in expansion of macro ‘AssertExpFuncMore’
   AssertExpFuncMore(bool_exp, func, ", " msg, ## __VA_ARGS__)
   ^
spx-calls.h:146:2: note: in expansion of macro ‘AssertExpFuncMsg’
  AssertExpFuncMsg(bool_exp, JoinCalls(calls), ## __VA_ARGS__)
  ^
spx-calls.h:150:2: note: in expansion of macro ‘AssertByMsg_’
  AssertByMsg_(_CALL_, bool_exp, ## __VA_ARGS__)
  ^
spx.c:1611:2: note: in expansion of macro ‘CallAssertMsg’
  CallAssertMsg(
  ^
In file included from spx-calls.h:23:0,
                 from spx.h:36,
                 from spx.c:20:
spx.c: In function ‘SpxAccessDB’:
spx.c:1796:47: warning: format ‘%d’ expects argument of type ‘int’, but argument 4 has type ‘uint64 {aka long unsigned int}’ [-Wformat=]
  SPI_processed, status,SpxQueryDecode(status) );
                                               ^
debug-log.h:56:22: note: in definition of macro ‘MSG_OUT’
  fprintf(debug_out, #level " " __VA_ARGS__);   \
                      ^
spx-calls.h:187:2: note: in expansion of macro ‘DEBUG_OUT’
  DEBUG_OUT("%s:\n\t" format, JoinCalls(_CALL_), ## __VA_ARGS__)
  ^
spx.c:1795:3: note: in expansion of macro ‘CALL_DEBUG_OUT’
   CALL_DEBUG_OUT( "tuples: %d, status: %d %s",
   ^
In file included from /usr/local/pgsql-9.6beta3/include/server/postgres.h:48:0,
                 from spx.h:28,
                 from spx.c:20:
spx-calls.h:187:12: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘uint64 {aka long unsigned int}’ [-Wformat=]
  DEBUG_OUT("%s:\n\t" format, JoinCalls(_CALL_), ## __VA_ARGS__)
            ^
/usr/local/pgsql-9.6beta3/include/server/utils/elog.h:107:14: note: in definition of macro ‘ereport_domain’
    errfinish rest; \
              ^
debug-log.h:52:2: note: in expansion of macro ‘ereport’
  ereport(level, ( errmsg( __VA_ARGS__ ) ) )
  ^
debug-log.h:59:2: note: in expansion of macro ‘EREPORT_LEVEL_MSG’
  EREPORT_LEVEL_MSG(level, __VA_ARGS__ ); \
  ^
debug-log.h:64:2: note: in expansion of macro ‘MSG_OUT’
  MSG_OUT(NOTICE, __VA_ARGS__);  \
  ^
spx-calls.h:187:2: note: in expansion of macro ‘DEBUG_OUT’
  DEBUG_OUT("%s:\n\t" format, JoinCalls(_CALL_), ## __VA_ARGS__)
  ^
spx.c:1795:3: note: in expansion of macro ‘CALL_DEBUG_OUT’
   CALL_DEBUG_OUT( "tuples: %d, status: %d %s",
   ^
In file included from spx-calls.h:23:0,
                 from spx.h:36,
                 from spx.c:20:
spx.c: In function ‘Update1’:
spx.c:1808:2: warning: format ‘%d’ expects argument of type ‘int’, but argument 7 has type ‘uint64 {aka long unsigned int}’ [-Wformat=]
  );
  ^
debug-log.h:56:22: note: in definition of macro ‘MSG_OUT’
  fprintf(debug_out, #level " " __VA_ARGS__);   \
                      ^
debug-log.h:74:22: note: in expansion of macro ‘BUG_OUT’
  if ( ! (bool_exp) ) BUG_OUT(      \
                      ^
debug-log.h:82:3: note: in expansion of macro ‘AssertExpFuncMore’
   AssertExpFuncMore(bool_exp, func, ", " msg, ## __VA_ARGS__)
   ^
spx-calls.h:146:2: note: in expansion of macro ‘AssertExpFuncMsg’
  AssertExpFuncMsg(bool_exp, JoinCalls(calls), ## __VA_ARGS__)
  ^
spx-calls.h:150:2: note: in expansion of macro ‘AssertByMsg_’
  AssertByMsg_(_CALL_, bool_exp, ## __VA_ARGS__)
  ^
spx.c:1805:2: note: in expansion of macro ‘CallAssertMsg’
  CallAssertMsg(
  ^
In file included from /usr/local/pgsql-9.6beta3/include/server/postgres.h:48:0,
                 from spx.h:28,
                 from spx.c:20:
debug-log.h:75:3: warning: format ‘%d’ expects argument of type ‘int’, but argument 6 has type ‘uint64 {aka long unsigned int}’ [-Wformat=]
   "%s:%d:\n\tExpected %s in %s" more,    \
   ^
/usr/local/pgsql-9.6beta3/include/server/utils/elog.h:107:14: note: in definition of macro ‘ereport_domain’
    errfinish rest; \
              ^
debug-log.h:52:2: note: in expansion of macro ‘ereport’
  ereport(level, ( errmsg( __VA_ARGS__ ) ) )
  ^
debug-log.h:59:2: note: in expansion of macro ‘EREPORT_LEVEL_MSG’
  EREPORT_LEVEL_MSG(level, __VA_ARGS__ ); \
  ^
debug-log.h:69:22: note: in expansion of macro ‘MSG_OUT’
 #define BUG_OUT(...) MSG_OUT(ERROR, __VA_ARGS__)
                      ^
debug-log.h:74:22: note: in expansion of macro ‘BUG_OUT’
  if ( ! (bool_exp) ) BUG_OUT(      \
                      ^
debug-log.h:82:3: note: in expansion of macro ‘AssertExpFuncMore’
   AssertExpFuncMore(bool_exp, func, ", " msg, ## __VA_ARGS__)
   ^
spx-calls.h:146:2: note: in expansion of macro ‘AssertExpFuncMsg’
  AssertExpFuncMsg(bool_exp, JoinCalls(calls), ## __VA_ARGS__)
  ^
spx-calls.h:150:2: note: in expansion of macro ‘AssertByMsg_’
  AssertByMsg_(_CALL_, bool_exp, ## __VA_ARGS__)
  ^
spx.c:1805:2: note: in expansion of macro ‘CallAssertMsg’
  CallAssertMsg(
  ^
In file included from spx-calls.h:23:0,
                 from spx.h:36,
                 from spx.c:20:
spx.c: In function ‘Query1’:
spx.c:1935:3: warning: format ‘%d’ expects argument of type ‘int’, but argument 7 has type ‘uint64 {aka long unsigned int}’ [-Wformat=]
   );
   ^
debug-log.h:56:22: note: in definition of macro ‘MSG_OUT’
  fprintf(debug_out, #level " " __VA_ARGS__);   \
                      ^
debug-log.h:74:22: note: in expansion of macro ‘BUG_OUT’
  if ( ! (bool_exp) ) BUG_OUT(      \
                      ^
debug-log.h:82:3: note: in expansion of macro ‘AssertExpFuncMore’
   AssertExpFuncMore(bool_exp, func, ", " msg, ## __VA_ARGS__)
   ^
spx-calls.h:146:2: note: in expansion of macro ‘AssertExpFuncMsg’
  AssertExpFuncMsg(bool_exp, JoinCalls(calls), ## __VA_ARGS__)
  ^
spx-calls.h:150:2: note: in expansion of macro ‘AssertByMsg_’
  AssertByMsg_(_CALL_, bool_exp, ## __VA_ARGS__)
  ^
spx.c:1932:2: note: in expansion of macro ‘CallAssertMsg’
  CallAssertMsg(
  ^
In file included from /usr/local/pgsql-9.6beta3/include/server/postgres.h:48:0,
                 from spx.h:28,
                 from spx.c:20:
debug-log.h:75:3: warning: format ‘%d’ expects argument of type ‘int’, but argument 6 has type ‘uint64 {aka long unsigned int}’ [-Wformat=]
   "%s:%d:\n\tExpected %s in %s" more,    \
   ^
/usr/local/pgsql-9.6beta3/include/server/utils/elog.h:107:14: note: in definition of macro ‘ereport_domain’
    errfinish rest; \
              ^
debug-log.h:52:2: note: in expansion of macro ‘ereport’
  ereport(level, ( errmsg( __VA_ARGS__ ) ) )
  ^
debug-log.h:59:2: note: in expansion of macro ‘EREPORT_LEVEL_MSG’
  EREPORT_LEVEL_MSG(level, __VA_ARGS__ ); \
  ^
debug-log.h:69:22: note: in expansion of macro ‘MSG_OUT’
 #define BUG_OUT(...) MSG_OUT(ERROR, __VA_ARGS__)
                      ^
debug-log.h:74:22: note: in expansion of macro ‘BUG_OUT’
  if ( ! (bool_exp) ) BUG_OUT(      \
                      ^
debug-log.h:82:3: note: in expansion of macro ‘AssertExpFuncMore’
   AssertExpFuncMore(bool_exp, func, ", " msg, ## __VA_ARGS__)
   ^
spx-calls.h:146:2: note: in expansion of macro ‘AssertExpFuncMsg’
  AssertExpFuncMsg(bool_exp, JoinCalls(calls), ## __VA_ARGS__)
  ^
spx-calls.h:150:2: note: in expansion of macro ‘AssertByMsg_’
  AssertByMsg_(_CALL_, bool_exp, ## __VA_ARGS__)
  ^
spx.c:1932:2: note: in expansion of macro ‘CallAssertMsg’
  CallAssertMsg(
  ^
cc -fpic -g -I/usr/local/pgsql-9.6beta3/include/server -I/home/greg/.Wicci/Core/C_lib -Wall -std=gnu99 -o /home/greg/.Wicci/Make/wicci1/refs.o -c refs.c
rm -f /home/greg/.Wicci/Make/wicci1/spx.so
cc -fpic -g -I/usr/local/pgsql-9.6beta3/include/server -I/home/greg/.Wicci/Core/C_lib -Wall -std=gnu99 -shared -o /home/greg/.Wicci/Make/wicci1/spx.so  /home/greg/.Wicci/Make/wicci1/spx.o /home/greg/.Wicci/Make/wicci1/refs.o /home/greg/.Wicci/Make/wicci1/debug-log.o
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f spx-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/spx-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/spx-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/spx-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
psql:settings.sql:6: NOTICE:  00000: 
---> META declare_system_schema(text)
CREATE SCHEMA s1_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
     set_schema_path     
-------------------------
 {s1_refs,s0_lib,public}
(1 row)

psql:settings.sql:7: NOTICE:  00000: new_schema_name_id(schema_names) S0_lib ->  5 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:settings.sql:7: NOTICE:  00000: new_schema_name_id(schema_names) S1_refs ->  6 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:settings.sql:7: NOTICE:  00000: new_schema_name_id(schema_names) S2_core ->  7 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:settings.sql:7: NOTICE:  00000: new_schema_name_id(schema_names) S3_more ->  8 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:settings.sql:7: NOTICE:  00000: new_schema_name_id(schema_names) S4_doc ->  9 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:settings.sql:7: NOTICE:  00000: new_schema_name_id(schema_names) S5_xml ->  10 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:settings.sql:7: NOTICE:  00000: new_schema_name_id(schema_names) S6_http ->  11 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:settings.sql:7: NOTICE:  00000: new_schema_name_id(schema_names) S7_wicci ->  12 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 ensure_schema_ready 
---------------------
 sql_wicci_ready()
(1 row)

psql:spx-schema.sql:3: NOTICE:  00000: new_schema_name_id(schema_names) s1_refs ->  13 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                           set_file                            
---------------------------------------------------------------
 schema spx-schema.sql, module spx-schema, revision $Id, id 34
(1 row)

CREATE TABLE
COMMENT
COMMENT
COMMENT
COMMENT
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
psql:spx-schema.sql:173: NOTICE:  00000: trigger "our_type_inserter" for relation "our_types" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP TRIGGER
CREATE TRIGGER
psql:spx-schema.sql:179: NOTICE:  00000: trigger "our_type_update" for relation "our_types" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP TRIGGER
CREATE TRIGGER
CREATE TABLE
COMMENT
COMMENT
COMMENT
COMMENT
COMMENT
COMMENT
psql:spx-schema.sql:215: NOTICE:  00000: trigger "our_procs_update" for relation "our_procs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP TRIGGER
CREATE TRIGGER
CREATE TABLE
COMMENT
CREATE FUNCTION
COMMENT
psql:spx-schema.sql:260: NOTICE:  00000: trigger "our_procs_types_inserter" for relation "our_procs_types" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP TRIGGER
CREATE TRIGGER
CREATE FUNCTION
COMMENT
psql:spx-schema.sql:304: NOTICE:  00000: trigger "our_procs_before_inserter" for relation "our_procs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP TRIGGER
CREATE TRIGGER
CREATE FUNCTION
COMMENT
psql:spx-schema.sql:336: NOTICE:  00000: trigger "our_procs_after_inserter" for relation "our_procs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP TRIGGER
CREATE TRIGGER
CREATE FUNCTION
CREATE FUNCTION
COMMENT
     declare_proc      
-----------------------
 declare_type(regtype)
(1 row)

        declare_proc        
----------------------------
 declare_proc(regprocedure)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f spx-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/spx-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/spx-code.sql-out-err /home/greg/.Wicci/Make/wicci1/spx-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
     set_schema_path     
-------------------------
 {s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 sql_wicci_ready()
(1 row)

                         set_file                          
-----------------------------------------------------------
 schema spx-code.sql, module spx-code, revision $Id, id 35
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE VIEW
CREATE VIEW
CREATE VIEW
COMMENT
CREATE VIEW
CREATE VIEW
COMMENT
            oid_            |    name_     | schema_id |   rettype_   | minargs_ | maxargs_ | argtypes_ | name_size_ | sum_text_ | sum_nargs_ 
----------------------------+--------------+-----------+--------------+----------+----------+-----------+------------+-----------+------------
 declare_type(regtype)      | declare_type |        13 | regtype      |        1 |        1 | 2206      |         16 |        32 |          2
 declare_proc(regprocedure) | declare_proc |        13 | regprocedure |        1 |        1 | 2202      |         16 |        32 |          2
(2 rows)

CREATE VIEW
CREATE VIEW
COMMENT
CREATE VIEW
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
       declare_proc       
--------------------------
 xml_pure_text(text,text)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f spx-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/spx-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/spx-test.sql-out-err /home/greg/.Wicci/Make/wicci1/spx-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
     set_schema_path     
-------------------------
 {s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 spx_ready()
(1 row)

                         set_file                          
-----------------------------------------------------------
 schema spx-test.sql, module spx-test, revision $Id, id 36
(1 row)

 test_func 
-----------
(0 rows)

        test_func         
--------------------------
 spx_type_by_oid(regtype)
(1 row)

           test_func           
-------------------------------
 spx_proc_by_oid(regprocedure)
(1 row)

                     test_func                     
---------------------------------------------------
 spx_proc_call_proc_str(regprocedure,regprocedure)
(1 row)

                     test_func                     
---------------------------------------------------
 spx_proc_call_proc_str(regprocedure,regprocedure)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f spx.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/spx.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/spx.sql-out-err /home/greg/.Wicci/Make/wicci1/spx.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
     set_schema_path     
-------------------------
 {s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 spx_ready()
(1 row)

                    set_file                     
-------------------------------------------------
 schema spx.sql, module spx, revision $Id, id 37
(1 row)

                                require_module                                
------------------------------------------------------------------------------
 module id: 35 schema: s1_refs name: spx-code filename: spx-code.sql rev: $Id
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f refs-type.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/refs-type.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/refs-type.sql-out-err /home/greg/.Wicci/Make/wicci1/refs-type.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
     set_schema_path     
-------------------------
 {s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 spx_ready()
(1 row)

                          set_file                           
-------------------------------------------------------------
 schema refs-type.sql, module refs-type, revision $Id, id 38
(1 row)

psql:refs-type.sql:32: NOTICE:  00000: type "ref_tags" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
psql:refs-type.sql:33: NOTICE:  00000: type "ref_ids" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
psql:refs-type.sql:34: NOTICE:  00000: type "refs_as_ints" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
CREATE DOMAIN
CREATE DOMAIN
CREATE DOMAIN
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
psql:refs-type.sql:138: NOTICE:  00000: type "refs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
psql:refs-type.sql:144: NOTICE:  42809: return type refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
CREATE FUNCTION
psql:refs-type.sql:148: NOTICE:  42809: argument type refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
CREATE FUNCTION
psql:refs-type.sql:158: WARNING:  42P17: type input function call_in_method should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:refs-type.sql:158: WARNING:  42P17: type output function call_out_method should not be volatile
LOCATION:  DefineType, typecmds.c:566
CREATE TYPE
 declare_type 
--------------
 refs
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE OPERATOR
CREATE OPERATOR
CREATE OPERATOR
CREATE OPERATOR
CREATE OPERATOR
CREATE OPERATOR
CREATE OPERATOR CLASS
psql:refs-type.sql:292: NOTICE:  00000: type "unchecked_refs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
psql:refs-type.sql:298: NOTICE:  42809: return type unchecked_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
CREATE FUNCTION
psql:refs-type.sql:302: NOTICE:  42809: argument type unchecked_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
CREATE FUNCTION
psql:refs-type.sql:309: WARNING:  42P17: type input function unchecked_call_in_method should not be volatile
LOCATION:  DefineType, typecmds.c:561
CREATE TYPE
psql:refs-type.sql:313: NOTICE:  00000: cast from type unchecked_refs to type refs does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP CAST
CREATE CAST
psql:refs-type.sql:317: NOTICE:  00000: cast from type refs to type unchecked_refs does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP CAST
CREATE CAST
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE CAST
psql:refs-type.sql:376: NOTICE:  00000: type "crefs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
psql:refs-type.sql:383: NOTICE:  42809: return type crefs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
CREATE FUNCTION
psql:refs-type.sql:388: NOTICE:  42809: return type crefs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
CREATE FUNCTION
psql:refs-type.sql:393: NOTICE:  42809: argument type crefs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
CREATE FUNCTION
psql:refs-type.sql:402: WARNING:  42P17: type input function crefs_in should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:refs-type.sql:402: WARNING:  42P17: type output function crefs_out should not be volatile
LOCATION:  DefineType, typecmds.c:566
CREATE TYPE
 declare_type 
--------------
 crefs
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f refs-meta-triggers.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/refs-meta-triggers.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/refs-meta-triggers.sql-out-err /home/greg/.Wicci/Make/wicci1/refs-meta-triggers.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
     set_schema_path     
-------------------------
 {s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 spx_ready()
(1 row)

                                   set_file                                    
-------------------------------------------------------------------------------
 schema refs-meta-triggers.sql, module refs-meta-triggers, revision $Id, id 39
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f refs-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/refs-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/refs-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/refs-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
     set_schema_path     
-------------------------
 {s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 spx_ready()
(1 row)

                            set_file                             
-----------------------------------------------------------------
 schema refs-schema.sql, module refs-schema, revision $Id, id 40
(1 row)

CREATE TABLE
COMMENT
COMMENT
COMMENT
COMMENT
COMMENT
COMMENT
psql:refs-schema.sql:60: NOTICE:  00000: sequence "typed_object_classes_tag_seq" does not exist, skipping
LOCATION:  DropErrorMsgNonExistent, tablecmds.c:763
DROP SEQUENCE
CREATE SEQUENCE
CREATE FUNCTION
COMMENT
psql:refs-schema.sql:89: NOTICE:  00000: trigger "toc_before_insert" for relation "typed_object_classes" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP TRIGGER
CREATE TRIGGER
CREATE FUNCTION
COMMENT
psql:refs-schema.sql:112: NOTICE:  00000: trigger "toc_before_update" for relation "typed_object_classes" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP TRIGGER
CREATE TRIGGER
CREATE TABLE
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
psql:refs-schema.sql:205: NOTICE:  00000: trigger "tom_before_insert" for relation "typed_object_methods" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP TRIGGER
CREATE TRIGGER
CREATE TABLE
COMMENT
COMMENT
CREATE TABLE
COMMENT
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE ref_keys_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE ref_keys_row_handles (
	handle handles NOT NULL UNIQUE,
	key refs PRIMARY KEY  REFERENCES ref_keys(key)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE ref_keys_row_handles IS
'row handles associated with ref_keys rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION ref_keys_row_get_(handle handles, key refs)
RETURNS ref_keys LANGUAGE SQL  STRICT AS
'SELECT ref_keys.*
 FROM ref_keys,ref_keys_row_handles
WHERE
ref_keys_row_handles.handle=$1 AND ref_keys_row_handles.key=$2
AND
ref_keys.key=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION ref_keys_row_get_(handles,refs) IS
'ref_keys_row_get_(handle, key): find existing handle for row of ref_keys; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION ref_keys_row_set_(handle handles, key refs)
RETURNS ref_keys LANGUAGE SQL  STRICT AS
'
	INSERT INTO ref_keys_row_handles VALUES ( $1, $2);
	SELECT ref_keys_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION ref_keys_row_set_(handles,refs) IS
'ref_keys_row_set_(handle, key): make new handle for row of ref_keys; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION ref_keys_row(handle handles, key refs)
RETURNS ref_keys LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   ref_keys_row_get_( $1, $2),
   ref_keys_row_set_( $1, $2)
  )FROM debug_enter(
  ''ref_keys_row(handles, refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION ref_keys_row(handles,refs) IS
'ref_keys_row(handle, key): ensure handle for row of ref_keys given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION ref_keys_row(handle handles)
RETURNS ref_keys LANGUAGE SQL  STRICT AS
'SELECT ref_keys.*
  FROM ref_keys, ref_keys_row_handles
  WHERE $1 = ref_keys_row_handles.handle
    AND ref_keys.key=ref_keys_row_handles.key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION ref_keys_row(handles) IS
's1_refs.ref_keys_row(handle): return a row given a handle for ref_keys';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION ref_keys_key(handle handles)
RETURNS refs LANGUAGE SQL  STRICT AS
'SELECT key FROM ref_keys_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION ref_keys_key(handles) IS
'ref_keys_key(handle): given a row handle for ref_keys return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION ref_keys_key(handle handles, key refs)
RETURNS refs LANGUAGE SQL  STRICT AS
'SELECT (ref_keys_row( $1, $2)).key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-schema.sql:247: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION ref_keys_key(handles,refs) IS
's1_refs.ref_keys_key(handle, key): set handle for primary key of ref_keys and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                           create_handles_for                                                           
----------------------------------------------------------------------------------------------------------------------------------------
 ({ref_keys_row_handles},"{""ref_keys_row(handles,refs)"",ref_keys_row(handles),ref_keys_key(handles),""ref_keys_key(handles,refs)""}")
(1 row)

psql:refs-schema.sql:265: NOTICE:  00000: merging column "tag_" with inherited definition
LOCATION:  MergeAttributes, tablecmds.c:1825
CREATE TABLE
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f refs-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/refs-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/refs-code.sql-out-err /home/greg/.Wicci/Make/wicci1/refs-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
     set_schema_path     
-------------------------
 {s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 spx_ready()
(1 row)

                          set_file                           
-------------------------------------------------------------
 schema refs-code.sql, module refs-code, revision $Id, id 41
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE VIEW
COMMENT
CREATE VIEW
CREATE VIEW
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE VIEW
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
 declare_type 
--------------
 ref_tags
(1 row)

                   declare_ref_type_class                   
------------------------------------------------------------
 (0,ref_keys,refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

            type_class_op_method             
---------------------------------------------
 (0,"ref_text_op(refs)","ref_textout(refs)")
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f refs-naming.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/refs-naming.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/refs-naming.sql-out-err /home/greg/.Wicci/Make/wicci1/refs-naming.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
     set_schema_path     
-------------------------
 {s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 refs_ready()
(1 row)

                                 set_file                                  
---------------------------------------------------------------------------
 schema refs-naming-code.sql, module refs-naming-code, revision $Id, id 42
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f refs-create-types.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/refs-create-types.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/refs-create-types.sql-out-err /home/greg/.Wicci/Make/wicci1/refs-create-types.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
     set_schema_path     
-------------------------
 {s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 refs_ready()
(1 row)

                                  set_file                                   
-----------------------------------------------------------------------------
 schema refs-create-types.sql, module refs-create-types, revision $Id, id 43
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f refs-create.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/refs-create.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/refs-create.sql-out-err /home/greg/.Wicci/Make/wicci1/refs-create.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
     set_schema_path     
-------------------------
 {s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 refs_ready()
(1 row)

                            set_file                             
-----------------------------------------------------------------
 schema refs-create.sql, module refs-create, revision $Id, id 44
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f refs-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/refs-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/refs-test.sql-out-err /home/greg/.Wicci/Make/wicci1/refs-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
     set_schema_path     
-------------------------
 {s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 refs_ready()
(1 row)

                          set_file                           
-------------------------------------------------------------
 schema refs-test.sql, module refs-test, revision $Id, id 45
(1 row)

   test_func   
---------------
 ref_tag(refs)
(1 row)

  test_func   
--------------
 ref_id(refs)
(1 row)

  test_func   
--------------
 ref_id(refs)
(1 row)

  test_func   
--------------
 is_nil(refs)
(1 row)

  test_func   
--------------
 is_nil(refs)
(1 row)

  test_func   
--------------
 is_nil(refs)
(1 row)

                  test_func                  
---------------------------------------------
 unchecked_ref_from_tag_id(ref_tags,ref_ids)
(1 row)

                  test_func                  
---------------------------------------------
 unchecked_ref_from_tag_id(ref_tags,ref_ids)
(1 row)

     test_func     
-------------------
 ref_text_op(refs)
(1 row)

       test_func       
-----------------------
 call_out_method(refs)
(1 row)

                  test_func                   
----------------------------------------------
 refs_op_tag_to_method(regprocedure,ref_tags)
(1 row)

         test_func          
----------------------------
 refs_tag_to_type(ref_tags)
(1 row)

         test_func         
---------------------------
 refs_type_to_tag(regtype)
(1 row)

         test_func         
---------------------------
 ref_str(regclass,ref_ids)
(1 row)

             test_func             
-----------------------------------
 ref_str(regtype,regclass,ref_ids)
(1 row)

      test_func      
---------------------
 ref_str_match(text)
(1 row)

      test_func      
---------------------
 ref_str_parse(text)
(1 row)

      test_func      
---------------------
 ref_str_parse(text)
(1 row)

psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE foo_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: created shell type foo_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION foo_refs_in_op(cstring,oid,integer)
RETURNS foo_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  42809: return type foo_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:refs-test.sql:148: NOTICE:  00000: CREATED foo_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION foo_refs_out_op(foo_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  42809: argument type foo_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:refs-test.sql:148: NOTICE:  00000: CREATED foo_refs_out_op(foo_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE foo_refs (
  INPUT = foo_refs_in_op,
  OUTPUT = foo_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: WARNING:  42P17: type input function foo_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:refs-test.sql:148: WARNING:  42P17: type output function foo_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:refs-test.sql:148: NOTICE:  00000: CREATE TYPE foo_refs (
  INPUT = foo_refs_in_op,
  OUTPUT = foo_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS foo_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS foo_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (foo_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (foo_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (foo_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (foo_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION foo_refs_cmp(foo_refs, foo_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION foo_refs_cmp(foo_refs,foo_refs) IS
'foo_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION foo_refs_lt(foo_refs, foo_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION foo_refs_lt(foo_refs,foo_refs) IS
'foo_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = foo_refs,
	 rightarg = foo_refs,
	 procedure = foo_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION foo_refs_le(foo_refs, foo_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION foo_refs_le(foo_refs,foo_refs) IS
'foo_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = foo_refs,
	 rightarg = foo_refs,
	 procedure = foo_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION foo_refs_eq(foo_refs, foo_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION foo_refs_eq(foo_refs,foo_refs) IS
'foo_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = foo_refs,
	 rightarg = foo_refs,
	 procedure = foo_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION foo_refs_neq(foo_refs, foo_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION foo_refs_neq(foo_refs,foo_refs) IS
'foo_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = foo_refs,
	 rightarg = foo_refs,
	 procedure = foo_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION foo_refs_ge(foo_refs, foo_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION foo_refs_ge(foo_refs,foo_refs) IS
'foo_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = foo_refs,
	 rightarg = foo_refs,
	 procedure = foo_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION foo_refs_gt(foo_refs, foo_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION foo_refs_gt(foo_refs,foo_refs) IS
'foo_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = foo_refs,
	 rightarg = foo_refs,
	 procedure = foo_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS foo_refs_ops
		DEFAULT FOR TYPE foo_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       foo_refs_cmp(foo_refs, foo_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE foo_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE foo_rows (
	ref foo_refs PRIMARY KEY,
	name_ text NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE foo_rows IS
' - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION foo_rows_1_exists(_ref foo_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM foo_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION foo_rows_1_exists(foo_refs) IS
'foo_rows_1_exists(_ref): referential integrity test method for row of foo_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_foo_from_id(ref_ids)
RETURNS foo_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''foo_refs'', ''foo_rows'', $1
	)::foo_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_foo_from_id(ref_ids) IS
'unchecked_foo_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION foo_nil()
RETURNS foo_refs LANGUAGE SQL  AS
'	SELECT unchecked_foo_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION foo_nil() IS
'foo_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_name_ref_schema(text,boolean,boolean,regtype,regprocedure,text)
INSERT INTO foo_rows (ref, name_) VALUES( foo_nil(), '')
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS foo_rows_no_update_trigger ON foo_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: trigger "foo_rows_no_update_trigger" for relation "foo_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:refs-test.sql:148: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER foo_rows_no_update_trigger
  BEFORE UPDATE ON foo_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_foo(_ref refs)
RETURNS foo_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM foo_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_foo(refs) IS
'try_foo(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_foo_text(foo_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM foo_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_foo_text(foo_refs) IS
'try_foo_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION foo_text(foo_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_foo_text( $1),''foo_text(foo_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION foo_text(foo_refs) IS
'foo_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_foo_length(foo_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM foo_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_foo_length(foo_refs) IS
'try_foo_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION foo_length(foo_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_foo_length( $1),''foo_length(foo_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION foo_length(foo_refs) IS
'foo_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_foo(text)
RETURNS foo_refs LANGUAGE SQL  STRICT AS
'SELECT CASE
	WHEN $1 = '''' THEN foo_nil()
	ELSE ( SELECT ref FROM foo_rows WHERE name_ = $1 )
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_foo(text) IS
's1_refs.try_foo(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_foo(text)
RETURNS foo_refs LANGUAGE SQL  AS
'SELECT non_null(try_foo( $1),''find_foo(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_foo(text) IS
'find_foo(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_foo_in(text)
RETURNS foo_refs LANGUAGE SQL  AS
'SELECT COALESCE(s1_refs.try_foo($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_foo_in(text) IS
'try_foo_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE foo_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE foo_seq OWNED BY foo_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_foo_ref()
RETURNS foo_refs LANGUAGE SQL  AS
'SELECT unchecked_foo_from_id(nextval(''foo_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_foo_ref() IS
'next_foo_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE foo_rows ALTER COLUMN ref SET DEFAULT next_foo_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_foo(text)
RETURNS foo_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name text := $1;
	maybe foo_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_foo(text)'';
BEGIN
	 IF _name IS NULL THEN RETURN foo_nil(); END IF;
	
	LOOP
		maybe := try_foo(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO foo_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_foo(text) IS
'try_get_foo(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_foo(text)
RETURNS foo_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_foo( $1),''get_foo(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_foo(text) IS
'get_foo(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_foo(VARIADIC text[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_foo(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:refs-test.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_foo(text[]) IS
'declare_foo(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                              create_name_ref_schema                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_foo_from_id(ref_ids),foo_nil(),try_foo(refs),foo_text(foo_refs),foo_length(foo_refs),find_foo(text),try_foo_in(text),next_foo_ref(),get_foo(text),declare_foo(text[])}
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f s1-refs.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/s1-refs.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/s1-refs.sql-out-err /home/greg/.Wicci/Make/wicci1/s1-refs.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
     set_schema_path     
-------------------------
 {s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 refs_ready()
(1 row)

                        set_file                         
---------------------------------------------------------
 schema s1-refs.sql, module s1-refs, revision $Id, id 46
(1 row)

make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S1_refs'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S2_core'
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f env-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/env-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/env-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/env-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
psql:settings.sql:6: NOTICE:  00000: 
---> META declare_system_schema(text)
CREATE SCHEMA s2_core
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
         set_schema_path         
---------------------------------
 {s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 refs_ready()
(1 row)

psql:env-schema.sql:3: NOTICE:  00000: new_schema_name_id(schema_names) s2_core ->  14 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                           set_file                            
---------------------------------------------------------------
 schema env-schema.sql, module env-schema, revision $Id, id 47
(1 row)

psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE env_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: created shell type env_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION env_refs_in_op(cstring,oid,integer)
RETURNS env_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  42809: return type env_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:env-schema.sql:18: NOTICE:  00000: CREATED env_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION env_refs_out_op(env_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  42809: argument type env_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:env-schema.sql:18: NOTICE:  00000: CREATED env_refs_out_op(env_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE env_refs (
  INPUT = env_refs_in_op,
  OUTPUT = env_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: WARNING:  42P17: type input function env_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:env-schema.sql:18: WARNING:  42P17: type output function env_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:env-schema.sql:18: NOTICE:  00000: CREATE TYPE env_refs (
  INPUT = env_refs_in_op,
  OUTPUT = env_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS env_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS env_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (env_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (env_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (env_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (env_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_refs_cmp(env_refs, env_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_refs_cmp(env_refs,env_refs) IS
'env_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_refs_lt(env_refs, env_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_refs_lt(env_refs,env_refs) IS
'env_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = env_refs,
	 rightarg = env_refs,
	 procedure = env_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_refs_le(env_refs, env_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_refs_le(env_refs,env_refs) IS
'env_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = env_refs,
	 rightarg = env_refs,
	 procedure = env_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_refs_eq(env_refs, env_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_refs_eq(env_refs,env_refs) IS
'env_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = env_refs,
	 rightarg = env_refs,
	 procedure = env_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_refs_neq(env_refs, env_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_refs_neq(env_refs,env_refs) IS
'env_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = env_refs,
	 rightarg = env_refs,
	 procedure = env_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_refs_ge(env_refs, env_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_refs_ge(env_refs,env_refs) IS
'env_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = env_refs,
	 rightarg = env_refs,
	 procedure = env_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_refs_gt(env_refs, env_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_refs_gt(env_refs,env_refs) IS
'env_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = env_refs,
	 rightarg = env_refs,
	 procedure = env_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS env_refs_ops
		DEFAULT FOR TYPE env_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       env_refs_cmp(env_refs, env_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 env_refs
(1 row)

psql:env-schema.sql:20: NOTICE:  00000: type "stati" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
COMMENT
CREATE FUNCTION
psql:env-schema.sql:38: NOTICE:  00000: type "env_stati" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
CREATE FUNCTION
CREATE FUNCTION
psql:env-schema.sql:60: NOTICE:  00000: type "key_value_pairs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
psql:env-schema.sql:87: NOTICE:  00000: type "env_pair_stati" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
psql:env-schema.sql:122: NOTICE:  00000: type "env_triple" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
COMMENT
CREATE FUNCTION
CREATE FUNCTION
psql:env-schema.sql:146: NOTICE:  00000: type "env_triple_stati" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
CREATE FUNCTION
CREATE FUNCTION
CREATE TABLE
COMMENT
psql:env-schema.sql:189: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE env_rows_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE env_rows_row_handles (
	handle handles NOT NULL UNIQUE,
	ref env_refs PRIMARY KEY  REFERENCES env_rows(ref)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE env_rows_row_handles IS
'row handles associated with env_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_rows_row_get_(handle handles, ref env_refs)
RETURNS env_rows LANGUAGE SQL  STRICT AS
'SELECT env_rows.*
 FROM env_rows,env_rows_row_handles
WHERE
env_rows_row_handles.handle=$1 AND env_rows_row_handles.ref=$2
AND
env_rows.ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_rows_row_get_(handles,env_refs) IS
'env_rows_row_get_(handle, ref): find existing handle for row of env_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_rows_row_set_(handle handles, ref env_refs)
RETURNS env_rows LANGUAGE SQL  STRICT AS
'
	INSERT INTO env_rows_row_handles VALUES ( $1, $2);
	SELECT env_rows_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_rows_row_set_(handles,env_refs) IS
'env_rows_row_set_(handle, ref): make new handle for row of env_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_rows_row(handle handles, ref env_refs)
RETURNS env_rows LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   env_rows_row_get_( $1, $2),
   env_rows_row_set_( $1, $2)
  )FROM debug_enter(
  ''env_rows_row(handles, env_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_rows_row(handles,env_refs) IS
'env_rows_row(handle, ref): ensure handle for row of env_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_rows_row(handle handles)
RETURNS env_rows LANGUAGE SQL  STRICT AS
'SELECT env_rows.*
  FROM env_rows, env_rows_row_handles
  WHERE $1 = env_rows_row_handles.handle
    AND env_rows.ref=env_rows_row_handles.ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_rows_row(handles) IS
's2_core.env_rows_row(handle): return a row given a handle for env_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_rows_ref(handle handles)
RETURNS env_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM env_rows_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_rows_ref(handles) IS
'env_rows_ref(handle): given a row handle for env_rows return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_rows_ref(handle handles, ref env_refs)
RETURNS env_refs LANGUAGE SQL  STRICT AS
'SELECT (env_rows_row( $1, $2)).ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:189: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_rows_ref(handles,env_refs) IS
's2_core.env_rows_ref(handle, ref): set handle for primary key of env_rows and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                               create_handles_for                                                               
------------------------------------------------------------------------------------------------------------------------------------------------
 ({env_rows_row_handles},"{""env_rows_row(handles,env_refs)"",env_rows_row(handles),env_rows_ref(handles),""env_rows_ref(handles,env_refs)""}")
(1 row)

psql:env-schema.sql:190: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_rows_2_exists(_ref env_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM env_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:190: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_rows_2_exists(env_refs) IS
'env_rows_2_exists(_ref): referential integrity test method for row of env_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:190: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS env_rows_no_update_trigger ON env_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:190: NOTICE:  00000: trigger "env_rows_no_update_trigger" for relation "env_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:env-schema.sql:190: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER env_rows_no_update_trigger
  BEFORE UPDATE ON env_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:190: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_env_from_id(ref_ids)
RETURNS env_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''env_refs'', ''env_rows'', $1
	)::env_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:190: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_env_from_id(ref_ids) IS
'unchecked_env_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:190: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_nil()
RETURNS env_refs LANGUAGE SQL  AS
'	SELECT unchecked_env_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:190: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_nil() IS
'env_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:190: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env(_ref refs)
RETURNS env_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM env_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:190: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env(refs) IS
'try_env(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
               declare_ref_class_with_funcs               
----------------------------------------------------------
 {unchecked_env_from_id(ref_ids),env_nil(),try_env(refs)}
(1 row)

psql:env-schema.sql:191: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE env_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:191: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE env_seq OWNED BY env_rows.ref MINVALUE 2 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:191: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_env_ref()
RETURNS env_refs LANGUAGE SQL  AS
'SELECT unchecked_env_from_id(nextval(''env_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:191: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_env_ref() IS
'next_env_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:191: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE env_rows ALTER COLUMN ref SET DEFAULT next_env_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_simple_serial 
----------------------
 next_env_ref()
(1 row)

INSERT 0 1
CREATE FUNCTION
CREATE FUNCTION
COMMENT
INSERT 0 1
psql:env-schema.sql:213: NOTICE:  00000: sequence "env_rows_system_id_seq" does not exist, skipping
LOCATION:  DropErrorMsgNonExistent, tablecmds.c:763
DROP SEQUENCE
CREATE SEQUENCE
CREATE FUNCTION
CREATE FUNCTION
COMMENT
INSERT 0 1
CREATE TABLE
COMMENT
CREATE TABLE
COMMENT
COMMENT
psql:env-schema.sql:266: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS env_bindings_no_update_trigger ON env_bindings CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:266: NOTICE:  00000: trigger "env_bindings_no_update_trigger" for relation "env_bindings" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:env-schema.sql:266: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER env_bindings_no_update_trigger
  BEFORE UPDATE ON env_bindings
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_monotonic 
-------------------
 env_bindings
(1 row)

CREATE TABLE
COMMENT
psql:env-schema.sql:283: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS env_associations_no_update_trigger ON env_associations CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:env-schema.sql:283: NOTICE:  00000: trigger "env_associations_no_update_trigger" for relation "env_associations" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:env-schema.sql:283: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER env_associations_no_update_trigger
  BEFORE UPDATE ON env_associations
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_monotonic 
-------------------
 env_associations
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f env-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/env-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/env-code.sql-out-err /home/greg/.Wicci/Make/wicci1/env-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
         set_schema_path         
---------------------------------
 {s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 refs_ready()
(1 row)

                         set_file                          
-----------------------------------------------------------
 schema env-code.sql, module env-code, revision $Id, id 48
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
 type_class_in  
----------------
 find_env(text)
(1 row)

             type_class_op_method             
----------------------------------------------
 (2,"ref_text_op(refs)","env_text(env_refs)")
(1 row)

CREATE VIEW
CREATE VIEW
CREATE VIEW
CREATE VIEW
CREATE VIEW
CREATE VIEW
CREATE VIEW
CREATE VIEW
CREATE VIEW
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f name.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/name.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/name.sql-out-err /home/greg/.Wicci/Make/wicci1/name.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
         set_schema_path         
---------------------------------
 {s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 env_refs_ready()
(1 row)

                           set_file                            
---------------------------------------------------------------
 schema env-schema.sql, module env-schema, revision $Id, id 47
(1 row)

psql:name.sql:18: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE name_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: created shell type name_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION name_refs_in_op(cstring,oid,integer)
RETURNS name_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  42809: return type name_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:name.sql:18: NOTICE:  00000: CREATED name_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION name_refs_out_op(name_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  42809: argument type name_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:name.sql:18: NOTICE:  00000: CREATED name_refs_out_op(name_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE name_refs (
  INPUT = name_refs_in_op,
  OUTPUT = name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: WARNING:  42P17: type input function name_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:name.sql:18: WARNING:  42P17: type output function name_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:name.sql:18: NOTICE:  00000: CREATE TYPE name_refs (
  INPUT = name_refs_in_op,
  OUTPUT = name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS name_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS name_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (name_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (name_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (name_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (name_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION name_refs_cmp(name_refs, name_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION name_refs_cmp(name_refs,name_refs) IS
'name_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION name_refs_lt(name_refs, name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION name_refs_lt(name_refs,name_refs) IS
'name_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = name_refs,
	 rightarg = name_refs,
	 procedure = name_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION name_refs_le(name_refs, name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION name_refs_le(name_refs,name_refs) IS
'name_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = name_refs,
	 rightarg = name_refs,
	 procedure = name_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION name_refs_eq(name_refs, name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION name_refs_eq(name_refs,name_refs) IS
'name_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = name_refs,
	 rightarg = name_refs,
	 procedure = name_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION name_refs_neq(name_refs, name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION name_refs_neq(name_refs,name_refs) IS
'name_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = name_refs,
	 rightarg = name_refs,
	 procedure = name_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION name_refs_ge(name_refs, name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION name_refs_ge(name_refs,name_refs) IS
'name_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = name_refs,
	 rightarg = name_refs,
	 procedure = name_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION name_refs_gt(name_refs, name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION name_refs_gt(name_refs,name_refs) IS
'name_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = name_refs,
	 rightarg = name_refs,
	 procedure = name_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS name_refs_ops
		DEFAULT FOR TYPE name_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       name_refs_cmp(name_refs, name_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE name_rows (
	ref name_refs PRIMARY KEY,
	name_ text NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE name_rows IS
' - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION name_rows_3_exists(_ref name_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM name_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION name_rows_3_exists(name_refs) IS
'name_rows_3_exists(_ref): referential integrity test method for row of name_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_name_from_id(ref_ids)
RETURNS name_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''name_refs'', ''name_rows'', $1
	)::name_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_name_from_id(ref_ids) IS
'unchecked_name_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION name_nil()
RETURNS name_refs LANGUAGE SQL  AS
'	SELECT unchecked_name_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION name_nil() IS
'name_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_name_ref_schema(text,boolean,boolean,regtype,regprocedure,text)
INSERT INTO name_rows (ref, name_) VALUES( name_nil(), '')
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS name_rows_no_update_trigger ON name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: trigger "name_rows_no_update_trigger" for relation "name_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:name.sql:18: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER name_rows_no_update_trigger
  BEFORE UPDATE ON name_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_name(_ref refs)
RETURNS name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM name_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_name(refs) IS
'try_name(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_name_text(name_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_name_text(name_refs) IS
'try_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION name_text(name_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_name_text( $1),''name_text(name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION name_text(name_refs) IS
'name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_name_length(name_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_name_length(name_refs) IS
'try_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION name_length(name_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_name_length( $1),''name_length(name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION name_length(name_refs) IS
'name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_name(text)
RETURNS name_refs LANGUAGE SQL  STRICT AS
'SELECT CASE
	WHEN $1 = '''' THEN name_nil()
	ELSE ( SELECT ref FROM name_rows WHERE name_ = $1 )
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_name(text) IS
's2_core.try_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_name(text)
RETURNS name_refs LANGUAGE SQL  AS
'SELECT non_null(try_name( $1),''find_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_name(text) IS
'find_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_name_in(text)
RETURNS name_refs LANGUAGE SQL  AS
'SELECT COALESCE(s2_core.try_name($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_name_in(text) IS
'try_name_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE name_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE name_seq OWNED BY name_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_name_ref()
RETURNS name_refs LANGUAGE SQL  AS
'SELECT unchecked_name_from_id(nextval(''name_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_name_ref() IS
'next_name_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE name_rows ALTER COLUMN ref SET DEFAULT next_name_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_name(text)
RETURNS name_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name text := $1;
	maybe name_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_name(text)'';
BEGIN
	 IF _name IS NULL THEN RETURN name_nil(); END IF;
	
	LOOP
		maybe := try_name(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO name_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_name(text) IS
'try_get_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_name(text)
RETURNS name_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_name( $1),''get_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_name(text) IS
'get_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_name(VARIADIC text[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_name(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_name(text[]) IS
'declare_name(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                    create_name_ref_schema                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_name_from_id(ref_ids),name_nil(),try_name(refs),name_text(name_refs),name_length(name_refs),find_name(text),try_name_in(text),next_name_ref(),get_name(text),declare_name(text[])}
(1 row)

CREATE FUNCTION
psql:name.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_name_value(env_refs, name_refs)
RETURNS refs LANGUAGE SQL STABLE AS
'SELECT env_key_value($1,$2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_name_value(env_refs,name_refs) IS
'env_name_value(): wrap env_key_value by create_name_ref_env_value_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   create_name_ref_env_value_func   
------------------------------------
 env_name_value(env_refs,name_refs)
(1 row)

psql:name.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_obj_name_value(env_refs, refs, name_refs)
RETURNS refs LANGUAGE SQL STABLE AS
'SELECT env_obj_feature_value($1,$2, $3)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_obj_name_value(env_refs,refs,name_refs) IS
'env_obj_name_value(): wrap env_obj_feature_value by create_name_ref_env_obj_value_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
     create_name_ref_env_obj_value_func      
---------------------------------------------
 env_obj_name_value(env_refs,refs,name_refs)
(1 row)

psql:name.sql:43: NOTICE:  00000: operator ^ does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP OPERATOR
CREATE OPERATOR
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f name-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/name-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/name-test.sql-out-err /home/greg/.Wicci/Make/wicci1/name-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
         set_schema_path         
---------------------------------
 {s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 env_refs_ready()
(1 row)

                               set_file                                
-----------------------------------------------------------------------
 schema name_refs-test.sql, module name_refs-test, revision $Id, id 49
(1 row)

 spx_debug_on 
--------------
            1
(1 row)

 refs_debug_on 
---------------
             1
(1 row)

 declare_name 
--------------
            1
(1 row)

psql:name-test.sql:14: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.name_text($1)
LOCATION:  SpxPlanQuery, spx.c:1554
psql:name-test.sql:14: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.name_text($1) ->  plan 0x241a998 nargs= 1
LOCATION:  SpxPlanQuery, spx.c:1567
psql:name-test.sql:14: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x241a998 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:name-test.sql:14: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:name-test.sql:14: NOTICE:  00000: RefEtcToValue.SpxQueryText.RowColStrPtr:
	Returning hello
LOCATION:  RowColStrPtr, spx.c:1757
   test_func    
----------------
 get_name(text)
(1 row)

psql:name-test.sql:20: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:  name_text('hello'::name_refs),
                   ^
LOCATION:  UnknownReport, spx.c:130
psql:name-test.sql:20: NOTICE:  00000: call_in_method.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.try_name_in($1::text)
LINE 3:  name_text('hello'::name_refs),
                   ^
LOCATION:  SpxPlanQuery, spx.c:1554
psql:name-test.sql:20: NOTICE:  00000: call_in_method.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.try_name_in($1::text) ->  plan 0x23a3068 nargs= 1
LINE 3:  name_text('hello'::name_refs),
                   ^
LOCATION:  SpxPlanQuery, spx.c:1567
psql:name-test.sql:20: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23a3068 nargs= 1, maxrows: 1
LINE 3:  name_text('hello'::name_refs),
                   ^
LOCATION:  SpxAccessDB, spx.c:1789
psql:name-test.sql:20: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:  name_text('hello'::name_refs),
                   ^
LOCATION:  SpxAccessDB, spx.c:1796
psql:name-test.sql:20: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:  name_text('hello'::name_refs),
                   ^
LOCATION:  RowColDatumType, spx.c:1610
psql:name-test.sql:20: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:  name_text('hello'::name_refs),
                   ^
LOCATION:  RowColDatumType, spx.c:1641
psql:name-test.sql:20: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65539
LINE 3:  name_text('hello'::name_refs),
                   ^
LOCATION:  RowColTypeInt64, spx.c:1678
      test_func       
----------------------
 name_text(name_refs)
(1 row)

psql:name-test.sql:22: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.name_text($1)::cstring
LOCATION:  SpxPlanQuery, spx.c:1554
psql:name-test.sql:22: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.name_text($1)::cstring ->  plan 0x258cf18 nargs= 1
LOCATION:  SpxPlanQuery, spx.c:1567
psql:name-test.sql:22: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x258cf18 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:name-test.sql:22: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:name-test.sql:22: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning 
LOCATION:  RowColStrPtr, spx.c:1757
psql:name-test.sql:22: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x258cf18 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:name-test.sql:22: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:name-test.sql:22: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning hello
LOCATION:  RowColStrPtr, spx.c:1757
  ref  | name_ 
-------+-------
       | 
 hello | hello
(2 rows)

 test_func  
------------
 name_nil()
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f name-env-test0.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/name-env-test0.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/name-env-test0.sql-out-err /home/greg/.Wicci/Make/wicci1/name-env-test0.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
         set_schema_path         
---------------------------------
 {s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 env_refs_ready()
(1 row)

                               set_file                                
-----------------------------------------------------------------------
 schema name-env-test0.sql, module name-env-test0, revision $Id, id 50
(1 row)

DELETE 0
       env_rows_row        
---------------------------
 (env_refs:env_rows:-2,{})
(1 row)

                env_rows_row                 
---------------------------------------------
 (env_refs:env_rows:2,{env_refs:env_rows:1})
(1 row)

                env_rows_row                 
---------------------------------------------
 (env_refs:env_rows:3,{env_refs:env_rows:1})
(1 row)

                env_rows_row                 
---------------------------------------------
 (env_refs:env_rows:4,{env_refs:env_rows:1})
(1 row)

                env_rows_row                 
---------------------------------------------
 (env_refs:env_rows:5,{env_refs:env_rows:1})
(1 row)

                           env_rows_row                            
-------------------------------------------------------------------
 (env_refs:env_rows:6,"{env_refs:env_rows:2,env_refs:env_rows:3}")
(1 row)

                                               env_rows_row                                                
-----------------------------------------------------------------------------------------------------------
 (env_refs:env_rows:7,"{env_refs:env_rows:2,env_refs:env_rows:3,env_refs:env_rows:4,env_refs:env_rows:5}")
(1 row)

         env_         |                                       bases                                       
----------------------+-----------------------------------------------------------------------------------
 env_refs:env_rows:1  | {}
 env_refs:env_rows:-1 | {}
 env_refs:env_rows:-2 | {}
 env_refs:env_rows:2  | {env_refs:env_rows:1}
 env_refs:env_rows:3  | {env_refs:env_rows:1}
 env_refs:env_rows:4  | {env_refs:env_rows:1}
 env_refs:env_rows:5  | {env_refs:env_rows:1}
 env_refs:env_rows:6  | {env_refs:env_rows:2,env_refs:env_rows:3}
 env_refs:env_rows:7  | {env_refs:env_rows:2,env_refs:env_rows:3,env_refs:env_rows:4,env_refs:env_rows:5}
(9 rows)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f name-env-test-pairs.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/name-env-test-pairs.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/name-env-test-pairs.sql-out-err /home/greg/.Wicci/Make/wicci1/name-env-test-pairs.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
         set_schema_path         
---------------------------------
 {s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 env_refs_ready()
(1 row)

                                    set_file                                     
---------------------------------------------------------------------------------
 schema name-env-test-pairs.sql, module name-env-test-pairs, revision $Id, id 51
(1 row)

 test_func 
-----------
 env_nil()
(1 row)

    env_rows_ref     
---------------------
 env_refs:env_rows:1
(1 row)

     env_rows_ref     
----------------------
 env_refs:env_rows:-1
(1 row)

 declare_name 
--------------
            2
(1 row)

                  env_add_binding                   
----------------------------------------------------
 (env_refs:env_rows:1,user,owner,"inserted status")
(1 row)

             test_func              
------------------------------------
 env_name_value(env_refs,name_refs)
(1 row)

 declare_name 
--------------
            7
(1 row)

 declare_name 
--------------
            6
(1 row)

psql:name-env-test-pairs.sql:59: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env_color(env_refs)
RETURNS name_refs LANGUAGE SQL STABLE STRICT AS
'SELECT try_name( env_name_value( $1, ''env_color''))';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name-env-test-pairs.sql:59: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env_color(env_refs) IS
'try_env_color(): lookup value associated with name env_color in given environment and return as value of type name_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name-env-test-pairs.sql:59: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_color(env_refs)
RETURNS name_refs LANGUAGE SQL STABLE AS
'SELECT non_null(try_env_color( $1),''env_color(env_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name-env-test-pairs.sql:59: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_color(env_refs) IS
'env_color(): lookup value associated with name env_color in given environment and return as value of type name_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name-env-test-pairs.sql:59: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_color(env_refs, name_refs)
RETURNS env_pair_stati LANGUAGE SQL  AS
'	SELECT env_add_binding( $1, ''env_color''::name_refs, $2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:name-env-test-pairs.sql:59: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_color(env_refs,name_refs) IS
's2_core.env_color(): associate name env_color in given environment with value of type name_refs and return the status by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   create_env_name_type_func   
-------------------------------
 env_color(env_refs,name_refs)
(1 row)

                        env_color                        
---------------------------------------------------------
 (env_refs:env_rows:1,env_color,black,"inserted status")
(1 row)

                  env_add_binding                  
---------------------------------------------------
 (env_refs:env_rows:2,user,Greg,"inserted status")
(1 row)

                  env_add_binding                  
---------------------------------------------------
 (env_refs:env_rows:3,user,Sher,"inserted status")
(1 row)

                       env_color                        
--------------------------------------------------------
 (env_refs:env_rows:3,env_color,rose,"inserted status")
(1 row)

                  env_add_binding                  
---------------------------------------------------
 (env_refs:env_rows:4,user,Bill,"inserted status")
(1 row)

                   env_add_binding                   
-----------------------------------------------------
 (env_refs:env_rows:6,user,fambly,"inserted status")
(1 row)

     status      
-----------------
 inserted status
(1 row)

             test_func              
------------------------------------
 env_name_value(env_refs,name_refs)
(1 row)

             test_func              
------------------------------------
 env_name_value(env_refs,name_refs)
(1 row)

             test_func              
------------------------------------
 env_name_value(env_refs,name_refs)
(1 row)

             test_func              
------------------------------------
 env_name_value(env_refs,name_refs)
(1 row)

        env_         |   key_    | value_ 
---------------------+-----------+--------
 env_refs:env_rows:1 | env_color | black
 env_refs:env_rows:1 | user      | owner
 env_refs:env_rows:2 | user      | Greg
 env_refs:env_rows:3 | env_color | rose
 env_refs:env_rows:3 | user      | Sher
 env_refs:env_rows:4 | user      | Bill
 env_refs:env_rows:6 | user      | fambly
(7 rows)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f name-env-test-triples.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/name-env-test-triples.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/name-env-test-triples.sql-out-err /home/greg/.Wicci/Make/wicci1/name-env-test-triples.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
         set_schema_path         
---------------------------------
 {s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 env_refs_ready()
(1 row)

                                      set_file                                       
-------------------------------------------------------------------------------------
 schema name-env-test-triples.sql, module name-env-test-triples, revision $Id, id 52
(1 row)

 declare_name 
--------------
            1
(1 row)

                       env_add_association                        
------------------------------------------------------------------
 (env_refs:env_rows:1,Sher,favorite-color,pink,"inserted status")
(1 row)

                        env_add_association                        
-------------------------------------------------------------------
 (env_refs:env_rows:1,Greg,favorite-color,green,"inserted status")
(1 row)

                       env_add_association                       
-----------------------------------------------------------------
 (env_refs:env_rows:1,Bill,favorite-color,red,"inserted status")
(1 row)

                  test_func                  
---------------------------------------------
 env_obj_name_value(env_refs,refs,name_refs)
(1 row)

     status      
-----------------
 inserted status
(1 row)

                  test_func                  
---------------------------------------------
 env_obj_name_value(env_refs,refs,name_refs)
(1 row)

                  test_func                  
---------------------------------------------
 env_obj_name_value(env_refs,refs,name_refs)
(1 row)

        env_         | object |    feature_    | value_ 
---------------------+--------+----------------+--------
 env_refs:env_rows:1 | Sher   | favorite-color | pink
 env_refs:env_rows:1 | Greg   | favorite-color | green
 env_refs:env_rows:1 | Bill   | favorite-color | red
(3 rows)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f s2-core.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/s2-core.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/s2-core.sql-out-err /home/greg/.Wicci/Make/wicci1/s2-core.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
         set_schema_path         
---------------------------------
 {s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 env_refs_ready()
(1 row)

                        set_file                         
---------------------------------------------------------
 schema s2-core.sql, module s2-core, revision $Id, id 53
(1 row)

make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S2_core'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S3_more'
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f text-ref-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/text-ref-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/text-ref-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/text-ref-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
psql:settings.sql:8: NOTICE:  00000: 
---> META declare_system_schema(text)
CREATE SCHEMA s3_more
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 env_refs_ready()
(1 row)

psql:text-ref-schema.sql:3: NOTICE:  00000: new_schema_name_id(schema_names) s3_more ->  15 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                 set_file                                  
---------------------------------------------------------------------------
 schema text_refs-schema.sql, module text_refs-schema, revision $Id, id 54
(1 row)

psql:text-ref-schema.sql:52: NOTICE:  00000: type "media_type_major" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
psql:text-ref-schema.sql:60: NOTICE:  00000: type "media_type_tree" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
COMMENT
psql:text-ref-schema.sql:73: NOTICE:  00000: type "media_type_suffix" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
psql:text-ref-schema.sql:81: NOTICE:  00000: type "pg_text_encodings" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE media_type_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: created shell type media_type_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION media_type_refs_in_op(cstring,oid,integer)
RETURNS media_type_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  42809: return type media_type_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:text-ref-schema.sql:130: NOTICE:  00000: CREATED media_type_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION media_type_refs_out_op(media_type_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  42809: argument type media_type_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:text-ref-schema.sql:130: NOTICE:  00000: CREATED media_type_refs_out_op(media_type_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE media_type_refs (
  INPUT = media_type_refs_in_op,
  OUTPUT = media_type_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: WARNING:  42P17: type input function media_type_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:text-ref-schema.sql:130: WARNING:  42P17: type output function media_type_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:text-ref-schema.sql:130: NOTICE:  00000: CREATE TYPE media_type_refs (
  INPUT = media_type_refs_in_op,
  OUTPUT = media_type_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS media_type_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS media_type_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (media_type_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (media_type_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (media_type_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (media_type_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION media_type_refs_cmp(media_type_refs, media_type_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION media_type_refs_cmp(media_type_refs,media_type_refs) IS
'media_type_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION media_type_refs_lt(media_type_refs, media_type_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION media_type_refs_lt(media_type_refs,media_type_refs) IS
'media_type_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = media_type_refs,
	 rightarg = media_type_refs,
	 procedure = media_type_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION media_type_refs_le(media_type_refs, media_type_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION media_type_refs_le(media_type_refs,media_type_refs) IS
'media_type_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = media_type_refs,
	 rightarg = media_type_refs,
	 procedure = media_type_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION media_type_refs_eq(media_type_refs, media_type_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION media_type_refs_eq(media_type_refs,media_type_refs) IS
'media_type_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = media_type_refs,
	 rightarg = media_type_refs,
	 procedure = media_type_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION media_type_refs_neq(media_type_refs, media_type_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION media_type_refs_neq(media_type_refs,media_type_refs) IS
'media_type_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = media_type_refs,
	 rightarg = media_type_refs,
	 procedure = media_type_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION media_type_refs_ge(media_type_refs, media_type_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION media_type_refs_ge(media_type_refs,media_type_refs) IS
'media_type_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = media_type_refs,
	 rightarg = media_type_refs,
	 procedure = media_type_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION media_type_refs_gt(media_type_refs, media_type_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION media_type_refs_gt(media_type_refs,media_type_refs) IS
'media_type_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = media_type_refs,
	 rightarg = media_type_refs,
	 procedure = media_type_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:130: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS media_type_refs_ops
		DEFAULT FOR TYPE media_type_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       media_type_refs_cmp(media_type_refs, media_type_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 media_type_refs
(1 row)

CREATE TABLE
COMMENT
COMMENT
COMMENT
psql:text-ref-schema.sql:161: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION media_type_rows_4_exists(_ref media_type_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM media_type_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:161: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION media_type_rows_4_exists(media_type_refs) IS
'media_type_rows_4_exists(_ref): referential integrity test method for row of media_type_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:161: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS media_type_rows_no_update_trigger ON media_type_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:161: NOTICE:  00000: trigger "media_type_rows_no_update_trigger" for relation "media_type_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:161: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER media_type_rows_no_update_trigger
  BEFORE UPDATE ON media_type_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:161: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_media_type_from_id(ref_ids)
RETURNS media_type_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''media_type_refs'', ''media_type_rows'', $1
	)::media_type_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:161: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_media_type_from_id(ref_ids) IS
'unchecked_media_type_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:161: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION media_type_nil()
RETURNS media_type_refs LANGUAGE SQL  AS
'	SELECT unchecked_media_type_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:161: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION media_type_nil() IS
'media_type_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:161: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_media_type(_ref refs)
RETURNS media_type_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM media_type_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:161: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_media_type(refs) IS
'try_media_type(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                         declare_ref_class_with_funcs                          
-------------------------------------------------------------------------------
 {unchecked_media_type_from_id(ref_ids),media_type_nil(),try_media_type(refs)}
(1 row)

psql:text-ref-schema.sql:162: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE media_type_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:162: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE media_type_seq OWNED BY media_type_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:162: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_media_type_ref()
RETURNS media_type_refs LANGUAGE SQL  AS
'SELECT unchecked_media_type_from_id(nextval(''media_type_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:162: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_media_type_ref() IS
'next_media_type_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:162: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE media_type_rows ALTER COLUMN ref SET DEFAULT next_media_type_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_simple_serial  
-----------------------
 next_media_type_ref()
(1 row)

INSERT 0 1
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE DOMAIN
CREATE DOMAIN
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE blob_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: created shell type blob_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION blob_refs_in_op(cstring,oid,integer)
RETURNS blob_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  42809: return type blob_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:text-ref-schema.sql:259: NOTICE:  00000: CREATED blob_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION blob_refs_out_op(blob_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  42809: argument type blob_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:text-ref-schema.sql:259: NOTICE:  00000: CREATED blob_refs_out_op(blob_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE blob_refs (
  INPUT = blob_refs_in_op,
  OUTPUT = blob_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: WARNING:  42P17: type input function blob_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:text-ref-schema.sql:259: WARNING:  42P17: type output function blob_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:text-ref-schema.sql:259: NOTICE:  00000: CREATE TYPE blob_refs (
  INPUT = blob_refs_in_op,
  OUTPUT = blob_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS blob_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS blob_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (blob_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (blob_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (blob_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (blob_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_refs_cmp(blob_refs, blob_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_refs_cmp(blob_refs,blob_refs) IS
'blob_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_refs_lt(blob_refs, blob_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_refs_lt(blob_refs,blob_refs) IS
'blob_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = blob_refs,
	 rightarg = blob_refs,
	 procedure = blob_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_refs_le(blob_refs, blob_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_refs_le(blob_refs,blob_refs) IS
'blob_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = blob_refs,
	 rightarg = blob_refs,
	 procedure = blob_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_refs_eq(blob_refs, blob_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_refs_eq(blob_refs,blob_refs) IS
'blob_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = blob_refs,
	 rightarg = blob_refs,
	 procedure = blob_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_refs_neq(blob_refs, blob_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_refs_neq(blob_refs,blob_refs) IS
'blob_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = blob_refs,
	 rightarg = blob_refs,
	 procedure = blob_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_refs_ge(blob_refs, blob_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_refs_ge(blob_refs,blob_refs) IS
'blob_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = blob_refs,
	 rightarg = blob_refs,
	 procedure = blob_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_refs_gt(blob_refs, blob_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_refs_gt(blob_refs,blob_refs) IS
'blob_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = blob_refs,
	 rightarg = blob_refs,
	 procedure = blob_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:259: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS blob_refs_ops
		DEFAULT FOR TYPE blob_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       blob_refs_cmp(blob_refs, blob_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 blob_refs
(1 row)

CREATE TABLE
COMMENT
COMMENT
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE blob_rows_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE blob_rows_row_handles (
	handle handles NOT NULL UNIQUE,
	ref blob_refs PRIMARY KEY  REFERENCES blob_rows(ref)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE blob_rows_row_handles IS
'row handles associated with blob_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_rows_row_get_(handle handles, ref blob_refs)
RETURNS blob_rows LANGUAGE SQL  STRICT AS
'SELECT blob_rows.*
 FROM blob_rows,blob_rows_row_handles
WHERE
blob_rows_row_handles.handle=$1 AND blob_rows_row_handles.ref=$2
AND
blob_rows.ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_rows_row_get_(handles,blob_refs) IS
'blob_rows_row_get_(handle, ref): find existing handle for row of blob_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_rows_row_set_(handle handles, ref blob_refs)
RETURNS blob_rows LANGUAGE SQL  STRICT AS
'
	INSERT INTO blob_rows_row_handles VALUES ( $1, $2);
	SELECT blob_rows_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_rows_row_set_(handles,blob_refs) IS
'blob_rows_row_set_(handle, ref): make new handle for row of blob_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_rows_row(handle handles, ref blob_refs)
RETURNS blob_rows LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   blob_rows_row_get_( $1, $2),
   blob_rows_row_set_( $1, $2)
  )FROM debug_enter(
  ''blob_rows_row(handles, blob_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_rows_row(handles,blob_refs) IS
'blob_rows_row(handle, ref): ensure handle for row of blob_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_rows_row(handle handles)
RETURNS blob_rows LANGUAGE SQL  STRICT AS
'SELECT blob_rows.*
  FROM blob_rows, blob_rows_row_handles
  WHERE $1 = blob_rows_row_handles.handle
    AND blob_rows.ref=blob_rows_row_handles.ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_rows_row(handles) IS
's3_more.blob_rows_row(handle): return a row given a handle for blob_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_rows_ref(handle handles)
RETURNS blob_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM blob_rows_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_rows_ref(handles) IS
'blob_rows_ref(handle): given a row handle for blob_rows return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_rows_ref(handle handles, ref blob_refs)
RETURNS blob_refs LANGUAGE SQL  STRICT AS
'SELECT (blob_rows_row( $1, $2)).ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:280: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_rows_ref(handles,blob_refs) IS
's3_more.blob_rows_ref(handle, ref): set handle for primary key of blob_rows and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                  create_handles_for                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------
 ({blob_rows_row_handles},"{""blob_rows_row(handles,blob_refs)"",blob_rows_row(handles),blob_rows_ref(handles),""blob_rows_ref(handles,blob_refs)""}")
(1 row)

CREATE TABLE
COMMENT
psql:text-ref-schema.sql:294: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_rows_5_exists(_ref blob_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM blob_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:294: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_rows_5_exists(blob_refs) IS
'blob_rows_5_exists(_ref): referential integrity test method for row of blob_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:294: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS blob_rows_no_update_trigger ON blob_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:294: NOTICE:  00000: trigger "blob_rows_no_update_trigger" for relation "blob_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:294: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER blob_rows_no_update_trigger
  BEFORE UPDATE ON blob_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:294: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_blob_from_id(ref_ids)
RETURNS blob_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''blob_refs'', ''blob_rows'', $1
	)::blob_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:294: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_blob_from_id(ref_ids) IS
'unchecked_blob_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:294: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_nil()
RETURNS blob_refs LANGUAGE SQL  AS
'	SELECT unchecked_blob_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:294: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_nil() IS
'blob_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:294: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_blob(_ref refs)
RETURNS blob_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM blob_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:294: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_blob(refs) IS
'try_blob(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                declare_ref_class_with_funcs                 
-------------------------------------------------------------
 {unchecked_blob_from_id(ref_ids),blob_nil(),try_blob(refs)}
(1 row)

psql:text-ref-schema.sql:295: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE blob_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:295: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE blob_seq OWNED BY blob_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:295: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_blob_ref()
RETURNS blob_refs LANGUAGE SQL  AS
'SELECT unchecked_blob_from_id(nextval(''blob_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:295: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_blob_ref() IS
'next_blob_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:295: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE blob_rows ALTER COLUMN ref SET DEFAULT next_blob_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_simple_serial 
----------------------
 next_blob_ref()
(1 row)

INSERT 0 1
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE text_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: created shell type text_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION text_refs_in_op(cstring,oid,integer)
RETURNS text_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  42809: return type text_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:text-ref-schema.sql:301: NOTICE:  00000: CREATED text_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION text_refs_out_op(text_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  42809: argument type text_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:text-ref-schema.sql:301: NOTICE:  00000: CREATED text_refs_out_op(text_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE text_refs (
  INPUT = text_refs_in_op,
  OUTPUT = text_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: WARNING:  42P17: type input function text_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:text-ref-schema.sql:301: WARNING:  42P17: type output function text_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:text-ref-schema.sql:301: NOTICE:  00000: CREATE TYPE text_refs (
  INPUT = text_refs_in_op,
  OUTPUT = text_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS text_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS text_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (text_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (text_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (text_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (text_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_refs_cmp(text_refs, text_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_refs_cmp(text_refs,text_refs) IS
'text_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_refs_lt(text_refs, text_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_refs_lt(text_refs,text_refs) IS
'text_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = text_refs,
	 rightarg = text_refs,
	 procedure = text_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_refs_le(text_refs, text_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_refs_le(text_refs,text_refs) IS
'text_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = text_refs,
	 rightarg = text_refs,
	 procedure = text_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_refs_eq(text_refs, text_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_refs_eq(text_refs,text_refs) IS
'text_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = text_refs,
	 rightarg = text_refs,
	 procedure = text_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_refs_neq(text_refs, text_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_refs_neq(text_refs,text_refs) IS
'text_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = text_refs,
	 rightarg = text_refs,
	 procedure = text_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_refs_ge(text_refs, text_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_refs_ge(text_refs,text_refs) IS
'text_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = text_refs,
	 rightarg = text_refs,
	 procedure = text_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_refs_gt(text_refs, text_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_refs_gt(text_refs,text_refs) IS
'text_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = text_refs,
	 rightarg = text_refs,
	 procedure = text_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:301: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS text_refs_ops
		DEFAULT FOR TYPE text_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       text_refs_cmp(text_refs, text_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 text_refs
(1 row)

CREATE TABLE
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE text_keys_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE text_keys_row_handles (
	handle handles NOT NULL UNIQUE,
	key text_refs PRIMARY KEY  REFERENCES text_keys(key)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE text_keys_row_handles IS
'row handles associated with text_keys rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_keys_row_get_(handle handles, key text_refs)
RETURNS text_keys LANGUAGE SQL  STRICT AS
'SELECT text_keys.*
 FROM text_keys,text_keys_row_handles
WHERE
text_keys_row_handles.handle=$1 AND text_keys_row_handles.key=$2
AND
text_keys.key=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_keys_row_get_(handles,text_refs) IS
'text_keys_row_get_(handle, key): find existing handle for row of text_keys; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_keys_row_set_(handle handles, key text_refs)
RETURNS text_keys LANGUAGE SQL  STRICT AS
'
	INSERT INTO text_keys_row_handles VALUES ( $1, $2);
	SELECT text_keys_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_keys_row_set_(handles,text_refs) IS
'text_keys_row_set_(handle, key): make new handle for row of text_keys; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_keys_row(handle handles, key text_refs)
RETURNS text_keys LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   text_keys_row_get_( $1, $2),
   text_keys_row_set_( $1, $2)
  )FROM debug_enter(
  ''text_keys_row(handles, text_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_keys_row(handles,text_refs) IS
'text_keys_row(handle, key): ensure handle for row of text_keys given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_keys_row(handle handles)
RETURNS text_keys LANGUAGE SQL  STRICT AS
'SELECT text_keys.*
  FROM text_keys, text_keys_row_handles
  WHERE $1 = text_keys_row_handles.handle
    AND text_keys.key=text_keys_row_handles.key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_keys_row(handles) IS
's3_more.text_keys_row(handle): return a row given a handle for text_keys';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_keys_key(handle handles)
RETURNS text_refs LANGUAGE SQL  STRICT AS
'SELECT key FROM text_keys_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_keys_key(handles) IS
'text_keys_key(handle): given a row handle for text_keys return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_keys_key(handle handles, key text_refs)
RETURNS text_refs LANGUAGE SQL  STRICT AS
'SELECT (text_keys_row( $1, $2)).key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:309: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_keys_key(handles,text_refs) IS
's3_more.text_keys_key(handle, key): set handle for primary key of text_keys and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                  create_handles_for                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------
 ({text_keys_row_handles},"{""text_keys_row(handles,text_refs)"",text_keys_row(handles),text_keys_key(handles),""text_keys_key(handles,text_refs)""}")
(1 row)

psql:text-ref-schema.sql:310: NOTICE:  00000: 
---> META create_key_insert_trigger_function_for(regclass,text)
CREATE OR REPLACE
FUNCTION text_keys_insert_trigger() RETURNS trigger
LANGUAGE plpgsql AS $body$ 
	BEGIN
		IF TG_OP = 'INSERT' THEN
			INSERT INTO text_keys VALUES ( NEW.ref );
			RETURN NEW;
		ELSE
			RAISE NOTICE 'Unexpected operation!';
			RETURN NULL;
		END IF;
	END
$body$
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:310: NOTICE:  00000: 
---> META create_key_delete_trigger_function_for(regclass,text)
CREATE OR REPLACE
FUNCTION text_keys_delete_trigger() RETURNS trigger
LANGUAGE plpgsql AS $body$ 
	BEGIN
		IF TG_OP = 'DELETE' THEN
			DELETE FROM text_keys WHERE key = OLD.ref;
		ELSE
			RAISE NOTICE 'Unexpected operation!';
		END IF;
		RETURN NULL;
	END
$body$
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_trigger_functions_for 
----------------------------------
 text_keys
(1 row)

CREATE TABLE
COMMENT
psql:text-ref-schema.sql:321: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS abstract_text_rows_abstract_trigger ON abstract_text_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:321: NOTICE:  00000: trigger "abstract_text_rows_abstract_trigger" for relation "abstract_text_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:321: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER abstract_text_rows_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON abstract_text_rows
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  declare_abstract  
--------------------
 abstract_text_rows
(1 row)

                          declare_ref_type_class                           
---------------------------------------------------------------------------
 (6,abstract_text_rows,text_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

CREATE FUNCTION
CREATE FUNCTION
INSERT 0 1
psql:text-ref-schema.sql:341: NOTICE:  00000: sequence "text_id_seq" does not exist, skipping
LOCATION:  DropErrorMsgNonExistent, tablecmds.c:763
DROP SEQUENCE
CREATE SEQUENCE
CREATE FUNCTION
CREATE TABLE
COMMENT
psql:text-ref-schema.sql:366: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS abstract_text_string_rows_abstract_trigger ON abstract_text_string_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:366: NOTICE:  00000: trigger "abstract_text_string_rows_abstract_trigger" for relation "abstract_text_string_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:366: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER abstract_text_string_rows_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON abstract_text_string_rows
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
     declare_abstract      
---------------------------
 abstract_text_string_rows
(1 row)

CREATE TABLE
COMMENT
ALTER TABLE
psql:text-ref-schema.sql:384: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS small_text_string_rows_key_insert_trigger ON small_text_string_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:384: NOTICE:  00000: trigger "small_text_string_rows_key_insert_trigger" for relation "small_text_string_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:384: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER small_text_string_rows_key_insert_trigger
  BEFORE INSERT ON small_text_string_rows
  FOR EACH ROW EXECUTE PROCEDURE text_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:384: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS small_text_string_rows_key_delete_trigger ON small_text_string_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:384: NOTICE:  00000: trigger "small_text_string_rows_key_delete_trigger" for relation "small_text_string_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:384: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER small_text_string_rows_key_delete_trigger
  BEFORE DELETE ON small_text_string_rows
  FOR EACH ROW EXECUTE PROCEDURE text_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 small_text_string_rows
(1 row)

psql:text-ref-schema.sql:385: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION small_text_string_rows_7_exists(_ref text_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM small_text_string_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:385: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION small_text_string_rows_7_exists(text_refs) IS
'small_text_string_rows_7_exists(_ref): referential integrity test method for row of small_text_string_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:385: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS small_text_string_rows_no_update_trigger ON small_text_string_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:385: NOTICE:  00000: trigger "small_text_string_rows_no_update_trigger" for relation "small_text_string_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:385: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER small_text_string_rows_no_update_trigger
  BEFORE UPDATE ON small_text_string_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                               declare_ref_class                               
-------------------------------------------------------------------------------
 (7,small_text_string_rows,text_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

CREATE TABLE
COMMENT
ALTER TABLE
psql:text-ref-schema.sql:402: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS big_text_string_rows_key_insert_trigger ON big_text_string_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:402: NOTICE:  00000: trigger "big_text_string_rows_key_insert_trigger" for relation "big_text_string_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:402: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER big_text_string_rows_key_insert_trigger
  BEFORE INSERT ON big_text_string_rows
  FOR EACH ROW EXECUTE PROCEDURE text_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:402: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS big_text_string_rows_key_delete_trigger ON big_text_string_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:402: NOTICE:  00000: trigger "big_text_string_rows_key_delete_trigger" for relation "big_text_string_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:402: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER big_text_string_rows_key_delete_trigger
  BEFORE DELETE ON big_text_string_rows
  FOR EACH ROW EXECUTE PROCEDURE text_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 big_text_string_rows
(1 row)

psql:text-ref-schema.sql:403: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION big_text_string_rows_8_exists(_ref text_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM big_text_string_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:403: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION big_text_string_rows_8_exists(text_refs) IS
'big_text_string_rows_8_exists(_ref): referential integrity test method for row of big_text_string_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:403: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS big_text_string_rows_no_update_trigger ON big_text_string_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:403: NOTICE:  00000: trigger "big_text_string_rows_no_update_trigger" for relation "big_text_string_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:403: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER big_text_string_rows_no_update_trigger
  BEFORE UPDATE ON big_text_string_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                              declare_ref_class                              
-----------------------------------------------------------------------------
 (8,big_text_string_rows,text_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

CREATE FUNCTION
CREATE TABLE
psql:text-ref-schema.sql:427: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS abstract_text_tree_rows_abstract_trigger ON abstract_text_tree_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:427: NOTICE:  00000: trigger "abstract_text_tree_rows_abstract_trigger" for relation "abstract_text_tree_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:427: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER abstract_text_tree_rows_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON abstract_text_tree_rows
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
    declare_abstract     
-------------------------
 abstract_text_tree_rows
(1 row)

CREATE TABLE
COMMENT
ALTER TABLE
psql:text-ref-schema.sql:444: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS text_join_tree_rows_key_insert_trigger ON text_join_tree_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:444: NOTICE:  00000: trigger "text_join_tree_rows_key_insert_trigger" for relation "text_join_tree_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:444: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER text_join_tree_rows_key_insert_trigger
  BEFORE INSERT ON text_join_tree_rows
  FOR EACH ROW EXECUTE PROCEDURE text_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:444: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS text_join_tree_rows_key_delete_trigger ON text_join_tree_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:444: NOTICE:  00000: trigger "text_join_tree_rows_key_delete_trigger" for relation "text_join_tree_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:444: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER text_join_tree_rows_key_delete_trigger
  BEFORE DELETE ON text_join_tree_rows
  FOR EACH ROW EXECUTE PROCEDURE text_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 text_join_tree_rows
(1 row)

psql:text-ref-schema.sql:445: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_join_tree_rows_9_exists(_ref text_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM text_join_tree_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:445: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_join_tree_rows_9_exists(text_refs) IS
'text_join_tree_rows_9_exists(_ref): referential integrity test method for row of text_join_tree_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:445: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS text_join_tree_rows_no_update_trigger ON text_join_tree_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:445: NOTICE:  00000: trigger "text_join_tree_rows_no_update_trigger" for relation "text_join_tree_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:445: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER text_join_tree_rows_no_update_trigger
  BEFORE UPDATE ON text_join_tree_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                             declare_ref_class                              
----------------------------------------------------------------------------
 (9,text_join_tree_rows,text_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

CREATE TABLE
psql:text-ref-schema.sql:455: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS text_tree_formats_no_update_trigger ON text_tree_formats CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:455: NOTICE:  00000: trigger "text_tree_formats_no_update_trigger" for relation "text_tree_formats" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:455: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER text_tree_formats_no_update_trigger
  BEFORE UPDATE ON text_tree_formats
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_monotonic 
-------------------
 text_tree_formats
(1 row)

psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE text_tree_formats_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE text_tree_formats_row_handles (
	handle handles NOT NULL UNIQUE,
	id integer PRIMARY KEY  REFERENCES text_tree_formats(id)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE text_tree_formats_row_handles IS
'row handles associated with text_tree_formats rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_tree_formats_row_get_(handle handles, id integer)
RETURNS text_tree_formats LANGUAGE SQL  STRICT AS
'SELECT text_tree_formats.*
 FROM text_tree_formats,text_tree_formats_row_handles
WHERE
text_tree_formats_row_handles.handle=$1 AND text_tree_formats_row_handles.id=$2
AND
text_tree_formats.id=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_tree_formats_row_get_(handles,integer) IS
'text_tree_formats_row_get_(handle, id): find existing handle for row of text_tree_formats; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_tree_formats_row_set_(handle handles, id integer)
RETURNS text_tree_formats LANGUAGE SQL  STRICT AS
'
	INSERT INTO text_tree_formats_row_handles VALUES ( $1, $2);
	SELECT text_tree_formats_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_tree_formats_row_set_(handles,integer) IS
'text_tree_formats_row_set_(handle, id): make new handle for row of text_tree_formats; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_tree_formats_row(handle handles, id integer)
RETURNS text_tree_formats LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   text_tree_formats_row_get_( $1, $2),
   text_tree_formats_row_set_( $1, $2)
  )FROM debug_enter(
  ''text_tree_formats_row(handles, integer)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_tree_formats_row(handles,integer) IS
'text_tree_formats_row(handle, id): ensure handle for row of text_tree_formats given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_tree_formats_row(handle handles)
RETURNS text_tree_formats LANGUAGE SQL  STRICT AS
'SELECT text_tree_formats.*
  FROM text_tree_formats, text_tree_formats_row_handles
  WHERE $1 = text_tree_formats_row_handles.handle
    AND text_tree_formats.id=text_tree_formats_row_handles.id';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_tree_formats_row(handles) IS
's3_more.text_tree_formats_row(handle): return a row given a handle for text_tree_formats';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_tree_formats_id(handle handles)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT id FROM text_tree_formats_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_tree_formats_id(handles) IS
'text_tree_formats_id(handle): given a row handle for text_tree_formats return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_tree_formats_id(handle handles, id integer)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT (text_tree_formats_row( $1, $2)).id';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:456: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_tree_formats_id(handles,integer) IS
's3_more.text_tree_formats_id(handle, id): set handle for primary key of text_tree_formats and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                   create_handles_for                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({text_tree_formats_row_handles},"{""text_tree_formats_row(handles,integer)"",text_tree_formats_row(handles),text_tree_formats_id(handles),""text_tree_formats_id(handles,integer)""}")
(1 row)

CREATE FUNCTION
COMMENT
CREATE TABLE
COMMENT
ALTER TABLE
psql:text-ref-schema.sql:482: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS text_format_tree_rows_key_insert_trigger ON text_format_tree_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:482: NOTICE:  00000: trigger "text_format_tree_rows_key_insert_trigger" for relation "text_format_tree_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:482: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER text_format_tree_rows_key_insert_trigger
  BEFORE INSERT ON text_format_tree_rows
  FOR EACH ROW EXECUTE PROCEDURE text_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:482: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS text_format_tree_rows_key_delete_trigger ON text_format_tree_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:482: NOTICE:  00000: trigger "text_format_tree_rows_key_delete_trigger" for relation "text_format_tree_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:482: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER text_format_tree_rows_key_delete_trigger
  BEFORE DELETE ON text_format_tree_rows
  FOR EACH ROW EXECUTE PROCEDURE text_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 text_format_tree_rows
(1 row)

psql:text-ref-schema.sql:483: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION text_format_tree_rows_10_exists(_ref text_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM text_format_tree_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:483: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION text_format_tree_rows_10_exists(text_refs) IS
'text_format_tree_rows_10_exists(_ref): referential integrity test method for row of text_format_tree_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:483: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS text_format_tree_rows_no_update_trigger ON text_format_tree_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:text-ref-schema.sql:483: NOTICE:  00000: trigger "text_format_tree_rows_no_update_trigger" for relation "text_format_tree_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:text-ref-schema.sql:483: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER text_format_tree_rows_no_update_trigger
  BEFORE UPDATE ON text_format_tree_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                               declare_ref_class                               
-------------------------------------------------------------------------------
 (10,text_format_tree_rows,text_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
                  declare_op_fallback                   
--------------------------------------------------------
 ("env_length_op(refs,env_refs)","ref_length_op(refs)")
(1 row)

CREATE FUNCTION
                               declare_op_fallback                               
---------------------------------------------------------------------------------
 ("ref_env_crefs_length_op(refs,env_refs,crefs)","env_length_op(refs,env_refs)")
(1 row)

CREATE FUNCTION
                                             declare_op_fallback                                              
--------------------------------------------------------------------------------------------------------------
 ("ref_env_crefs_chiln_length_op(refs,env_refs,crefs,refs[])","ref_env_crefs_length_op(refs,env_refs,crefs)")
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f text-ref-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/text-ref-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/text-ref-code.sql-out-err /home/greg/.Wicci/Make/wicci1/text-ref-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 env_refs_ready()
(1 row)

                               set_file                                
-----------------------------------------------------------------------
 schema text_refs-code.sql, module text_refs-code, revision $Id, id 55
(1 row)

CREATE FUNCTION
COMMENT
                    type_class_op_method                    
------------------------------------------------------------
 (4,"ref_text_op(refs)","media_type_text(media_type_refs)")
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
              get_text              
------------------------------------
 text_refs:small_text_string_rows:1
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
                type_class_op_method                
----------------------------------------------------
 (6,"ref_text_op(refs)","text_nil_text(text_refs)")
(1 row)

                    type_class_op_method                     
-------------------------------------------------------------
 (7,"ref_text_op(refs)","small_text_string_text(text_refs)")
(1 row)

                      type_class_op_method                       
-----------------------------------------------------------------
 (7,"ref_length_op(refs)","small_text_string_length(text_refs)")
(1 row)

                   type_class_op_method                    
-----------------------------------------------------------
 (8,"ref_text_op(refs)","big_text_string_text(text_refs)")
(1 row)

                     type_class_op_method                      
---------------------------------------------------------------
 (8,"ref_length_op(refs)","big_text_string_length(text_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
DELETE 1
DELETE 0
CREATE FUNCTION
CREATE FUNCTION
COMMENT
     blob_rows_ref     
-----------------------
 blob_refs:blob_rows:1
(1 row)

       test_func        
------------------------
 blob_length(blob_refs)
(1 row)

         test_func          
----------------------------
 blob_num_chunks(blob_refs)
(1 row)

       test_func       
-----------------------
 blob_bytes(blob_refs)
(1 row)

     blob_rows_ref     
-----------------------
 blob_refs:blob_rows:2
(1 row)

       test_func        
------------------------
 blob_length(blob_refs)
(1 row)

         test_func          
----------------------------
 blob_num_chunks(blob_refs)
(1 row)

       test_func       
-----------------------
 blob_bytes(blob_refs)
(1 row)

     blob_rows_ref     
-----------------------
 blob_refs:blob_rows:3
(1 row)

       test_func        
------------------------
 blob_length(blob_refs)
(1 row)

         test_func          
----------------------------
 blob_num_chunks(blob_refs)
(1 row)

       test_func       
-----------------------
 blob_bytes(blob_refs)
(1 row)

              type_class_op_method              
------------------------------------------------
 (5,"ref_text_op(refs)","blob_text(blob_refs)")
(1 row)

                type_class_op_method                
----------------------------------------------------
 (5,"ref_length_op(refs)","blob_length(blob_refs)")
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
                   type_class_op_method                   
----------------------------------------------------------
 (9,"ref_text_op(refs)","text_join_tree_text(text_refs)")
(1 row)

                     type_class_op_method                     
--------------------------------------------------------------
 (9,"ref_length_op(refs)","text_join_tree_length(text_refs)")
(1 row)

                    type_class_op_method                     
-------------------------------------------------------------
 (10,"ref_text_op(refs)","text_format_tree_text(text_refs)")
(1 row)

                      type_class_op_method                       
-----------------------------------------------------------------
 (10,"ref_length_op(refs)","text_format_tree_length(text_refs)")
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f text-ref-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/text-ref-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/text-ref-test.sql-out-err /home/greg/.Wicci/Make/wicci1/text-ref-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                               set_file                                
-----------------------------------------------------------------------
 schema text_refs-test.sql, module text_refs-test, revision $Id, id 56
(1 row)

-- * Media Types
-- ** is_enum_type_label(regtype, name)
SELECT test_func(
	'is_enum_type_label(regtype, name)',
	is_enum_type_label('media_type_major', 'text')
);
            test_func             
----------------------------------
 is_enum_type_label(regtype,name)
(1 row)

SELECT test_func(
	'is_enum_type_label(regtype, name)',
	NOT is_enum_type_label('media_type_major', '_')
);
            test_func             
----------------------------------
 is_enum_type_label(regtype,name)
(1 row)

SELECT test_func(
	'is_enum_type_label(regtype, name)',
	NOT is_enum_type_label('media_type_major', 'cromulent')
);
            test_func             
----------------------------------
 is_enum_type_label(regtype,name)
(1 row)

SELECT test_func(
	'is_enum_type_label(regtype, name)',
	NOT is_enum_type_label('media_type_major', NULL)
);
            test_func             
----------------------------------
 is_enum_type_label(regtype,name)
(1 row)

-- ** hstore_trim(hstore)
SELECT test_func(
	'hstore_trim(hstore)',
	hstore_trim(hstore(array['a', 'b', 'c'], array['1', NULL, '3'])),
	hstore(array['a', 'c'], array['1', '3'])
);
      test_func      
---------------------
 hstore_trim(hstore)
(1 row)

-- ** try_parse_media_type(text)
SELECT test_func(
	'media_type_pattern()',
	try_str_match('text/html; charset=utf-8', media_type_pattern()),
	ARRAY[ 'text', NULL, 'html', NULL, 'charset', 'utf-8' ]
);	
      test_func       
----------------------
 media_type_pattern()
(1 row)

SELECT test_func(
	'try_parse_media_type(text)',
	try_parse_media_type('text/html; charset=utf-8'),
	ROW( media_type_nil(), 'text', 'standard', 'html', '_', 'utf-8', '_', '' )::media_type_rows
);	
         test_func          
----------------------------
 try_parse_media_type(text)
(1 row)

SELECT test_func(
	'media_type_pattern()',
	try_str_match('text/html+xml; charset=utf-8', media_type_pattern()),
	ARRAY[ 'text', NULL, 'html', 'xml', 'charset', 'utf-8' ]
);	
      test_func       
----------------------
 media_type_pattern()
(1 row)

SELECT test_func(
	'try_parse_media_type(text)',
	try_parse_media_type('text/html+xml; charset=utf-8'),
	ROW( media_type_nil(), 'text', 'standard', 'html', 'xml', 'utf-8', '_', '' )::media_type_rows
);	
         test_func          
----------------------------
 try_parse_media_type(text)
(1 row)

-- *** media_encoding(media_type_rows)
SELECT test_func(
	'media_encoding(media_type_rows)',
	media_encoding(mt),
	'UTF8'
) FROM try_parse_media_type('text/html; charset=utf-8') mt;
            test_func            
---------------------------------
 media_encoding(media_type_rows)
(1 row)

SELECT test_func(
	'media_encoding(media_type_rows)',
	media_encoding(mt),
	'LATIN1'
) FROM try_parse_media_type('text/html') mt;
            test_func            
---------------------------------
 media_encoding(media_type_rows)
(1 row)

-- * Get Text
SELECT test_func(
			 'get_text(text)',
			 ref_text_op( get_text('Hello World') ),
			 'Hello World'
);
   test_func    
----------------
 get_text(text)
(1 row)

SELECT test_func(
	'text_nil_text(text_refs)',
	ref_text_op( text_nil() ),
	NULL::text
);
psql:text-ref-test.sql:91: NOTICE:  00000: DEBUG text_nil_text(text_refs) note: returning empty string
LOCATION:  exec_stmt_raise, pl_exec.c:3165
        test_func         
--------------------------
 text_nil_text(text_refs)
(1 row)

SELECT  test_func(
	'get_text_join_tree(text,  refs[])',
	ref_text_op(
		get_text_join_tree(' ', get_text('Hello'), get_text('world'))
	),
	'Hello world'::text
);
            test_func            
---------------------------------
 get_text_join_tree(text,refs[])
(1 row)

SELECT test_func(
	'get_text_join_tree(text,  refs[])',
	ref_text_op( ( text_keys_row('fambly', get_text_join_tree(
		' and ', get_text('Greg'), get_text('Sher'), get_text('Bill')
	) ) ).key ),
	'Greg and Sher and Bill'
);
            test_func            
---------------------------------
 get_text_join_tree(text,refs[])
(1 row)

SELECT test_func(
	'get_text_join_tree(text,  refs[])',
	ref_text_op( ( text_keys_row('friends', get_text_join_tree(
		' and ', get_text('Cristal'), get_text('Blank-Page')
	) ) ).key ),
	'Cristal and Blank-Page'
);
            test_func            
---------------------------------
 get_text_join_tree(text,refs[])
(1 row)

SELECT text_tree_formats_row('3-lines', get_text_format(
	'line 1:', E'\nline 2:', E'\nline 3:'
) );
 text_tree_formats_row 
-----------------------
 (1,"{""line 1:"",""  +
 line 2:"",""         +
 line 3:""}")
(1 row)

SELECT text_tree_formats_row('3-lines-nl', get_text_format(
	'line 1:', E'\nline 2:', E'\nline 3:', E'\n'
) );
 text_tree_formats_row 
-----------------------
 (2,"{""line 1:"",""  +
 line 2:"",""         +
 line 3:"",""         +
 ""}")
(1 row)

SELECT test_func(
	'get_text_format_tree(integer, refs[])',
	ref_text_op( ( text_keys_row('fambly-lines', get_text_format_tree(
		text_tree_formats_id('3-lines'),
		get_text('Greg'), get_text('Sher'), get_text('Bill')
	) ) ).key ),
	E'line 1:Greg\nline 2:Sher\nline 3:Bill'
);
              test_func               
--------------------------------------
 get_text_format_tree(integer,refs[])
(1 row)

SELECT test_func(
	'get_text_format_tree(integer, refs[])',
	ref_text_op( ( text_keys_row('young-lines', get_text_format_tree(
		text_tree_formats_id('3-lines'),
		get_text('Greg'), get_text('Barbara')
	) ) ).key ),
	E'line 1:Greg\nline 2:Barbara\nline 3:'
);
              test_func               
--------------------------------------
 get_text_format_tree(integer,refs[])
(1 row)

SELECT test_func(
	'get_text_format_tree(integer, refs[])',
	ref_text_op( ( text_keys_row('fambly-lines-nl', get_text_format_tree(
		text_tree_formats_id('3-lines-nl'),
		get_text('Greg'), get_text('Sher'), get_text('Bill')
	) ) ).key ),
	E'line 1:Greg\nline 2:Sher\nline 3:Bill\n'
);
              test_func               
--------------------------------------
 get_text_format_tree(integer,refs[])
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f env-ops.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/env-ops.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/env-ops.sql-out-err /home/greg/.Wicci/Make/wicci1/env-ops.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                        set_file                         
---------------------------------------------------------
 schema env-ops.sql, module env-ops, revision $Id, id 57
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
                  declare_op_fallback                   
--------------------------------------------------------
 ("ref_env_text_op(refs,env_refs)","ref_text_op(refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
                               declare_op_fallback                               
---------------------------------------------------------------------------------
 ("ref_env_crefs_text_op(refs,env_refs,crefs)","ref_env_text_op(refs,env_refs)")
(1 row)

CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f scalar-ref-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/scalar-ref-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/scalar-ref-code.sql-out-err /home/greg/.Wicci/Make/wicci1/scalar-ref-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                set_file                                 
-------------------------------------------------------------------------
 schema scalar-ref-code.sql, module scalar-ref-code, revision $Id, id 58
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f bool-ref-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/bool-ref-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/bool-ref-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/bool-ref-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                 set_file                                  
---------------------------------------------------------------------------
 schema more-bool-schema.sql, module more-bool-schema, revision $Id, id 59
(1 row)

psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE bool_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: created shell type bool_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION bool_refs_in_op(cstring,oid,integer)
RETURNS bool_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  42809: return type bool_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:bool-ref-schema.sql:26: NOTICE:  00000: CREATED bool_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION bool_refs_out_op(bool_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  42809: argument type bool_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:bool-ref-schema.sql:26: NOTICE:  00000: CREATED bool_refs_out_op(bool_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE bool_refs (
  INPUT = bool_refs_in_op,
  OUTPUT = bool_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: WARNING:  42P17: type input function bool_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:bool-ref-schema.sql:26: WARNING:  42P17: type output function bool_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:bool-ref-schema.sql:26: NOTICE:  00000: CREATE TYPE bool_refs (
  INPUT = bool_refs_in_op,
  OUTPUT = bool_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS bool_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS bool_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (bool_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (bool_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (bool_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (bool_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_refs_cmp(bool_refs, bool_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_refs_cmp(bool_refs,bool_refs) IS
'bool_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_refs_lt(bool_refs, bool_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_refs_lt(bool_refs,bool_refs) IS
'bool_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = bool_refs,
	 rightarg = bool_refs,
	 procedure = bool_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_refs_le(bool_refs, bool_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_refs_le(bool_refs,bool_refs) IS
'bool_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = bool_refs,
	 rightarg = bool_refs,
	 procedure = bool_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_refs_eq(bool_refs, bool_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_refs_eq(bool_refs,bool_refs) IS
'bool_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = bool_refs,
	 rightarg = bool_refs,
	 procedure = bool_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_refs_neq(bool_refs, bool_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_refs_neq(bool_refs,bool_refs) IS
'bool_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = bool_refs,
	 rightarg = bool_refs,
	 procedure = bool_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_refs_ge(bool_refs, bool_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_refs_ge(bool_refs,bool_refs) IS
'bool_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = bool_refs,
	 rightarg = bool_refs,
	 procedure = bool_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_refs_gt(bool_refs, bool_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_refs_gt(bool_refs,bool_refs) IS
'bool_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = bool_refs,
	 rightarg = bool_refs,
	 procedure = bool_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS bool_refs_ops
		DEFAULT FOR TYPE bool_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       bool_refs_cmp(bool_refs, bool_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 bool_refs
(1 row)

 declare_name 
--------------
            2
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE TABLE
CREATE INDEX
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE TABLE
COMMENT
COMMENT
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE bool_rows_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE bool_rows_row_handles (
	handle handles NOT NULL UNIQUE,
	ref bool_refs PRIMARY KEY  REFERENCES bool_rows(ref)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE bool_rows_row_handles IS
'row handles associated with bool_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_rows_row_get_(handle handles, ref bool_refs)
RETURNS bool_rows LANGUAGE SQL  STRICT AS
'SELECT bool_rows.*
 FROM bool_rows,bool_rows_row_handles
WHERE
bool_rows_row_handles.handle=$1 AND bool_rows_row_handles.ref=$2
AND
bool_rows.ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_rows_row_get_(handles,bool_refs) IS
'bool_rows_row_get_(handle, ref): find existing handle for row of bool_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_rows_row_set_(handle handles, ref bool_refs)
RETURNS bool_rows LANGUAGE SQL  STRICT AS
'
	INSERT INTO bool_rows_row_handles VALUES ( $1, $2);
	SELECT bool_rows_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_rows_row_set_(handles,bool_refs) IS
'bool_rows_row_set_(handle, ref): make new handle for row of bool_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_rows_row(handle handles, ref bool_refs)
RETURNS bool_rows LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   bool_rows_row_get_( $1, $2),
   bool_rows_row_set_( $1, $2)
  )FROM debug_enter(
  ''bool_rows_row(handles, bool_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_rows_row(handles,bool_refs) IS
'bool_rows_row(handle, ref): ensure handle for row of bool_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_rows_row(handle handles)
RETURNS bool_rows LANGUAGE SQL  STRICT AS
'SELECT bool_rows.*
  FROM bool_rows, bool_rows_row_handles
  WHERE $1 = bool_rows_row_handles.handle
    AND bool_rows.ref=bool_rows_row_handles.ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_rows_row(handles) IS
's3_more.bool_rows_row(handle): return a row given a handle for bool_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_rows_ref(handle handles)
RETURNS bool_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM bool_rows_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_rows_ref(handles) IS
'bool_rows_ref(handle): given a row handle for bool_rows return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_rows_ref(handle handles, ref bool_refs)
RETURNS bool_refs LANGUAGE SQL  STRICT AS
'SELECT (bool_rows_row( $1, $2)).ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:90: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_rows_ref(handles,bool_refs) IS
's3_more.bool_rows_ref(handle, ref): set handle for primary key of bool_rows and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                  create_handles_for                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------
 ({bool_rows_row_handles},"{""bool_rows_row(handles,bool_refs)"",bool_rows_row(handles),bool_rows_ref(handles),""bool_rows_ref(handles,bool_refs)""}")
(1 row)

psql:bool-ref-schema.sql:94: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_rows_11_exists(_ref bool_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM bool_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:94: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_rows_11_exists(bool_refs) IS
'bool_rows_11_exists(_ref): referential integrity test method for row of bool_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:94: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS bool_rows_no_update_trigger ON bool_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:94: NOTICE:  00000: trigger "bool_rows_no_update_trigger" for relation "bool_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:bool-ref-schema.sql:94: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER bool_rows_no_update_trigger
  BEFORE UPDATE ON bool_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:94: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_bool_from_id(ref_ids)
RETURNS bool_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''bool_refs'', ''bool_rows'', $1
	)::bool_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:94: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_bool_from_id(ref_ids) IS
'unchecked_bool_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:94: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_nil()
RETURNS bool_refs LANGUAGE SQL  AS
'	SELECT unchecked_bool_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:94: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_nil() IS
'bool_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:94: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_bool(_ref refs)
RETURNS bool_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM bool_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:94: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_bool(refs) IS
'try_bool(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                declare_ref_class_with_funcs                 
-------------------------------------------------------------
 {unchecked_bool_from_id(ref_ids),bool_nil(),try_bool(refs)}
(1 row)

psql:bool-ref-schema.sql:95: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE bool_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:95: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE bool_seq OWNED BY bool_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:95: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_bool_ref()
RETURNS bool_refs LANGUAGE SQL  AS
'SELECT unchecked_bool_from_id(nextval(''bool_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:95: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_bool_ref() IS
'next_bool_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:95: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE bool_rows ALTER COLUMN ref SET DEFAULT next_bool_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_simple_serial 
----------------------
 next_bool_ref()
(1 row)

psql:bool-ref-schema.sql:117: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_false()
RETURNS bool_refs LANGUAGE SQL  AS
'	SELECT unchecked_bool_from_id(-1)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:117: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_false() IS
'bool_false(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_const_ref_func 
-----------------------
 bool_false()
(1 row)

psql:bool-ref-schema.sql:118: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION bool_true()
RETURNS bool_refs LANGUAGE SQL  AS
'	SELECT unchecked_bool_from_id(-2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:bool-ref-schema.sql:118: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION bool_true() IS
'bool_true(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_const_ref_func 
-----------------------
 bool_true()
(1 row)

INSERT 0 2
CREATE FUNCTION
CREATE FUNCTION
CREATE CAST
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f bool-ref-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/bool-ref-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/bool-ref-code.sql-out-err /home/greg/.Wicci/Make/wicci1/bool-ref-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                               set_file                                
-----------------------------------------------------------------------
 schema more-bool-code.sql, module more-bool-code, revision $Id, id 60
(1 row)

CREATE FUNCTION
CREATE FUNCTION
 declare_name 
--------------
            2
(1 row)

 declare_bool_env_literals 
---------------------------
                         2
(1 row)

CREATE FUNCTION
CREATE FUNCTION
 declare_bool_ref_literals 
---------------------------
                         2
(1 row)

CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
psql:bool-ref-code.sql:179: NOTICE:  00000: cast from type pg_catalog.bool to type bool_refs does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP CAST
CREATE CAST
 spx_debug_on 
--------------
            1
(1 row)

 refs_debug_on 
---------------
             1
(1 row)

CREATE FUNCTION
                           type_class_op_method                            
---------------------------------------------------------------------------
 (11,"ref_env_text_op(refs,env_refs)","bool_ref_text(bool_refs,env_refs)")
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f float-ref-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/float-ref-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/float-ref-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/float-ref-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                  set_file                                   
-----------------------------------------------------------------------------
 schema more-float-schema.sql, module more-float-schema, revision $Id, id 61
(1 row)

psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE float_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: created shell type float_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION float_refs_in_op(cstring,oid,integer)
RETURNS float_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  42809: return type float_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:float-ref-schema.sql:26: NOTICE:  00000: CREATED float_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION float_refs_out_op(float_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  42809: argument type float_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:float-ref-schema.sql:26: NOTICE:  00000: CREATED float_refs_out_op(float_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE float_refs (
  INPUT = float_refs_in_op,
  OUTPUT = float_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: WARNING:  42P17: type input function float_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:float-ref-schema.sql:26: WARNING:  42P17: type output function float_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:float-ref-schema.sql:26: NOTICE:  00000: CREATE TYPE float_refs (
  INPUT = float_refs_in_op,
  OUTPUT = float_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS float_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS float_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (float_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (float_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (float_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (float_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_refs_cmp(float_refs, float_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_refs_cmp(float_refs,float_refs) IS
'float_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_refs_lt(float_refs, float_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_refs_lt(float_refs,float_refs) IS
'float_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = float_refs,
	 rightarg = float_refs,
	 procedure = float_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_refs_le(float_refs, float_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_refs_le(float_refs,float_refs) IS
'float_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = float_refs,
	 rightarg = float_refs,
	 procedure = float_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_refs_eq(float_refs, float_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_refs_eq(float_refs,float_refs) IS
'float_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = float_refs,
	 rightarg = float_refs,
	 procedure = float_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_refs_neq(float_refs, float_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_refs_neq(float_refs,float_refs) IS
'float_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = float_refs,
	 rightarg = float_refs,
	 procedure = float_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_refs_ge(float_refs, float_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_refs_ge(float_refs,float_refs) IS
'float_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = float_refs,
	 rightarg = float_refs,
	 procedure = float_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_refs_gt(float_refs, float_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_refs_gt(float_refs,float_refs) IS
'float_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = float_refs,
	 rightarg = float_refs,
	 procedure = float_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS float_refs_ops
		DEFAULT FOR TYPE float_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       float_refs_cmp(float_refs, float_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 float_refs
(1 row)

psql:float-ref-schema.sql:30: NOTICE:  00000: type "float_ref_values" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
CREATE DOMAIN
CREATE TABLE
INSERT 0 1
CREATE TABLE
COMMENT
COMMENT
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE float_rows_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE float_rows_row_handles (
	handle handles NOT NULL UNIQUE,
	ref float_refs PRIMARY KEY  REFERENCES float_rows(ref)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE float_rows_row_handles IS
'row handles associated with float_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_rows_row_get_(handle handles, ref float_refs)
RETURNS float_rows LANGUAGE SQL  STRICT AS
'SELECT float_rows.*
 FROM float_rows,float_rows_row_handles
WHERE
float_rows_row_handles.handle=$1 AND float_rows_row_handles.ref=$2
AND
float_rows.ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_rows_row_get_(handles,float_refs) IS
'float_rows_row_get_(handle, ref): find existing handle for row of float_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_rows_row_set_(handle handles, ref float_refs)
RETURNS float_rows LANGUAGE SQL  STRICT AS
'
	INSERT INTO float_rows_row_handles VALUES ( $1, $2);
	SELECT float_rows_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_rows_row_set_(handles,float_refs) IS
'float_rows_row_set_(handle, ref): make new handle for row of float_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_rows_row(handle handles, ref float_refs)
RETURNS float_rows LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   float_rows_row_get_( $1, $2),
   float_rows_row_set_( $1, $2)
  )FROM debug_enter(
  ''float_rows_row(handles, float_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_rows_row(handles,float_refs) IS
'float_rows_row(handle, ref): ensure handle for row of float_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_rows_row(handle handles)
RETURNS float_rows LANGUAGE SQL  STRICT AS
'SELECT float_rows.*
  FROM float_rows, float_rows_row_handles
  WHERE $1 = float_rows_row_handles.handle
    AND float_rows.ref=float_rows_row_handles.ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_rows_row(handles) IS
's3_more.float_rows_row(handle): return a row given a handle for float_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_rows_ref(handle handles)
RETURNS float_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM float_rows_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_rows_ref(handles) IS
'float_rows_ref(handle): given a row handle for float_rows return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_rows_ref(handle handles, ref float_refs)
RETURNS float_refs LANGUAGE SQL  STRICT AS
'SELECT (float_rows_row( $1, $2)).ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_rows_ref(handles,float_refs) IS
's3_more.float_rows_ref(handle, ref): set handle for primary key of float_rows and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                      create_handles_for                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({float_rows_row_handles},"{""float_rows_row(handles,float_refs)"",float_rows_row(handles),float_rows_ref(handles),""float_rows_ref(handles,float_refs)""}")
(1 row)

psql:float-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_rows_12_exists(_ref float_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM float_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_rows_12_exists(float_refs) IS
'float_rows_12_exists(_ref): referential integrity test method for row of float_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:61: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS float_rows_no_update_trigger ON float_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:61: NOTICE:  00000: trigger "float_rows_no_update_trigger" for relation "float_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:float-ref-schema.sql:61: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER float_rows_no_update_trigger
  BEFORE UPDATE ON float_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_float_from_id(ref_ids)
RETURNS float_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''float_refs'', ''float_rows'', $1
	)::float_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_float_from_id(ref_ids) IS
'unchecked_float_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION float_nil()
RETURNS float_refs LANGUAGE SQL  AS
'	SELECT unchecked_float_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION float_nil() IS
'float_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_float(_ref refs)
RETURNS float_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM float_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_float(refs) IS
'try_float(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                  declare_ref_class_with_funcs                  
----------------------------------------------------------------
 {unchecked_float_from_id(ref_ids),float_nil(),try_float(refs)}
(1 row)

psql:float-ref-schema.sql:62: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE float_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:62: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE float_seq OWNED BY float_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:62: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_float_ref()
RETURNS float_refs LANGUAGE SQL  AS
'SELECT unchecked_float_from_id(nextval(''float_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:62: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_float_ref() IS
'next_float_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:float-ref-schema.sql:62: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE float_rows ALTER COLUMN ref SET DEFAULT next_float_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_simple_serial 
----------------------
 next_float_ref()
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f float-ref-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/float-ref-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/float-ref-code.sql-out-err /home/greg/.Wicci/Make/wicci1/float-ref-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                set_file                                 
-------------------------------------------------------------------------
 schema more-float-code.sql, module more-float-code, revision $Id, id 62
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
psql:float-ref-code.sql:95: NOTICE:  00000: cast from type float_refs to type pg_catalog.float8 does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP CAST
CREATE CAST
CREATE FUNCTION
CREATE FUNCTION
 declare_name 
--------------
            1
(1 row)

CREATE FUNCTION
                            type_class_op_method                             
-----------------------------------------------------------------------------
 (12,"ref_env_text_op(refs,env_refs)","float_ref_text(float_refs,env_refs)")
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f int-ref-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/int-ref-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/int-ref-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/int-ref-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                set_file                                 
-------------------------------------------------------------------------
 schema more-int-schema.sql, module more-int-schema, revision $Id, id 63
(1 row)

psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE int_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: created shell type int_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION int_refs_in_op(cstring,oid,integer)
RETURNS int_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  42809: return type int_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:int-ref-schema.sql:26: NOTICE:  00000: CREATED int_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION int_refs_out_op(int_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  42809: argument type int_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:int-ref-schema.sql:26: NOTICE:  00000: CREATED int_refs_out_op(int_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE int_refs (
  INPUT = int_refs_in_op,
  OUTPUT = int_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: WARNING:  42P17: type input function int_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:int-ref-schema.sql:26: WARNING:  42P17: type output function int_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:int-ref-schema.sql:26: NOTICE:  00000: CREATE TYPE int_refs (
  INPUT = int_refs_in_op,
  OUTPUT = int_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS int_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS int_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (int_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (int_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (int_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (int_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_refs_cmp(int_refs, int_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_refs_cmp(int_refs,int_refs) IS
'int_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_refs_lt(int_refs, int_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_refs_lt(int_refs,int_refs) IS
'int_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = int_refs,
	 rightarg = int_refs,
	 procedure = int_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_refs_le(int_refs, int_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_refs_le(int_refs,int_refs) IS
'int_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = int_refs,
	 rightarg = int_refs,
	 procedure = int_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_refs_eq(int_refs, int_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_refs_eq(int_refs,int_refs) IS
'int_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = int_refs,
	 rightarg = int_refs,
	 procedure = int_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_refs_neq(int_refs, int_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_refs_neq(int_refs,int_refs) IS
'int_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = int_refs,
	 rightarg = int_refs,
	 procedure = int_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_refs_ge(int_refs, int_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_refs_ge(int_refs,int_refs) IS
'int_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = int_refs,
	 rightarg = int_refs,
	 procedure = int_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_refs_gt(int_refs, int_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_refs_gt(int_refs,int_refs) IS
'int_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = int_refs,
	 rightarg = int_refs,
	 procedure = int_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:26: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS int_refs_ops
		DEFAULT FOR TYPE int_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       int_refs_cmp(int_refs, int_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 int_refs
(1 row)

psql:int-ref-schema.sql:32: NOTICE:  00000: type "int_ref_values" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP DOMAIN
CREATE DOMAIN
CREATE TABLE
INSERT 0 1
CREATE TABLE
COMMENT
COMMENT
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE int_rows_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE int_rows_row_handles (
	handle handles NOT NULL UNIQUE,
	ref int_refs PRIMARY KEY  REFERENCES int_rows(ref)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE int_rows_row_handles IS
'row handles associated with int_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_rows_row_get_(handle handles, ref int_refs)
RETURNS int_rows LANGUAGE SQL  STRICT AS
'SELECT int_rows.*
 FROM int_rows,int_rows_row_handles
WHERE
int_rows_row_handles.handle=$1 AND int_rows_row_handles.ref=$2
AND
int_rows.ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_rows_row_get_(handles,int_refs) IS
'int_rows_row_get_(handle, ref): find existing handle for row of int_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_rows_row_set_(handle handles, ref int_refs)
RETURNS int_rows LANGUAGE SQL  STRICT AS
'
	INSERT INTO int_rows_row_handles VALUES ( $1, $2);
	SELECT int_rows_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_rows_row_set_(handles,int_refs) IS
'int_rows_row_set_(handle, ref): make new handle for row of int_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_rows_row(handle handles, ref int_refs)
RETURNS int_rows LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   int_rows_row_get_( $1, $2),
   int_rows_row_set_( $1, $2)
  )FROM debug_enter(
  ''int_rows_row(handles, int_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_rows_row(handles,int_refs) IS
'int_rows_row(handle, ref): ensure handle for row of int_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_rows_row(handle handles)
RETURNS int_rows LANGUAGE SQL  STRICT AS
'SELECT int_rows.*
  FROM int_rows, int_rows_row_handles
  WHERE $1 = int_rows_row_handles.handle
    AND int_rows.ref=int_rows_row_handles.ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_rows_row(handles) IS
's3_more.int_rows_row(handle): return a row given a handle for int_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_rows_ref(handle handles)
RETURNS int_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM int_rows_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_rows_ref(handles) IS
'int_rows_ref(handle): given a row handle for int_rows return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_rows_ref(handle handles, ref int_refs)
RETURNS int_refs LANGUAGE SQL  STRICT AS
'SELECT (int_rows_row( $1, $2)).ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:61: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_rows_ref(handles,int_refs) IS
's3_more.int_rows_ref(handle, ref): set handle for primary key of int_rows and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                               create_handles_for                                                               
------------------------------------------------------------------------------------------------------------------------------------------------
 ({int_rows_row_handles},"{""int_rows_row(handles,int_refs)"",int_rows_row(handles),int_rows_ref(handles),""int_rows_ref(handles,int_refs)""}")
(1 row)

psql:int-ref-schema.sql:65: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_rows_13_exists(_ref int_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM int_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:65: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_rows_13_exists(int_refs) IS
'int_rows_13_exists(_ref): referential integrity test method for row of int_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:65: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS int_rows_no_update_trigger ON int_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:65: NOTICE:  00000: trigger "int_rows_no_update_trigger" for relation "int_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:int-ref-schema.sql:65: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER int_rows_no_update_trigger
  BEFORE UPDATE ON int_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:65: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_int_from_id(ref_ids)
RETURNS int_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''int_refs'', ''int_rows'', $1
	)::int_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:65: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_int_from_id(ref_ids) IS
'unchecked_int_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:65: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION int_nil()
RETURNS int_refs LANGUAGE SQL  AS
'	SELECT unchecked_int_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:65: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION int_nil() IS
'int_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:65: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_int(_ref refs)
RETURNS int_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM int_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:65: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_int(refs) IS
'try_int(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
               declare_ref_class_with_funcs               
----------------------------------------------------------
 {unchecked_int_from_id(ref_ids),int_nil(),try_int(refs)}
(1 row)

psql:int-ref-schema.sql:66: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE int_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:66: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE int_seq OWNED BY int_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:66: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_int_ref()
RETURNS int_refs LANGUAGE SQL  AS
'SELECT unchecked_int_from_id(nextval(''int_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:66: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_int_ref() IS
'next_int_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:int-ref-schema.sql:66: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE int_rows ALTER COLUMN ref SET DEFAULT next_int_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_simple_serial 
----------------------
 next_int_ref()
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f int-ref-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/int-ref-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/int-ref-code.sql-out-err /home/greg/.Wicci/Make/wicci1/int-ref-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                              set_file                               
---------------------------------------------------------------------
 schema more-int-code.sql, module more-int-code, revision $Id, id 64
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
 declare_name 
--------------
            1
(1 row)

CREATE FUNCTION
                          type_class_op_method                           
-------------------------------------------------------------------------
 (13,"ref_env_text_op(refs,env_refs)","int_ref_text(int_refs,env_refs)")
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f scalar-ref-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/scalar-ref-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/scalar-ref-test.sql-out-err /home/greg/.Wicci/Make/wicci1/scalar-ref-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                  set_file                                   
-----------------------------------------------------------------------------
 schema more-test-scalars.sql, module more-test-scalars, revision $Id, id 65
(1 row)

SELECT refs_debug_set(2);
 refs_debug_set 
----------------
              0
(1 row)

SELECT spx_debug_on();
 spx_debug_on 
--------------
            1
(1 row)

SELECT refs_debug_on();
 refs_debug_on 
---------------
             2
(1 row)

-- * type bool_refs
SELECT test_func(
	'bool_ref(boolean)', false::bool_refs::boolean, false
);
     test_func     
-------------------
 bool_ref(boolean)
(1 row)

SELECT test_func(
	'bool_ref(boolean)', true::bool_refs::boolean, true
);
     test_func     
-------------------
 bool_ref(boolean)
(1 row)

SELECT test_func(
	'bool_ref_text(bool_refs, env_refs)',
	 bool_ref_text(false::bool_refs),
	 'false'::text
);
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.try_name_in($1::text)
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxPlanQuery, spx.c:1554
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.try_name_in($1::text) ->  plan 0x23dd388 nargs= 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxPlanQuery, spx.c:1567
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:26: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:26: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.name_text($1)
LOCATION:  SpxPlanQuery, spx.c:1554
psql:scalar-ref-test.sql:26: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.name_text($1) ->  plan 0x25ded48 nargs= 1
LOCATION:  SpxPlanQuery, spx.c:1567
psql:scalar-ref-test.sql:26: NOTICE:  00000: RefEtcToValue:
	op ref_text_op(refs)/1
	method name_text(name_refs)/1
	 ref tag=3 id=21
LOCATION:  TomDebug, refs.c:300
psql:scalar-ref-test.sql:26: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x25ded48 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:26: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:26: NOTICE:  00000: RefEtcToValue.SpxQueryText.RowColStrPtr:
	Returning false
LOCATION:  RowColStrPtr, spx.c:1757
             test_func             
-----------------------------------
 bool_ref_text(bool_refs,env_refs)
(1 row)

SELECT test_func(
	'bool_ref_text(bool_refs, env_refs)',
	 bool_ref_text(true::bool_refs),
	 'true'::text
);
psql:scalar-ref-test.sql:32: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:32: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:32: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:32: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:32: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:32: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:32: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:32: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:32: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:32: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:32: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:32: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:32: NOTICE:  00000: RefEtcToValue:
	op ref_text_op(refs)/1
	method name_text(name_refs)/1
	 ref tag=3 id=22
LOCATION:  TomDebug, refs.c:300
psql:scalar-ref-test.sql:32: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x25ded48 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:32: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:32: NOTICE:  00000: RefEtcToValue.SpxQueryText.RowColStrPtr:
	Returning true
LOCATION:  RowColStrPtr, spx.c:1757
             test_func             
-----------------------------------
 bool_ref_text(bool_refs,env_refs)
(1 row)

SELECT declare_name('off', 'on');
 declare_name 
--------------
            2
(1 row)

SELECT declare_bool_env_literals(user_base_env(),  'off', 'on');
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 1: ...ELECT declare_bool_env_literals(user_base_env(),  'off', 'on...
                                                             ^
LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 1: ...ELECT declare_bool_env_literals(user_base_env(),  'off', 'on...
                                                             ^
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 1: ...ELECT declare_bool_env_literals(user_base_env(),  'off', 'on...
                                                             ^
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 1: ...ELECT declare_bool_env_literals(user_base_env(),  'off', 'on...
                                                             ^
LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 1: ...ELECT declare_bool_env_literals(user_base_env(),  'off', 'on...
                                                             ^
LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1638403
LINE 1: ...ELECT declare_bool_env_literals(user_base_env(),  'off', 'on...
                                                             ^
LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 1: ...CT declare_bool_env_literals(user_base_env(),  'off', 'on');
                                                                 ^
LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 1: ...CT declare_bool_env_literals(user_base_env(),  'off', 'on');
                                                                 ^
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 1: ...CT declare_bool_env_literals(user_base_env(),  'off', 'on');
                                                                 ^
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 1: ...CT declare_bool_env_literals(user_base_env(),  'off', 'on');
                                                                 ^
LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 1: ...CT declare_bool_env_literals(user_base_env(),  'off', 'on');
                                                                 ^
LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1703939
LINE 1: ...CT declare_bool_env_literals(user_base_env(),  'off', 'on');
                                                                 ^
LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:35: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
 declare_bool_env_literals 
---------------------------
                         2
(1 row)

SELECT declare_bool_refs(user_base_env());
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:37: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
 declare_bool_refs 
-------------------
                 2
(1 row)

SELECT test_func(
	'bool_ref_text(bool_refs, env_refs)',
	 bool_ref_text( bool_ref(false, user_base_env()) ),
	'off'::text
);
psql:scalar-ref-test.sql:43: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:43: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:43: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:43: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:43: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:43: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:43: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:43: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:43: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:43: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:43: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:43: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:43: NOTICE:  00000: RefEtcToValue:
	op ref_text_op(refs)/1
	method name_text(name_refs)/1
	 ref tag=3 id=25
LOCATION:  TomDebug, refs.c:300
psql:scalar-ref-test.sql:43: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x25ded48 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:43: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:43: NOTICE:  00000: RefEtcToValue.SpxQueryText.RowColStrPtr:
	Returning off
LOCATION:  RowColStrPtr, spx.c:1757
             test_func             
-----------------------------------
 bool_ref_text(bool_refs,env_refs)
(1 row)

SELECT test_func(
	'bool_ref_text(bool_refs, env_refs)',
	 bool_ref_text(bool_ref(true, user_base_env())),
	'on'::text
);
psql:scalar-ref-test.sql:49: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:49: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:49: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:49: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:49: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:49: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:49: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:49: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:49: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:49: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:49: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:49: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:49: NOTICE:  00000: RefEtcToValue:
	op ref_text_op(refs)/1
	method name_text(name_refs)/1
	 ref tag=3 id=26
LOCATION:  TomDebug, refs.c:300
psql:scalar-ref-test.sql:49: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x25ded48 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:49: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:49: NOTICE:  00000: RefEtcToValue.SpxQueryText.RowColStrPtr:
	Returning on
LOCATION:  RowColStrPtr, spx.c:1757
             test_func             
-----------------------------------
 bool_ref_text(bool_refs,env_refs)
(1 row)

SELECT declare_bool_ref_literals(user_base_env(), 'off', 'on');
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 1: SELECT declare_bool_ref_literals(user_base_env(), 'off', 'on...
                                                          ^
LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 1: SELECT declare_bool_ref_literals(user_base_env(), 'off', 'on...
                                                          ^
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 1: SELECT declare_bool_ref_literals(user_base_env(), 'off', 'on...
                                                          ^
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 1: SELECT declare_bool_ref_literals(user_base_env(), 'off', 'on...
                                                          ^
LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 1: SELECT declare_bool_ref_literals(user_base_env(), 'off', 'on...
                                                          ^
LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1638403
LINE 1: SELECT declare_bool_ref_literals(user_base_env(), 'off', 'on...
                                                          ^
LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 1: ...ECT declare_bool_ref_literals(user_base_env(), 'off', 'on');
                                                                 ^
LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 1: ...ECT declare_bool_ref_literals(user_base_env(), 'off', 'on');
                                                                 ^
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 1: ...ECT declare_bool_ref_literals(user_base_env(), 'off', 'on');
                                                                 ^
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 1: ...ECT declare_bool_ref_literals(user_base_env(), 'off', 'on');
                                                                 ^
LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 1: ...ECT declare_bool_ref_literals(user_base_env(), 'off', 'on');
                                                                 ^
LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1703939
LINE 1: ...ECT declare_bool_ref_literals(user_base_env(), 'off', 'on');
                                                                 ^
LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:51: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
 declare_bool_ref_literals 
---------------------------
                         2
(1 row)

SELECT test_func(
	'bool_ref_(text)', bool_ref_('off'), bool_ref(false, user_base_env())
);
psql:scalar-ref-test.sql:55: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:55: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:55: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:55: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:55: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:55: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:55: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:55: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:55: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:55: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:55: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:55: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
    test_func    
-----------------
 bool_ref_(text)
(1 row)

SELECT test_func(
	'bool_ref_(text)', bool_ref_('on'), bool_ref(true, user_base_env())
);
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:59: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
    test_func    
-----------------
 bool_ref_(text)
(1 row)

	
SELECT declare_name('Up', 'Down');
 declare_name 
--------------
            2
(1 row)

SELECT env_add_association(
	user_base_env(), bool_ref(false)::refs,
	bool_ref_key(false), 'Down'::name_refs::refs
);
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:  bool_ref_key(false), 'Down'::name_refs::refs
                              ^
LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:  bool_ref_key(false), 'Down'::name_refs::refs
                              ^
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:  bool_ref_key(false), 'Down'::name_refs::refs
                              ^
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:  bool_ref_key(false), 'Down'::name_refs::refs
                              ^
LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:  bool_ref_key(false), 'Down'::name_refs::refs
                              ^
LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1835011
LINE 3:  bool_ref_key(false), 'Down'::name_refs::refs
                              ^
LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s1_refs.ref_textout($1)::cstring
LOCATION:  SpxPlanQuery, spx.c:1554
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s1_refs.ref_textout($1)::cstring ->  plan 0x2672d58 nargs= 1
LOCATION:  SpxPlanQuery, spx.c:1567
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x2672d58 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning env_refs:env_rows:1
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s1_refs.ref_textout($1)::cstring
LOCATION:  SpxPlanQuery, spx.c:1554
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s1_refs.ref_textout($1)::cstring ->  plan 0x267ada8 nargs= 1
LOCATION:  SpxPlanQuery, spx.c:1567
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x267ada8 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning bool_refs:bool_rows:-1
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.name_text($1)::cstring
LOCATION:  SpxPlanQuery, spx.c:1554
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.name_text($1)::cstring ->  plan 0x267c9f8 nargs= 1
LOCATION:  SpxPlanQuery, spx.c:1567
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x267c9f8 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning bool-ref-false
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x267c9f8 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:66: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning Down
LOCATION:  RowColStrPtr, spx.c:1757
                                env_add_association                                 
------------------------------------------------------------------------------------
 (env_refs:env_rows:1,bool_refs:bool_rows:-1,bool-ref-false,Down,"inserted status")
(1 row)

SELECT env_add_association(
	user_base_env(), bool_ref(true)::refs,
	bool_ref_key(true), 'Up'::name_refs::refs
);
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:  bool_ref_key(true), 'Up'::name_refs::refs
                             ^
LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:  bool_ref_key(true), 'Up'::name_refs::refs
                             ^
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:  bool_ref_key(true), 'Up'::name_refs::refs
                             ^
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:  bool_ref_key(true), 'Up'::name_refs::refs
                             ^
LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:  bool_ref_key(true), 'Up'::name_refs::refs
                             ^
LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1769475
LINE 3:  bool_ref_key(true), 'Up'::name_refs::refs
                             ^
LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x2672d58 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning env_refs:env_rows:1
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x267ada8 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning bool_refs:bool_rows:-2
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x267c9f8 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning bool-ref-true
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x267c9f8 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:71: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning Up
LOCATION:  RowColStrPtr, spx.c:1757
                               env_add_association                               
---------------------------------------------------------------------------------
 (env_refs:env_rows:1,bool_refs:bool_rows:-2,bool-ref-true,Up,"inserted status")
(1 row)

SELECT test_func(
	'env_best_text(env_refs, refs, name_refs, env_refs, env_refs)',
 	ref_env_text_op( bool_ref(false), user_base_env() ),
	'Down'
);
psql:scalar-ref-test.sql:77: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s3_more.bool_ref_text($1,$2)
LOCATION:  SpxPlanQuery, spx.c:1554
psql:scalar-ref-test.sql:77: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s3_more.bool_ref_text($1,$2) ->  plan 0x2672588 nargs= 2
LOCATION:  SpxPlanQuery, spx.c:1567
psql:scalar-ref-test.sql:77: NOTICE:  00000: RefEtcToValue:
	op ref_env_text_op(refs,env_refs)/2
	method bool_ref_text(bool_refs,env_refs)/2
	 ref tag=11 id=-1
LOCATION:  TomDebug, refs.c:300
psql:scalar-ref-test.sql:77: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x2672588 nargs= 2, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:77: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:77: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:77: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:77: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:77: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:77: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:77: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:77: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:77: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:77: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:77: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:77: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:77: NOTICE:  00000: RefEtcToValue:
	op ref_text_op(refs)/1
	method name_text(name_refs)/1
	 ref tag=3 id=28
LOCATION:  TomDebug, refs.c:300
psql:scalar-ref-test.sql:77: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x25ded48 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:77: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:77: NOTICE:  00000: RefEtcToValue.SpxQueryText.RowColStrPtr:
	Returning Down
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:77: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:77: NOTICE:  00000: RefEtcToValue.SpxQueryText.RowColStrPtr:
	Returning Down
LOCATION:  RowColStrPtr, spx.c:1757
                        test_func                         
----------------------------------------------------------
 env_best_text(env_refs,refs,name_refs,env_refs,env_refs)
(1 row)

SELECT test_func(
	'env_best_text(env_refs, refs, name_refs, env_refs, env_refs)',
 	ref_env_text_op( bool_ref(true), user_base_env() ),
	'Up'
);
psql:scalar-ref-test.sql:83: NOTICE:  00000: RefEtcToValue:
	op ref_env_text_op(refs,env_refs)/2
	method bool_ref_text(bool_refs,env_refs)/2
	 ref tag=11 id=-2
LOCATION:  TomDebug, refs.c:300
psql:scalar-ref-test.sql:83: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x2672588 nargs= 2, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:83: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:83: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:83: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:83: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:83: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:83: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1245187
LINE 3:   WHEN false THEN 'bool-ref-false'::name_refs
                          ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:83: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:83: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:83: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:83: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:83: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:83: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1310723
LINE 4:   WHEN true THEN 'bool-ref-true'::name_refs
                         ^
QUERY:  
	SELECT CASE $1
		WHEN false THEN 'bool-ref-false'::name_refs
		WHEN true THEN 'bool-ref-true'::name_refs
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:83: NOTICE:  00000: RefEtcToValue:
	op ref_text_op(refs)/1
	method name_text(name_refs)/1
	 ref tag=3 id=27
LOCATION:  TomDebug, refs.c:300
psql:scalar-ref-test.sql:83: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x25ded48 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:83: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:83: NOTICE:  00000: RefEtcToValue.SpxQueryText.RowColStrPtr:
	Returning Up
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:83: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:83: NOTICE:  00000: RefEtcToValue.SpxQueryText.RowColStrPtr:
	Returning Up
LOCATION:  RowColStrPtr, spx.c:1757
                        test_func                         
----------------------------------------------------------
 env_best_text(env_refs,refs,name_refs,env_refs,env_refs)
(1 row)

TABLE bool_rows;
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x267ada8 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning bool_refs:bool_rows:-1
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x2672d58 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning env_refs:env_rows:0
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x267ada8 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning bool_refs:bool_rows:-2
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x2672d58 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning env_refs:env_rows:0
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x267ada8 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning bool_refs:bool_rows:1
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x2672d58 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning env_refs:env_rows:1
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x267ada8 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning bool_refs:bool_rows:2
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x2672d58 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:85: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning env_refs:env_rows:1
LOCATION:  RowColStrPtr, spx.c:1757
          ref           |         env         | value_ 
------------------------+---------------------+--------
 bool_refs:bool_rows:-1 | env_refs:env_rows:0 | f
 bool_refs:bool_rows:-2 | env_refs:env_rows:0 | t
 bool_refs:bool_rows:1  | env_refs:env_rows:1 | f
 bool_refs:bool_rows:2  | env_refs:env_rows:1 | t
(4 rows)

-- type int_refs
SELECT get_int_ref(123456);
psql:scalar-ref-test.sql:89: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s1_refs.ref_textout($1)::cstring
LOCATION:  SpxPlanQuery, spx.c:1554
psql:scalar-ref-test.sql:89: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s1_refs.ref_textout($1)::cstring ->  plan 0x266b748 nargs= 1
LOCATION:  SpxPlanQuery, spx.c:1567
psql:scalar-ref-test.sql:89: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x266b748 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:89: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:89: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning int_refs:int_rows:1
LOCATION:  RowColStrPtr, spx.c:1757
     get_int_ref     
---------------------
 int_refs:int_rows:1
(1 row)

SELECT declare_name('$S9,999,999.99');
 declare_name 
--------------
            1
(1 row)

SELECT system_set('int-ref-format'::name_refs, find_name('$S9,999,999.99'));
psql:scalar-ref-test.sql:93: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 1: SELECT system_set('int-ref-format'::name_refs, find_name('$S...
                          ^
LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:93: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 1: SELECT system_set('int-ref-format'::name_refs, find_name('$S...
                          ^
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:93: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 1: SELECT system_set('int-ref-format'::name_refs, find_name('$S...
                          ^
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:93: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 1: SELECT system_set('int-ref-format'::name_refs, find_name('$S...
                          ^
LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:93: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 1: SELECT system_set('int-ref-format'::name_refs, find_name('$S...
                          ^
LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:93: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1572867
LINE 1: SELECT system_set('int-ref-format'::name_refs, find_name('$S...
                          ^
LOCATION:  RowColTypeInt64, spx.c:1678
 system_set 
------------
 t
(1 row)

SELECT get_int_ref('123456', system_base_env());
psql:scalar-ref-test.sql:95: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x266b748 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:95: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:95: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning int_refs:int_rows:2
LOCATION:  RowColStrPtr, spx.c:1757
     get_int_ref     
---------------------
 int_refs:int_rows:2
(1 row)

SELECT false::bool_refs;
psql:scalar-ref-test.sql:97: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x267ada8 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:97: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:97: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning bool_refs:bool_rows:-1
LOCATION:  RowColStrPtr, spx.c:1757
       bool_refs        
------------------------
 bool_refs:bool_rows:-1
(1 row)

SELECT true::bool_refs;
psql:scalar-ref-test.sql:99: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x267ada8 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:99: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:99: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning bool_refs:bool_rows:-2
LOCATION:  RowColStrPtr, spx.c:1757
       bool_refs        
------------------------
 bool_refs:bool_rows:-2
(1 row)

SELECT get_int_ref(123456);
psql:scalar-ref-test.sql:101: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x266b748 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:101: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:101: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning int_refs:int_rows:1
LOCATION:  RowColStrPtr, spx.c:1757
     get_int_ref     
---------------------
 int_refs:int_rows:1
(1 row)

SELECT ref_env_text_op(
	get_int_ref(123456), system_base_env()
);
psql:scalar-ref-test.sql:105: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s3_more.int_ref_text($1,$2)
LOCATION:  SpxPlanQuery, spx.c:1554
psql:scalar-ref-test.sql:105: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s3_more.int_ref_text($1,$2) ->  plan 0x264ce18 nargs= 2
LOCATION:  SpxPlanQuery, spx.c:1567
psql:scalar-ref-test.sql:105: NOTICE:  00000: RefEtcToValue:
	op ref_env_text_op(refs,env_refs)/2
	method int_ref_text(int_refs,env_refs)/2
	 ref tag=13 id=1
LOCATION:  TomDebug, refs.c:300
psql:scalar-ref-test.sql:105: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x264ce18 nargs= 2, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:105: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 5:    value_, try_env_best_text($2, $1, 'int-ref-format', env)
                                             ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_, try_env_best_text($2, $1, 'int-ref-format', env)
		), value_::text
	) FROM int_rows WHERE ref = $1;

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:105: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 5:    value_, try_env_best_text($2, $1, 'int-ref-format', env)
                                             ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_, try_env_best_text($2, $1, 'int-ref-format', env)
		), value_::text
	) FROM int_rows WHERE ref = $1;

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:105: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 5:    value_, try_env_best_text($2, $1, 'int-ref-format', env)
                                             ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_, try_env_best_text($2, $1, 'int-ref-format', env)
		), value_::text
	) FROM int_rows WHERE ref = $1;

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:105: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 5:    value_, try_env_best_text($2, $1, 'int-ref-format', env)
                                             ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_, try_env_best_text($2, $1, 'int-ref-format', env)
		), value_::text
	) FROM int_rows WHERE ref = $1;

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:105: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 5:    value_, try_env_best_text($2, $1, 'int-ref-format', env)
                                             ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_, try_env_best_text($2, $1, 'int-ref-format', env)
		), value_::text
	) FROM int_rows WHERE ref = $1;

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:105: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1572867
LINE 5:    value_, try_env_best_text($2, $1, 'int-ref-format', env)
                                             ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_, try_env_best_text($2, $1, 'int-ref-format', env)
		), value_::text
	) FROM int_rows WHERE ref = $1;

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:105: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 5:    value_, try_env_best_text($2, $1, 'int-ref-format', env)
                                             ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_, try_env_best_text($2, $1, 'int-ref-format', env)
		), value_::text
	) FROM int_rows WHERE ref = $1;

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:105: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 5:    value_, try_env_best_text($2, $1, 'int-ref-format', env)
                                             ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_, try_env_best_text($2, $1, 'int-ref-format', env)
		), value_::text
	) FROM int_rows WHERE ref = $1;

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:105: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 5:    value_, try_env_best_text($2, $1, 'int-ref-format', env)
                                             ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_, try_env_best_text($2, $1, 'int-ref-format', env)
		), value_::text
	) FROM int_rows WHERE ref = $1;

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:105: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 5:    value_, try_env_best_text($2, $1, 'int-ref-format', env)
                                             ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_, try_env_best_text($2, $1, 'int-ref-format', env)
		), value_::text
	) FROM int_rows WHERE ref = $1;

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:105: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 5:    value_, try_env_best_text($2, $1, 'int-ref-format', env)
                                             ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_, try_env_best_text($2, $1, 'int-ref-format', env)
		), value_::text
	) FROM int_rows WHERE ref = $1;

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:105: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1572867
LINE 5:    value_, try_env_best_text($2, $1, 'int-ref-format', env)
                                             ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_, try_env_best_text($2, $1, 'int-ref-format', env)
		), value_::text
	) FROM int_rows WHERE ref = $1;

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:105: NOTICE:  00000: RefEtcToValue:
	op ref_text_op(refs)/1
	method name_text(name_refs)/1
	 ref tag=3 id=29
LOCATION:  TomDebug, refs.c:300
psql:scalar-ref-test.sql:105: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x25ded48 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:105: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:105: NOTICE:  00000: RefEtcToValue.SpxQueryText.RowColStrPtr:
	Returning $S9,999,999.99
LOCATION:  RowColStrPtr, spx.c:1757
psql:scalar-ref-test.sql:105: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:105: NOTICE:  00000: RefEtcToValue.SpxQueryText.RowColStrPtr:
	Returning $  +123,456.00
LOCATION:  RowColStrPtr, spx.c:1757
 ref_env_text_op 
-----------------
 $  +123,456.00
(1 row)

SELECT get_int_ref(123456, system_base_env());
psql:scalar-ref-test.sql:107: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x266b748 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:107: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:107: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning int_refs:int_rows:2
LOCATION:  RowColStrPtr, spx.c:1757
     get_int_ref     
---------------------
 int_refs:int_rows:2
(1 row)

-- * type float_refs
SELECT get_float_ref(1234.56);
psql:scalar-ref-test.sql:111: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s1_refs.ref_textout($1)::cstring
LOCATION:  SpxPlanQuery, spx.c:1554
psql:scalar-ref-test.sql:111: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s1_refs.ref_textout($1)::cstring ->  plan 0x2666768 nargs= 1
LOCATION:  SpxPlanQuery, spx.c:1567
psql:scalar-ref-test.sql:111: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x2666768 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:111: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:111: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning float_refs:float_rows:1
LOCATION:  RowColStrPtr, spx.c:1757
      get_float_ref      
-------------------------
 float_refs:float_rows:1
(1 row)

SELECT get_float_ref('1234.56', system_base_env());
psql:scalar-ref-test.sql:113: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x2666768 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:113: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:113: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning float_refs:float_rows:2
LOCATION:  RowColStrPtr, spx.c:1757
      get_float_ref      
-------------------------
 float_refs:float_rows:2
(1 row)

SELECT ref_env_text_op(
	get_float_ref(1234.56), system_base_env()
);
psql:scalar-ref-test.sql:117: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s3_more.float_ref_text($1,$2)
LOCATION:  SpxPlanQuery, spx.c:1554
psql:scalar-ref-test.sql:117: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s3_more.float_ref_text($1,$2) ->  plan 0x252b5f8 nargs= 2
LOCATION:  SpxPlanQuery, spx.c:1567
psql:scalar-ref-test.sql:117: NOTICE:  00000: RefEtcToValue:
	op ref_env_text_op(refs,env_refs)/2
	method float_ref_text(float_refs,env_refs)/2
	 ref tag=12 id=1
LOCATION:  TomDebug, refs.c:300
psql:scalar-ref-test.sql:117: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x252b5f8 nargs= 2, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:117: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    try_env_best_text($2,$1,'float-ref-format',env)
                                   ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_,
			try_env_best_text($2,$1,'float-ref-format',env)
		),
		value_::text
	) FROM float_rows WHERE ref = $1;

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:117: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 6:    try_env_best_text($2,$1,'float-ref-format',env)
                                   ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_,
			try_env_best_text($2,$1,'float-ref-format',env)
		),
		value_::text
	) FROM float_rows WHERE ref = $1;

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:117: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    try_env_best_text($2,$1,'float-ref-format',env)
                                   ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_,
			try_env_best_text($2,$1,'float-ref-format',env)
		),
		value_::text
	) FROM float_rows WHERE ref = $1;

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:117: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    try_env_best_text($2,$1,'float-ref-format',env)
                                   ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_,
			try_env_best_text($2,$1,'float-ref-format',env)
		),
		value_::text
	) FROM float_rows WHERE ref = $1;

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:117: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 6:    try_env_best_text($2,$1,'float-ref-format',env)
                                   ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_,
			try_env_best_text($2,$1,'float-ref-format',env)
		),
		value_::text
	) FROM float_rows WHERE ref = $1;

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:117: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1507331
LINE 6:    try_env_best_text($2,$1,'float-ref-format',env)
                                   ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_,
			try_env_best_text($2,$1,'float-ref-format',env)
		),
		value_::text
	) FROM float_rows WHERE ref = $1;

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:117: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    try_env_best_text($2,$1,'float-ref-format',env)
                                   ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_,
			try_env_best_text($2,$1,'float-ref-format',env)
		),
		value_::text
	) FROM float_rows WHERE ref = $1;

LOCATION:  UnknownReport, spx.c:130
psql:scalar-ref-test.sql:117: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x23dd388 nargs= 1, maxrows: 1
LINE 6:    try_env_best_text($2,$1,'float-ref-format',env)
                                   ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_,
			try_env_best_text($2,$1,'float-ref-format',env)
		),
		value_::text
	) FROM float_rows WHERE ref = $1;

LOCATION:  SpxAccessDB, spx.c:1789
psql:scalar-ref-test.sql:117: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    try_env_best_text($2,$1,'float-ref-format',env)
                                   ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_,
			try_env_best_text($2,$1,'float-ref-format',env)
		),
		value_::text
	) FROM float_rows WHERE ref = $1;

LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:117: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    try_env_best_text($2,$1,'float-ref-format',env)
                                   ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_,
			try_env_best_text($2,$1,'float-ref-format',env)
		),
		value_::text
	) FROM float_rows WHERE ref = $1;

LOCATION:  RowColDatumType, spx.c:1610
psql:scalar-ref-test.sql:117: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 6:    try_env_best_text($2,$1,'float-ref-format',env)
                                   ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_,
			try_env_best_text($2,$1,'float-ref-format',env)
		),
		value_::text
	) FROM float_rows WHERE ref = $1;

LOCATION:  RowColDatumType, spx.c:1641
psql:scalar-ref-test.sql:117: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 1507331
LINE 6:    try_env_best_text($2,$1,'float-ref-format',env)
                                   ^
QUERY:  
	-- is the contextualization here quite right???
	SELECT COALESCE(
		to_char(
			value_,
			try_env_best_text($2,$1,'float-ref-format',env)
		),
		value_::text
	) FROM float_rows WHERE ref = $1;

LOCATION:  RowColTypeInt64, spx.c:1678
psql:scalar-ref-test.sql:117: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:scalar-ref-test.sql:117: NOTICE:  00000: RefEtcToValue.SpxQueryText.RowColStrPtr:
	Returning 1234.56
LOCATION:  RowColStrPtr, spx.c:1757
 ref_env_text_op 
-----------------
 1234.56
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f array-ref-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/array-ref-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/array-ref-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/array-ref-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                  set_file                                   
-----------------------------------------------------------------------------
 schema more-array-schema.sql, module more-array-schema, revision $Id, id 66
(1 row)

psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE array_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: created shell type array_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION array_refs_in_op(cstring,oid,integer)
RETURNS array_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  42809: return type array_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:array-ref-schema.sql:37: NOTICE:  00000: CREATED array_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION array_refs_out_op(array_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  42809: argument type array_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:array-ref-schema.sql:37: NOTICE:  00000: CREATED array_refs_out_op(array_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE array_refs (
  INPUT = array_refs_in_op,
  OUTPUT = array_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: WARNING:  42P17: type input function array_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:array-ref-schema.sql:37: WARNING:  42P17: type output function array_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:array-ref-schema.sql:37: NOTICE:  00000: CREATE TYPE array_refs (
  INPUT = array_refs_in_op,
  OUTPUT = array_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS array_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS array_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (array_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (array_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (array_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (array_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_refs_cmp(array_refs, array_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_refs_cmp(array_refs,array_refs) IS
'array_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_refs_lt(array_refs, array_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_refs_lt(array_refs,array_refs) IS
'array_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = array_refs,
	 rightarg = array_refs,
	 procedure = array_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_refs_le(array_refs, array_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_refs_le(array_refs,array_refs) IS
'array_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = array_refs,
	 rightarg = array_refs,
	 procedure = array_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_refs_eq(array_refs, array_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_refs_eq(array_refs,array_refs) IS
'array_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = array_refs,
	 rightarg = array_refs,
	 procedure = array_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_refs_neq(array_refs, array_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_refs_neq(array_refs,array_refs) IS
'array_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = array_refs,
	 rightarg = array_refs,
	 procedure = array_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_refs_ge(array_refs, array_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_refs_ge(array_refs,array_refs) IS
'array_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = array_refs,
	 rightarg = array_refs,
	 procedure = array_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_refs_gt(array_refs, array_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_refs_gt(array_refs,array_refs) IS
'array_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = array_refs,
	 rightarg = array_refs,
	 procedure = array_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:37: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS array_refs_ops
		DEFAULT FOR TYPE array_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       array_refs_cmp(array_refs, array_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 array_refs
(1 row)

CREATE TABLE
COMMENT
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE array_rows_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE array_rows_row_handles (
	handle handles NOT NULL UNIQUE,
	ref array_refs PRIMARY KEY  REFERENCES array_rows(ref)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE array_rows_row_handles IS
'row handles associated with array_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_rows_row_get_(handle handles, ref array_refs)
RETURNS array_rows LANGUAGE SQL  STRICT AS
'SELECT array_rows.*
 FROM array_rows,array_rows_row_handles
WHERE
array_rows_row_handles.handle=$1 AND array_rows_row_handles.ref=$2
AND
array_rows.ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_rows_row_get_(handles,array_refs) IS
'array_rows_row_get_(handle, ref): find existing handle for row of array_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_rows_row_set_(handle handles, ref array_refs)
RETURNS array_rows LANGUAGE SQL  STRICT AS
'
	INSERT INTO array_rows_row_handles VALUES ( $1, $2);
	SELECT array_rows_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_rows_row_set_(handles,array_refs) IS
'array_rows_row_set_(handle, ref): make new handle for row of array_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_rows_row(handle handles, ref array_refs)
RETURNS array_rows LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   array_rows_row_get_( $1, $2),
   array_rows_row_set_( $1, $2)
  )FROM debug_enter(
  ''array_rows_row(handles, array_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_rows_row(handles,array_refs) IS
'array_rows_row(handle, ref): ensure handle for row of array_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_rows_row(handle handles)
RETURNS array_rows LANGUAGE SQL  STRICT AS
'SELECT array_rows.*
  FROM array_rows, array_rows_row_handles
  WHERE $1 = array_rows_row_handles.handle
    AND array_rows.ref=array_rows_row_handles.ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_rows_row(handles) IS
's3_more.array_rows_row(handle): return a row given a handle for array_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_rows_ref(handle handles)
RETURNS array_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM array_rows_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_rows_ref(handles) IS
'array_rows_ref(handle): given a row handle for array_rows return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_rows_ref(handle handles, ref array_refs)
RETURNS array_refs LANGUAGE SQL  STRICT AS
'SELECT (array_rows_row( $1, $2)).ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_rows_ref(handles,array_refs) IS
's3_more.array_rows_ref(handle, ref): set handle for primary key of array_rows and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                      create_handles_for                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({array_rows_row_handles},"{""array_rows_row(handles,array_refs)"",array_rows_row(handles),array_rows_ref(handles),""array_rows_ref(handles,array_refs)""}")
(1 row)

psql:array-ref-schema.sql:56: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_rows_14_exists(_ref array_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM array_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:56: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_rows_14_exists(array_refs) IS
'array_rows_14_exists(_ref): referential integrity test method for row of array_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:56: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS array_rows_no_update_trigger ON array_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:56: NOTICE:  00000: trigger "array_rows_no_update_trigger" for relation "array_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:array-ref-schema.sql:56: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER array_rows_no_update_trigger
  BEFORE UPDATE ON array_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:56: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_array_from_id(ref_ids)
RETURNS array_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''array_refs'', ''array_rows'', $1
	)::array_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:56: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_array_from_id(ref_ids) IS
'unchecked_array_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:56: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION array_nil()
RETURNS array_refs LANGUAGE SQL  AS
'	SELECT unchecked_array_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:56: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION array_nil() IS
'array_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:56: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_array(_ref refs)
RETURNS array_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM array_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:56: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_array(refs) IS
's3_more.try_array(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                  declare_ref_class_with_funcs                  
----------------------------------------------------------------
 {unchecked_array_from_id(ref_ids),array_nil(),try_array(refs)}
(1 row)

psql:array-ref-schema.sql:57: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE array_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:57: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE array_seq OWNED BY array_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_array_ref()
RETURNS array_refs LANGUAGE SQL  AS
'SELECT unchecked_array_from_id(nextval(''array_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:57: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_array_ref() IS
'next_array_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:array-ref-schema.sql:57: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE array_rows ALTER COLUMN ref SET DEFAULT next_array_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_simple_serial 
----------------------
 next_array_ref()
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f array-ref-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/array-ref-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/array-ref-code.sql-out-err /home/greg/.Wicci/Make/wicci1/array-ref-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                set_file                                 
-------------------------------------------------------------------------
 schema more-array-code.sql, module more-array-code, revision $Id, id 67
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
psql:array-ref-code.sql:52: NOTICE:  00000: cast from type refs[] to type array_refs does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP CAST
CREATE CAST
CREATE FUNCTION
psql:array-ref-code.sql:63: NOTICE:  00000: cast from type array_refs to type refs[] does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP CAST
CREATE CAST
CREATE FUNCTION
 declare_name 
--------------
            3
(1 row)

CREATE FUNCTION
                                     type_class_op_method                                      
-----------------------------------------------------------------------------------------------
 (14,"ref_env_crefs_text_op(refs,env_refs,crefs)","array_ref_text(array_refs,env_refs,crefs)")
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f array-ref-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/array-ref-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/array-ref-test.sql-out-err /home/greg/.Wicci/Make/wicci1/array-ref-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                set_file                                 
-------------------------------------------------------------------------
 schema more-array-test.sql, module more-array-test, revision $Id, id 68
(1 row)

-- select spx_debug_on();
-- select refs_debug_on();
-- to do ???
-- test env_best array-ref-{pre,in,suf}fix features some more
-- once text_refs is available
SELECT refs_debug_on();
 refs_debug_on 
---------------
             1
(1 row)

SELECT declare_name('world', '_', ' ');
 declare_name 
--------------
            3
(1 row)

SELECT get_array_ref( ARRAY[ 'hello'::name_refs, 'world'::name_refs ]::refs[] );
      get_array_ref      
-------------------------
 array_refs:array_rows:1
(1 row)

SELECT system_set('array-ref-infix'::name_refs, '_'::name_refs::refs);
 system_set 
------------
 t
(1 row)

SELECT ref_env_crefs_text_op(get_array_ref( ARRAY[ 'hello'::name_refs, 'world'::name_refs ]::refs[] ), system_base_env(), crefs_nil() );
psql:array-ref-test.sql:33: NOTICE:  00000: RefEnvCrefsEtcToValue.OpCrefsArgsToTom.MethodForOpTagSpx.GetTom:
	ref_env_crefs_text_op falling back to ref_env_text_op
LOCATION:  GetTom, refs.c:95
psql:array-ref-test.sql:33: NOTICE:  00000: RefEnvCrefsEtcToValue.OpCrefsArgsToTom.MethodForOpTagSpx.GetTom:
	ref_env_text_op falling back to ref_text_op
LOCATION:  GetTom, refs.c:95
psql:array-ref-test.sql:33: NOTICE:  00000: RefEnvCrefsEtcToValue.OpCrefsArgsToTom.MethodForOpTagSpx.GetTom:
	ref_env_crefs_text_op falling back to ref_env_text_op
LOCATION:  GetTom, refs.c:95
psql:array-ref-test.sql:33: NOTICE:  00000: RefEnvCrefsEtcToValue.OpCrefsArgsToTom.MethodForOpTagSpx.GetTom:
	ref_env_text_op falling back to ref_text_op
LOCATION:  GetTom, refs.c:95
 ref_env_crefs_text_op 
-----------------------
 hello_world
(1 row)

SELECT x FROM unnest(
	array_ref_to_array(
		get_array_ref(
			 ARRAY[
				 false::bool_refs::refs,
				 get_int_ref(2)::refs,
				 get_float_ref(3.14159)::refs
			 ]
		)
	)
) x;
            x            
-------------------------
 bool_refs:bool_rows:-1
 int_refs:int_rows:3
 float_refs:float_rows:3
(3 rows)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f s3-more.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/s3-more.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/s3-more.sql-out-err /home/greg/.Wicci/Make/wicci1/s3-more.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
             set_schema_path             
-----------------------------------------
 {s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                        set_file                         
---------------------------------------------------------
 schema s3-more.sql, module s3-more, revision $Id, id 69
(1 row)

make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S3_more'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S4_doc'
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f uri-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/uri-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/uri-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/uri-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
psql:settings.sql:8: NOTICE:  00000: 
---> META declare_system_schema(text)
CREATE SCHEMA s4_doc
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

psql:uri-schema.sql:3: NOTICE:  00000: new_schema_name_id(schema_names) s4_doc ->  16 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                           set_file                            
---------------------------------------------------------------
 schema uri-schema.sql, module uri-schema, revision $Id, id 70
(1 row)

psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE uri_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: created shell type uri_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION uri_refs_in_op(cstring,oid,integer)
RETURNS uri_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  42809: return type uri_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:uri-schema.sql:33: NOTICE:  00000: CREATED uri_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION uri_refs_out_op(uri_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  42809: argument type uri_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:uri-schema.sql:33: NOTICE:  00000: CREATED uri_refs_out_op(uri_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE uri_refs (
  INPUT = uri_refs_in_op,
  OUTPUT = uri_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: WARNING:  42P17: type input function uri_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:uri-schema.sql:33: WARNING:  42P17: type output function uri_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:uri-schema.sql:33: NOTICE:  00000: CREATE TYPE uri_refs (
  INPUT = uri_refs_in_op,
  OUTPUT = uri_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS uri_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS uri_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (uri_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (uri_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (uri_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (uri_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_refs_cmp(uri_refs, uri_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_refs_cmp(uri_refs,uri_refs) IS
'uri_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_refs_lt(uri_refs, uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_refs_lt(uri_refs,uri_refs) IS
'uri_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = uri_refs,
	 rightarg = uri_refs,
	 procedure = uri_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_refs_le(uri_refs, uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_refs_le(uri_refs,uri_refs) IS
'uri_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = uri_refs,
	 rightarg = uri_refs,
	 procedure = uri_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_refs_eq(uri_refs, uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_refs_eq(uri_refs,uri_refs) IS
'uri_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = uri_refs,
	 rightarg = uri_refs,
	 procedure = uri_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_refs_neq(uri_refs, uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_refs_neq(uri_refs,uri_refs) IS
'uri_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = uri_refs,
	 rightarg = uri_refs,
	 procedure = uri_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_refs_ge(uri_refs, uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_refs_ge(uri_refs,uri_refs) IS
'uri_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = uri_refs,
	 rightarg = uri_refs,
	 procedure = uri_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_refs_gt(uri_refs, uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_refs_gt(uri_refs,uri_refs) IS
'uri_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = uri_refs,
	 rightarg = uri_refs,
	 procedure = uri_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS uri_refs_ops
		DEFAULT FOR TYPE uri_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       uri_refs_cmp(uri_refs, uri_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 uri_refs
(1 row)

psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE page_uri_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: created shell type page_uri_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION page_uri_refs_in_op(cstring,oid,integer)
RETURNS page_uri_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  42809: return type page_uri_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:uri-schema.sql:34: NOTICE:  00000: CREATED page_uri_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION page_uri_refs_out_op(page_uri_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  42809: argument type page_uri_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:uri-schema.sql:34: NOTICE:  00000: CREATED page_uri_refs_out_op(page_uri_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE page_uri_refs (
  INPUT = page_uri_refs_in_op,
  OUTPUT = page_uri_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: WARNING:  42P17: type input function page_uri_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:uri-schema.sql:34: WARNING:  42P17: type output function page_uri_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:uri-schema.sql:34: NOTICE:  00000: CREATE TYPE page_uri_refs (
  INPUT = page_uri_refs_in_op,
  OUTPUT = page_uri_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS page_uri_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS page_uri_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (page_uri_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (page_uri_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (page_uri_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (page_uri_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION page_uri_refs_cmp(page_uri_refs, page_uri_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION page_uri_refs_cmp(page_uri_refs,page_uri_refs) IS
'page_uri_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION page_uri_refs_lt(page_uri_refs, page_uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION page_uri_refs_lt(page_uri_refs,page_uri_refs) IS
'page_uri_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = page_uri_refs,
	 rightarg = page_uri_refs,
	 procedure = page_uri_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION page_uri_refs_le(page_uri_refs, page_uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION page_uri_refs_le(page_uri_refs,page_uri_refs) IS
'page_uri_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = page_uri_refs,
	 rightarg = page_uri_refs,
	 procedure = page_uri_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION page_uri_refs_eq(page_uri_refs, page_uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION page_uri_refs_eq(page_uri_refs,page_uri_refs) IS
'page_uri_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = page_uri_refs,
	 rightarg = page_uri_refs,
	 procedure = page_uri_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION page_uri_refs_neq(page_uri_refs, page_uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION page_uri_refs_neq(page_uri_refs,page_uri_refs) IS
'page_uri_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = page_uri_refs,
	 rightarg = page_uri_refs,
	 procedure = page_uri_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION page_uri_refs_ge(page_uri_refs, page_uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION page_uri_refs_ge(page_uri_refs,page_uri_refs) IS
'page_uri_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = page_uri_refs,
	 rightarg = page_uri_refs,
	 procedure = page_uri_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION page_uri_refs_gt(page_uri_refs, page_uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION page_uri_refs_gt(page_uri_refs,page_uri_refs) IS
'page_uri_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = page_uri_refs,
	 rightarg = page_uri_refs,
	 procedure = page_uri_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:34: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS page_uri_refs_ops
		DEFAULT FOR TYPE page_uri_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       page_uri_refs_cmp(page_uri_refs, page_uri_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 page_uri_refs
(1 row)

psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE entity_uri_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: created shell type entity_uri_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION entity_uri_refs_in_op(cstring,oid,integer)
RETURNS entity_uri_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  42809: return type entity_uri_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:uri-schema.sql:35: NOTICE:  00000: CREATED entity_uri_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION entity_uri_refs_out_op(entity_uri_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  42809: argument type entity_uri_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:uri-schema.sql:35: NOTICE:  00000: CREATED entity_uri_refs_out_op(entity_uri_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE entity_uri_refs (
  INPUT = entity_uri_refs_in_op,
  OUTPUT = entity_uri_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: WARNING:  42P17: type input function entity_uri_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:uri-schema.sql:35: WARNING:  42P17: type output function entity_uri_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:uri-schema.sql:35: NOTICE:  00000: CREATE TYPE entity_uri_refs (
  INPUT = entity_uri_refs_in_op,
  OUTPUT = entity_uri_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS entity_uri_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS entity_uri_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (entity_uri_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (entity_uri_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (entity_uri_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (entity_uri_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION entity_uri_refs_cmp(entity_uri_refs, entity_uri_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION entity_uri_refs_cmp(entity_uri_refs,entity_uri_refs) IS
'entity_uri_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION entity_uri_refs_lt(entity_uri_refs, entity_uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION entity_uri_refs_lt(entity_uri_refs,entity_uri_refs) IS
'entity_uri_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = entity_uri_refs,
	 rightarg = entity_uri_refs,
	 procedure = entity_uri_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION entity_uri_refs_le(entity_uri_refs, entity_uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION entity_uri_refs_le(entity_uri_refs,entity_uri_refs) IS
'entity_uri_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = entity_uri_refs,
	 rightarg = entity_uri_refs,
	 procedure = entity_uri_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION entity_uri_refs_eq(entity_uri_refs, entity_uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION entity_uri_refs_eq(entity_uri_refs,entity_uri_refs) IS
'entity_uri_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = entity_uri_refs,
	 rightarg = entity_uri_refs,
	 procedure = entity_uri_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION entity_uri_refs_neq(entity_uri_refs, entity_uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION entity_uri_refs_neq(entity_uri_refs,entity_uri_refs) IS
'entity_uri_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = entity_uri_refs,
	 rightarg = entity_uri_refs,
	 procedure = entity_uri_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION entity_uri_refs_ge(entity_uri_refs, entity_uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION entity_uri_refs_ge(entity_uri_refs,entity_uri_refs) IS
'entity_uri_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = entity_uri_refs,
	 rightarg = entity_uri_refs,
	 procedure = entity_uri_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION entity_uri_refs_gt(entity_uri_refs, entity_uri_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION entity_uri_refs_gt(entity_uri_refs,entity_uri_refs) IS
'entity_uri_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = entity_uri_refs,
	 rightarg = entity_uri_refs,
	 procedure = entity_uri_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:35: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS entity_uri_refs_ops
		DEFAULT FOR TYPE entity_uri_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       entity_uri_refs_cmp(entity_uri_refs, entity_uri_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 entity_uri_refs
(1 row)

psql:uri-schema.sql:37: NOTICE:  00000: cast from type page_uri_refs to type uri_refs does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP CAST
CREATE CAST
psql:uri-schema.sql:41: NOTICE:  00000: cast from type entity_uri_refs to type uri_refs does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP CAST
CREATE CAST
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE uri_entity_type_name_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: created shell type uri_entity_type_name_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION uri_entity_type_name_refs_in_op(cstring,oid,integer)
RETURNS uri_entity_type_name_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  42809: return type uri_entity_type_name_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:uri-schema.sql:52: NOTICE:  00000: CREATED uri_entity_type_name_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION uri_entity_type_name_refs_out_op(uri_entity_type_name_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  42809: argument type uri_entity_type_name_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:uri-schema.sql:52: NOTICE:  00000: CREATED uri_entity_type_name_refs_out_op(uri_entity_type_name_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE uri_entity_type_name_refs (
  INPUT = uri_entity_type_name_refs_in_op,
  OUTPUT = uri_entity_type_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: WARNING:  42P17: type input function uri_entity_type_name_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:uri-schema.sql:52: WARNING:  42P17: type output function uri_entity_type_name_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:uri-schema.sql:52: NOTICE:  00000: CREATE TYPE uri_entity_type_name_refs (
  INPUT = uri_entity_type_name_refs_in_op,
  OUTPUT = uri_entity_type_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS uri_entity_type_name_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS uri_entity_type_name_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (uri_entity_type_name_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (uri_entity_type_name_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (uri_entity_type_name_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (uri_entity_type_name_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_type_name_refs_cmp(uri_entity_type_name_refs, uri_entity_type_name_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_type_name_refs_cmp(uri_entity_type_name_refs,uri_entity_type_name_refs) IS
'uri_entity_type_name_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_type_name_refs_lt(uri_entity_type_name_refs, uri_entity_type_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_type_name_refs_lt(uri_entity_type_name_refs,uri_entity_type_name_refs) IS
'uri_entity_type_name_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = uri_entity_type_name_refs,
	 rightarg = uri_entity_type_name_refs,
	 procedure = uri_entity_type_name_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_type_name_refs_le(uri_entity_type_name_refs, uri_entity_type_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_type_name_refs_le(uri_entity_type_name_refs,uri_entity_type_name_refs) IS
'uri_entity_type_name_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = uri_entity_type_name_refs,
	 rightarg = uri_entity_type_name_refs,
	 procedure = uri_entity_type_name_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_type_name_refs_eq(uri_entity_type_name_refs, uri_entity_type_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_type_name_refs_eq(uri_entity_type_name_refs,uri_entity_type_name_refs) IS
'uri_entity_type_name_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = uri_entity_type_name_refs,
	 rightarg = uri_entity_type_name_refs,
	 procedure = uri_entity_type_name_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_type_name_refs_neq(uri_entity_type_name_refs, uri_entity_type_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_type_name_refs_neq(uri_entity_type_name_refs,uri_entity_type_name_refs) IS
'uri_entity_type_name_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = uri_entity_type_name_refs,
	 rightarg = uri_entity_type_name_refs,
	 procedure = uri_entity_type_name_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_type_name_refs_ge(uri_entity_type_name_refs, uri_entity_type_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_type_name_refs_ge(uri_entity_type_name_refs,uri_entity_type_name_refs) IS
'uri_entity_type_name_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = uri_entity_type_name_refs,
	 rightarg = uri_entity_type_name_refs,
	 procedure = uri_entity_type_name_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_type_name_refs_gt(uri_entity_type_name_refs, uri_entity_type_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_type_name_refs_gt(uri_entity_type_name_refs,uri_entity_type_name_refs) IS
'uri_entity_type_name_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = uri_entity_type_name_refs,
	 rightarg = uri_entity_type_name_refs,
	 procedure = uri_entity_type_name_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS uri_entity_type_name_refs_ops
		DEFAULT FOR TYPE uri_entity_type_name_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       uri_entity_type_name_refs_cmp(uri_entity_type_name_refs, uri_entity_type_name_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE uri_entity_type_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE uri_entity_type_name_rows (
	ref uri_entity_type_name_refs PRIMARY KEY,
	name_ citext NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE uri_entity_type_name_rows IS
' - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_type_name_rows_15_exists(_ref uri_entity_type_name_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM uri_entity_type_name_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_type_name_rows_15_exists(uri_entity_type_name_refs) IS
'uri_entity_type_name_rows_15_exists(_ref): referential integrity test method for row of uri_entity_type_name_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_uri_entity_type_name_from_id(ref_ids)
RETURNS uri_entity_type_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''uri_entity_type_name_refs'', ''uri_entity_type_name_rows'', $1
	)::uri_entity_type_name_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_uri_entity_type_name_from_id(ref_ids) IS
'unchecked_uri_entity_type_name_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_type_name_nil()
RETURNS uri_entity_type_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_uri_entity_type_name_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_type_name_nil() IS
'uri_entity_type_name_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_name_ref_schema(text,boolean,boolean,regtype,regprocedure,text)
INSERT INTO uri_entity_type_name_rows (ref, name_) VALUES( uri_entity_type_name_nil(), '')
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS uri_entity_type_name_rows_no_update_trigger ON uri_entity_type_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: trigger "uri_entity_type_name_rows_no_update_trigger" for relation "uri_entity_type_name_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER uri_entity_type_name_rows_no_update_trigger
  BEFORE UPDATE ON uri_entity_type_name_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_entity_type_name(_ref refs)
RETURNS uri_entity_type_name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM uri_entity_type_name_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_entity_type_name(refs) IS
'try_uri_entity_type_name(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_entity_type_name_text(uri_entity_type_name_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM uri_entity_type_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_entity_type_name_text(uri_entity_type_name_refs) IS
'try_uri_entity_type_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_type_name_text(uri_entity_type_name_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_uri_entity_type_name_text( $1),''uri_entity_type_name_text(uri_entity_type_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_type_name_text(uri_entity_type_name_refs) IS
'uri_entity_type_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_entity_type_name_length(uri_entity_type_name_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM uri_entity_type_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_entity_type_name_length(uri_entity_type_name_refs) IS
'try_uri_entity_type_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_type_name_length(uri_entity_type_name_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_uri_entity_type_name_length( $1),''uri_entity_type_name_length(uri_entity_type_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_type_name_length(uri_entity_type_name_refs) IS
'uri_entity_type_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_entity_type_name(citext)
RETURNS uri_entity_type_name_refs LANGUAGE SQL  STRICT AS
'SELECT CASE
	WHEN $1 = '''' THEN uri_entity_type_name_nil()
	ELSE ( SELECT ref FROM uri_entity_type_name_rows WHERE name_ = $1 )
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_entity_type_name(citext) IS
's4_doc.try_uri_entity_type_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_uri_entity_type_name(citext)
RETURNS uri_entity_type_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_uri_entity_type_name( $1),''find_uri_entity_type_name(citext)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_uri_entity_type_name(citext) IS
'find_uri_entity_type_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_entity_type_name_in(citext)
RETURNS uri_entity_type_name_refs LANGUAGE SQL  AS
'SELECT COALESCE(s4_doc.try_uri_entity_type_name($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_entity_type_name_in(citext) IS
'try_uri_entity_type_name_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE uri_entity_type_name_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE uri_entity_type_name_seq OWNED BY uri_entity_type_name_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_uri_entity_type_name_ref()
RETURNS uri_entity_type_name_refs LANGUAGE SQL  AS
'SELECT unchecked_uri_entity_type_name_from_id(nextval(''uri_entity_type_name_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_uri_entity_type_name_ref() IS
'next_uri_entity_type_name_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE uri_entity_type_name_rows ALTER COLUMN ref SET DEFAULT next_uri_entity_type_name_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_uri_entity_type_name(citext)
RETURNS uri_entity_type_name_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name citext := $1;
	maybe uri_entity_type_name_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_uri_entity_type_name(citext)'';
BEGIN
	 IF _name IS NULL THEN RETURN uri_entity_type_name_nil(); END IF;
	
	LOOP
		maybe := try_uri_entity_type_name(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO uri_entity_type_name_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_uri_entity_type_name(citext) IS
'try_get_uri_entity_type_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_uri_entity_type_name(citext)
RETURNS uri_entity_type_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_uri_entity_type_name( $1),''get_uri_entity_type_name(citext)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_uri_entity_type_name(citext) IS
'get_uri_entity_type_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_uri_entity_type_name(VARIADIC citext[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_uri_entity_type_name(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:52: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_uri_entity_type_name(citext[]) IS
'declare_uri_entity_type_name(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                                                                                        create_name_ref_schema                                                                                                                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_uri_entity_type_name_from_id(ref_ids),uri_entity_type_name_nil(),try_uri_entity_type_name(refs),uri_entity_type_name_text(uri_entity_type_name_refs),uri_entity_type_name_length(uri_entity_type_name_refs),find_uri_entity_type_name(citext),try_uri_entity_type_name_in(citext),next_uri_entity_type_name_ref(),get_uri_entity_type_name(citext),declare_uri_entity_type_name(citext[])}
(1 row)

COMMENT
CREATE FUNCTION
INSERT 0 1
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE uri_entity_pair_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: created shell type uri_entity_pair_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION uri_entity_pair_refs_in_op(cstring,oid,integer)
RETURNS uri_entity_pair_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  42809: return type uri_entity_pair_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:uri-schema.sql:77: NOTICE:  00000: CREATED uri_entity_pair_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION uri_entity_pair_refs_out_op(uri_entity_pair_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  42809: argument type uri_entity_pair_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:uri-schema.sql:77: NOTICE:  00000: CREATED uri_entity_pair_refs_out_op(uri_entity_pair_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE uri_entity_pair_refs (
  INPUT = uri_entity_pair_refs_in_op,
  OUTPUT = uri_entity_pair_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: WARNING:  42P17: type input function uri_entity_pair_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:uri-schema.sql:77: WARNING:  42P17: type output function uri_entity_pair_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:uri-schema.sql:77: NOTICE:  00000: CREATE TYPE uri_entity_pair_refs (
  INPUT = uri_entity_pair_refs_in_op,
  OUTPUT = uri_entity_pair_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS uri_entity_pair_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS uri_entity_pair_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (uri_entity_pair_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (uri_entity_pair_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (uri_entity_pair_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (uri_entity_pair_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_pair_refs_cmp(uri_entity_pair_refs, uri_entity_pair_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_pair_refs_cmp(uri_entity_pair_refs,uri_entity_pair_refs) IS
'uri_entity_pair_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_pair_refs_lt(uri_entity_pair_refs, uri_entity_pair_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_pair_refs_lt(uri_entity_pair_refs,uri_entity_pair_refs) IS
'uri_entity_pair_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = uri_entity_pair_refs,
	 rightarg = uri_entity_pair_refs,
	 procedure = uri_entity_pair_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_pair_refs_le(uri_entity_pair_refs, uri_entity_pair_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_pair_refs_le(uri_entity_pair_refs,uri_entity_pair_refs) IS
'uri_entity_pair_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = uri_entity_pair_refs,
	 rightarg = uri_entity_pair_refs,
	 procedure = uri_entity_pair_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_pair_refs_eq(uri_entity_pair_refs, uri_entity_pair_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_pair_refs_eq(uri_entity_pair_refs,uri_entity_pair_refs) IS
'uri_entity_pair_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = uri_entity_pair_refs,
	 rightarg = uri_entity_pair_refs,
	 procedure = uri_entity_pair_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_pair_refs_neq(uri_entity_pair_refs, uri_entity_pair_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_pair_refs_neq(uri_entity_pair_refs,uri_entity_pair_refs) IS
'uri_entity_pair_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = uri_entity_pair_refs,
	 rightarg = uri_entity_pair_refs,
	 procedure = uri_entity_pair_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_pair_refs_ge(uri_entity_pair_refs, uri_entity_pair_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_pair_refs_ge(uri_entity_pair_refs,uri_entity_pair_refs) IS
'uri_entity_pair_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = uri_entity_pair_refs,
	 rightarg = uri_entity_pair_refs,
	 procedure = uri_entity_pair_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_pair_refs_gt(uri_entity_pair_refs, uri_entity_pair_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_pair_refs_gt(uri_entity_pair_refs,uri_entity_pair_refs) IS
'uri_entity_pair_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = uri_entity_pair_refs,
	 rightarg = uri_entity_pair_refs,
	 procedure = uri_entity_pair_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:77: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS uri_entity_pair_refs_ops
		DEFAULT FOR TYPE uri_entity_pair_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       uri_entity_pair_refs_cmp(uri_entity_pair_refs, uri_entity_pair_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   create_ref_type    
----------------------
 uri_entity_pair_refs
(1 row)

CREATE TABLE
COMMENT
COMMENT
psql:uri-schema.sql:92: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_pair_rows_16_exists(_ref uri_entity_pair_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM uri_entity_pair_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:92: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_pair_rows_16_exists(uri_entity_pair_refs) IS
'uri_entity_pair_rows_16_exists(_ref): referential integrity test method for row of uri_entity_pair_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:92: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS uri_entity_pair_rows_no_update_trigger ON uri_entity_pair_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:92: NOTICE:  00000: trigger "uri_entity_pair_rows_no_update_trigger" for relation "uri_entity_pair_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:uri-schema.sql:92: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER uri_entity_pair_rows_no_update_trigger
  BEFORE UPDATE ON uri_entity_pair_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:92: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_uri_entity_pair_from_id(ref_ids)
RETURNS uri_entity_pair_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''uri_entity_pair_refs'', ''uri_entity_pair_rows'', $1
	)::uri_entity_pair_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:92: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_uri_entity_pair_from_id(ref_ids) IS
'unchecked_uri_entity_pair_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:92: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_entity_pair_nil()
RETURNS uri_entity_pair_refs LANGUAGE SQL  AS
'	SELECT unchecked_uri_entity_pair_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:92: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_entity_pair_nil() IS
'uri_entity_pair_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:92: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_entity_pair(_ref refs)
RETURNS uri_entity_pair_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM uri_entity_pair_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:92: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_entity_pair(refs) IS
'try_uri_entity_pair(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                 declare_ref_class_with_funcs                                 
----------------------------------------------------------------------------------------------
 {unchecked_uri_entity_pair_from_id(ref_ids),uri_entity_pair_nil(),try_uri_entity_pair(refs)}
(1 row)

psql:uri-schema.sql:93: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE uri_entity_pair_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:93: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE uri_entity_pair_seq OWNED BY uri_entity_pair_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:93: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_uri_entity_pair_ref()
RETURNS uri_entity_pair_refs LANGUAGE SQL  AS
'SELECT unchecked_uri_entity_pair_from_id(nextval(''uri_entity_pair_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:93: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_uri_entity_pair_ref() IS
'next_uri_entity_pair_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:93: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE uri_entity_pair_rows ALTER COLUMN ref SET DEFAULT next_uri_entity_pair_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
    create_simple_serial    
----------------------------
 next_uri_entity_pair_ref()
(1 row)

INSERT 0 1
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE uri_query_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: created shell type uri_query_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION uri_query_refs_in_op(cstring,oid,integer)
RETURNS uri_query_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  42809: return type uri_query_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:uri-schema.sql:100: NOTICE:  00000: CREATED uri_query_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION uri_query_refs_out_op(uri_query_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  42809: argument type uri_query_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:uri-schema.sql:100: NOTICE:  00000: CREATED uri_query_refs_out_op(uri_query_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE uri_query_refs (
  INPUT = uri_query_refs_in_op,
  OUTPUT = uri_query_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: WARNING:  42P17: type input function uri_query_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:uri-schema.sql:100: WARNING:  42P17: type output function uri_query_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:uri-schema.sql:100: NOTICE:  00000: CREATE TYPE uri_query_refs (
  INPUT = uri_query_refs_in_op,
  OUTPUT = uri_query_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS uri_query_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS uri_query_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (uri_query_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (uri_query_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (uri_query_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (uri_query_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_query_refs_cmp(uri_query_refs, uri_query_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_query_refs_cmp(uri_query_refs,uri_query_refs) IS
'uri_query_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_query_refs_lt(uri_query_refs, uri_query_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_query_refs_lt(uri_query_refs,uri_query_refs) IS
'uri_query_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = uri_query_refs,
	 rightarg = uri_query_refs,
	 procedure = uri_query_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_query_refs_le(uri_query_refs, uri_query_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_query_refs_le(uri_query_refs,uri_query_refs) IS
'uri_query_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = uri_query_refs,
	 rightarg = uri_query_refs,
	 procedure = uri_query_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_query_refs_eq(uri_query_refs, uri_query_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_query_refs_eq(uri_query_refs,uri_query_refs) IS
'uri_query_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = uri_query_refs,
	 rightarg = uri_query_refs,
	 procedure = uri_query_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_query_refs_neq(uri_query_refs, uri_query_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_query_refs_neq(uri_query_refs,uri_query_refs) IS
'uri_query_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = uri_query_refs,
	 rightarg = uri_query_refs,
	 procedure = uri_query_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_query_refs_ge(uri_query_refs, uri_query_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_query_refs_ge(uri_query_refs,uri_query_refs) IS
'uri_query_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = uri_query_refs,
	 rightarg = uri_query_refs,
	 procedure = uri_query_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_query_refs_gt(uri_query_refs, uri_query_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_query_refs_gt(uri_query_refs,uri_query_refs) IS
'uri_query_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = uri_query_refs,
	 rightarg = uri_query_refs,
	 procedure = uri_query_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:100: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS uri_query_refs_ops
		DEFAULT FOR TYPE uri_query_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       uri_query_refs_cmp(uri_query_refs, uri_query_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 uri_query_refs
(1 row)

CREATE TABLE
COMMENT
psql:uri-schema.sql:124: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_query_rows_17_exists(_ref uri_query_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM uri_query_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:124: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_query_rows_17_exists(uri_query_refs) IS
'uri_query_rows_17_exists(_ref): referential integrity test method for row of uri_query_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:124: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS uri_query_rows_no_update_trigger ON uri_query_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:124: NOTICE:  00000: trigger "uri_query_rows_no_update_trigger" for relation "uri_query_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:uri-schema.sql:124: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER uri_query_rows_no_update_trigger
  BEFORE UPDATE ON uri_query_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:124: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_uri_query_from_id(ref_ids)
RETURNS uri_query_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''uri_query_refs'', ''uri_query_rows'', $1
	)::uri_query_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:124: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_uri_query_from_id(ref_ids) IS
'unchecked_uri_query_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:124: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_query_nil()
RETURNS uri_query_refs LANGUAGE SQL  AS
'	SELECT unchecked_uri_query_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:124: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_query_nil() IS
'uri_query_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:124: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_query(_ref refs)
RETURNS uri_query_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM uri_query_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:124: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_query(refs) IS
'try_uri_query(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                        declare_ref_class_with_funcs                        
----------------------------------------------------------------------------
 {unchecked_uri_query_from_id(ref_ids),uri_query_nil(),try_uri_query(refs)}
(1 row)

psql:uri-schema.sql:125: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE uri_query_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:125: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE uri_query_seq OWNED BY uri_query_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:125: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_uri_query_ref()
RETURNS uri_query_refs LANGUAGE SQL  AS
'SELECT unchecked_uri_query_from_id(nextval(''uri_query_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:125: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_uri_query_ref() IS
'next_uri_query_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:125: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE uri_query_rows ALTER COLUMN ref SET DEFAULT next_uri_query_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_simple_serial 
----------------------
 next_uri_query_ref()
(1 row)

INSERT 0 1
CREATE FUNCTION
COMMENT
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE uri_domain_name_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: created shell type uri_domain_name_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION uri_domain_name_refs_in_op(cstring,oid,integer)
RETURNS uri_domain_name_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  42809: return type uri_domain_name_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:uri-schema.sql:148: NOTICE:  00000: CREATED uri_domain_name_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION uri_domain_name_refs_out_op(uri_domain_name_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  42809: argument type uri_domain_name_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:uri-schema.sql:148: NOTICE:  00000: CREATED uri_domain_name_refs_out_op(uri_domain_name_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE uri_domain_name_refs (
  INPUT = uri_domain_name_refs_in_op,
  OUTPUT = uri_domain_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: WARNING:  42P17: type input function uri_domain_name_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:uri-schema.sql:148: WARNING:  42P17: type output function uri_domain_name_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:uri-schema.sql:148: NOTICE:  00000: CREATE TYPE uri_domain_name_refs (
  INPUT = uri_domain_name_refs_in_op,
  OUTPUT = uri_domain_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS uri_domain_name_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS uri_domain_name_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (uri_domain_name_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (uri_domain_name_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (uri_domain_name_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (uri_domain_name_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_domain_name_refs_cmp(uri_domain_name_refs, uri_domain_name_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_domain_name_refs_cmp(uri_domain_name_refs,uri_domain_name_refs) IS
'uri_domain_name_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_domain_name_refs_lt(uri_domain_name_refs, uri_domain_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_domain_name_refs_lt(uri_domain_name_refs,uri_domain_name_refs) IS
'uri_domain_name_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = uri_domain_name_refs,
	 rightarg = uri_domain_name_refs,
	 procedure = uri_domain_name_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_domain_name_refs_le(uri_domain_name_refs, uri_domain_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_domain_name_refs_le(uri_domain_name_refs,uri_domain_name_refs) IS
'uri_domain_name_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = uri_domain_name_refs,
	 rightarg = uri_domain_name_refs,
	 procedure = uri_domain_name_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_domain_name_refs_eq(uri_domain_name_refs, uri_domain_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_domain_name_refs_eq(uri_domain_name_refs,uri_domain_name_refs) IS
'uri_domain_name_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = uri_domain_name_refs,
	 rightarg = uri_domain_name_refs,
	 procedure = uri_domain_name_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_domain_name_refs_neq(uri_domain_name_refs, uri_domain_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_domain_name_refs_neq(uri_domain_name_refs,uri_domain_name_refs) IS
'uri_domain_name_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = uri_domain_name_refs,
	 rightarg = uri_domain_name_refs,
	 procedure = uri_domain_name_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_domain_name_refs_ge(uri_domain_name_refs, uri_domain_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_domain_name_refs_ge(uri_domain_name_refs,uri_domain_name_refs) IS
'uri_domain_name_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = uri_domain_name_refs,
	 rightarg = uri_domain_name_refs,
	 procedure = uri_domain_name_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_domain_name_refs_gt(uri_domain_name_refs, uri_domain_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_domain_name_refs_gt(uri_domain_name_refs,uri_domain_name_refs) IS
'uri_domain_name_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = uri_domain_name_refs,
	 rightarg = uri_domain_name_refs,
	 procedure = uri_domain_name_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS uri_domain_name_refs_ops
		DEFAULT FOR TYPE uri_domain_name_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       uri_domain_name_refs_cmp(uri_domain_name_refs, uri_domain_name_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE uri_domain_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE uri_domain_name_rows (
	ref uri_domain_name_refs PRIMARY KEY,
	name_ citext NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE uri_domain_name_rows IS
'represents an internet domain, e.g. www.wicci.org - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_domain_name_rows_18_exists(_ref uri_domain_name_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM uri_domain_name_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_domain_name_rows_18_exists(uri_domain_name_refs) IS
'uri_domain_name_rows_18_exists(_ref): referential integrity test method for row of uri_domain_name_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_uri_domain_name_from_id(ref_ids)
RETURNS uri_domain_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''uri_domain_name_refs'', ''uri_domain_name_rows'', $1
	)::uri_domain_name_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_uri_domain_name_from_id(ref_ids) IS
'unchecked_uri_domain_name_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_domain_name_nil()
RETURNS uri_domain_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_uri_domain_name_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_domain_name_nil() IS
'uri_domain_name_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_name_ref_schema(text,boolean,boolean,regtype,regprocedure,text)
INSERT INTO uri_domain_name_rows (ref, name_) VALUES( uri_domain_name_nil(), '')
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS uri_domain_name_rows_no_update_trigger ON uri_domain_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: trigger "uri_domain_name_rows_no_update_trigger" for relation "uri_domain_name_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER uri_domain_name_rows_no_update_trigger
  BEFORE UPDATE ON uri_domain_name_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_domain_name(_ref refs)
RETURNS uri_domain_name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM uri_domain_name_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_domain_name(refs) IS
'try_uri_domain_name(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_domain_name_text(uri_domain_name_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM uri_domain_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_domain_name_text(uri_domain_name_refs) IS
'try_uri_domain_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_domain_name_text(uri_domain_name_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_uri_domain_name_text( $1),''uri_domain_name_text(uri_domain_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_domain_name_text(uri_domain_name_refs) IS
'uri_domain_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_domain_name_length(uri_domain_name_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM uri_domain_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_domain_name_length(uri_domain_name_refs) IS
'try_uri_domain_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_domain_name_length(uri_domain_name_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_uri_domain_name_length( $1),''uri_domain_name_length(uri_domain_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_domain_name_length(uri_domain_name_refs) IS
'uri_domain_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_domain_name(citext)
RETURNS uri_domain_name_refs LANGUAGE SQL  STRICT AS
'SELECT CASE
	WHEN x IS NULL THEN uri_domain_name_nil()
	ELSE ( SELECT ref FROM uri_domain_name_rows WHERE name_ = x )
END FROM uri_domain_name_normalized($1) AS x';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_domain_name(citext) IS
's4_doc.try_uri_domain_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_uri_domain_name(citext)
RETURNS uri_domain_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_uri_domain_name( $1),''find_uri_domain_name(citext)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_uri_domain_name(citext) IS
'find_uri_domain_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_domain_name_in(citext)
RETURNS uri_domain_name_refs LANGUAGE SQL  AS
'SELECT COALESCE(s4_doc.try_uri_domain_name($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_domain_name_in(citext) IS
'try_uri_domain_name_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE uri_domain_name_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE uri_domain_name_seq OWNED BY uri_domain_name_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_uri_domain_name_ref()
RETURNS uri_domain_name_refs LANGUAGE SQL  AS
'SELECT unchecked_uri_domain_name_from_id(nextval(''uri_domain_name_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_uri_domain_name_ref() IS
'next_uri_domain_name_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE uri_domain_name_rows ALTER COLUMN ref SET DEFAULT next_uri_domain_name_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_uri_domain_name(citext)
RETURNS uri_domain_name_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name citext := uri_domain_name_normalized($1);
	maybe uri_domain_name_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_uri_domain_name(citext)'';
BEGIN
	 IF _name IS NULL THEN RETURN uri_domain_name_nil(); END IF;
	
	LOOP
		maybe := try_uri_domain_name(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO uri_domain_name_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_uri_domain_name(citext) IS
'try_get_uri_domain_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_uri_domain_name(citext)
RETURNS uri_domain_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_uri_domain_name( $1),''get_uri_domain_name(citext)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_uri_domain_name(citext) IS
'get_uri_domain_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_uri_domain_name(VARIADIC citext[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_uri_domain_name(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:148: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_uri_domain_name(citext[]) IS
'declare_uri_domain_name(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                                                          create_name_ref_schema                                                                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_uri_domain_name_from_id(ref_ids),uri_domain_name_nil(),try_uri_domain_name(refs),uri_domain_name_text(uri_domain_name_refs),uri_domain_name_length(uri_domain_name_refs),find_uri_domain_name(citext),try_uri_domain_name_in(citext),next_uri_domain_name_ref(),get_uri_domain_name(citext),declare_uri_domain_name(citext[])}
(1 row)

COMMENT
CREATE FUNCTION
COMMENT
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE uri_path_name_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: created shell type uri_path_name_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION uri_path_name_refs_in_op(cstring,oid,integer)
RETURNS uri_path_name_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  42809: return type uri_path_name_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:uri-schema.sql:177: NOTICE:  00000: CREATED uri_path_name_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION uri_path_name_refs_out_op(uri_path_name_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  42809: argument type uri_path_name_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:uri-schema.sql:177: NOTICE:  00000: CREATED uri_path_name_refs_out_op(uri_path_name_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE uri_path_name_refs (
  INPUT = uri_path_name_refs_in_op,
  OUTPUT = uri_path_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: WARNING:  42P17: type input function uri_path_name_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:uri-schema.sql:177: WARNING:  42P17: type output function uri_path_name_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:uri-schema.sql:177: NOTICE:  00000: CREATE TYPE uri_path_name_refs (
  INPUT = uri_path_name_refs_in_op,
  OUTPUT = uri_path_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS uri_path_name_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS uri_path_name_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (uri_path_name_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (uri_path_name_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (uri_path_name_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (uri_path_name_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_path_name_refs_cmp(uri_path_name_refs, uri_path_name_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_path_name_refs_cmp(uri_path_name_refs,uri_path_name_refs) IS
'uri_path_name_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_path_name_refs_lt(uri_path_name_refs, uri_path_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_path_name_refs_lt(uri_path_name_refs,uri_path_name_refs) IS
'uri_path_name_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = uri_path_name_refs,
	 rightarg = uri_path_name_refs,
	 procedure = uri_path_name_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_path_name_refs_le(uri_path_name_refs, uri_path_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_path_name_refs_le(uri_path_name_refs,uri_path_name_refs) IS
'uri_path_name_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = uri_path_name_refs,
	 rightarg = uri_path_name_refs,
	 procedure = uri_path_name_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_path_name_refs_eq(uri_path_name_refs, uri_path_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_path_name_refs_eq(uri_path_name_refs,uri_path_name_refs) IS
'uri_path_name_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = uri_path_name_refs,
	 rightarg = uri_path_name_refs,
	 procedure = uri_path_name_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_path_name_refs_neq(uri_path_name_refs, uri_path_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_path_name_refs_neq(uri_path_name_refs,uri_path_name_refs) IS
'uri_path_name_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = uri_path_name_refs,
	 rightarg = uri_path_name_refs,
	 procedure = uri_path_name_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_path_name_refs_ge(uri_path_name_refs, uri_path_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_path_name_refs_ge(uri_path_name_refs,uri_path_name_refs) IS
'uri_path_name_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = uri_path_name_refs,
	 rightarg = uri_path_name_refs,
	 procedure = uri_path_name_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_path_name_refs_gt(uri_path_name_refs, uri_path_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_path_name_refs_gt(uri_path_name_refs,uri_path_name_refs) IS
'uri_path_name_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = uri_path_name_refs,
	 rightarg = uri_path_name_refs,
	 procedure = uri_path_name_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS uri_path_name_refs_ops
		DEFAULT FOR TYPE uri_path_name_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       uri_path_name_refs_cmp(uri_path_name_refs, uri_path_name_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE uri_path_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE uri_path_name_rows (
	ref uri_path_name_refs PRIMARY KEY,
	name_ text NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE uri_path_name_rows IS
'represents a file path, e.g. /public/index.html - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_path_name_rows_19_exists(_ref uri_path_name_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM uri_path_name_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_path_name_rows_19_exists(uri_path_name_refs) IS
'uri_path_name_rows_19_exists(_ref): referential integrity test method for row of uri_path_name_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_uri_path_name_from_id(ref_ids)
RETURNS uri_path_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''uri_path_name_refs'', ''uri_path_name_rows'', $1
	)::uri_path_name_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_uri_path_name_from_id(ref_ids) IS
'unchecked_uri_path_name_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_path_name_nil()
RETURNS uri_path_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_uri_path_name_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_path_name_nil() IS
'uri_path_name_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_name_ref_schema(text,boolean,boolean,regtype,regprocedure,text)
INSERT INTO uri_path_name_rows (ref, name_) VALUES( uri_path_name_nil(), '')
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS uri_path_name_rows_no_update_trigger ON uri_path_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: trigger "uri_path_name_rows_no_update_trigger" for relation "uri_path_name_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER uri_path_name_rows_no_update_trigger
  BEFORE UPDATE ON uri_path_name_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_path_name(_ref refs)
RETURNS uri_path_name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM uri_path_name_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_path_name(refs) IS
'try_uri_path_name(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_path_name_text(uri_path_name_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM uri_path_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_path_name_text(uri_path_name_refs) IS
'try_uri_path_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_path_name_text(uri_path_name_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_uri_path_name_text( $1),''uri_path_name_text(uri_path_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_path_name_text(uri_path_name_refs) IS
'uri_path_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_path_name_length(uri_path_name_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM uri_path_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_path_name_length(uri_path_name_refs) IS
'try_uri_path_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_path_name_length(uri_path_name_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_uri_path_name_length( $1),''uri_path_name_length(uri_path_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_path_name_length(uri_path_name_refs) IS
'uri_path_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_path_name(text)
RETURNS uri_path_name_refs LANGUAGE SQL  STRICT AS
'SELECT CASE
	WHEN x IS NULL THEN uri_path_name_nil()
	ELSE ( SELECT ref FROM uri_path_name_rows WHERE name_ = x )
END FROM uri_path_name_normalized($1) AS x';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_path_name(text) IS
's4_doc.try_uri_path_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_uri_path_name(text)
RETURNS uri_path_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_uri_path_name( $1),''find_uri_path_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_uri_path_name(text) IS
'find_uri_path_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri_path_name_in(text)
RETURNS uri_path_name_refs LANGUAGE SQL  AS
'SELECT COALESCE(s4_doc.try_uri_path_name($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri_path_name_in(text) IS
'try_uri_path_name_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE uri_path_name_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE uri_path_name_seq OWNED BY uri_path_name_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_uri_path_name_ref()
RETURNS uri_path_name_refs LANGUAGE SQL  AS
'SELECT unchecked_uri_path_name_from_id(nextval(''uri_path_name_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_uri_path_name_ref() IS
'next_uri_path_name_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE uri_path_name_rows ALTER COLUMN ref SET DEFAULT next_uri_path_name_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_uri_path_name(text)
RETURNS uri_path_name_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name text := uri_path_name_normalized($1);
	maybe uri_path_name_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_uri_path_name(text)'';
BEGIN
	 IF _name IS NULL THEN RETURN uri_path_name_nil(); END IF;
	
	LOOP
		maybe := try_uri_path_name(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO uri_path_name_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_uri_path_name(text) IS
'try_get_uri_path_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_uri_path_name(text)
RETURNS uri_path_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_uri_path_name( $1),''get_uri_path_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_uri_path_name(text) IS
'get_uri_path_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_uri_path_name(VARIADIC text[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_uri_path_name(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:177: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_uri_path_name(text[]) IS
'declare_uri_path_name(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                                          create_name_ref_schema                                                                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_uri_path_name_from_id(ref_ids),uri_path_name_nil(),try_uri_path_name(refs),uri_path_name_text(uri_path_name_refs),uri_path_name_length(uri_path_name_refs),find_uri_path_name(text),try_uri_path_name_in(text),next_uri_path_name_ref(),get_uri_path_name(text),declare_uri_path_name(text[])}
(1 row)

COMMENT
CREATE TABLE
COMMENT
COMMENT
COMMENT
COMMENT
psql:uri-schema.sql:212: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION page_uri_rows_20_exists(_ref page_uri_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM page_uri_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:212: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION page_uri_rows_20_exists(page_uri_refs) IS
'page_uri_rows_20_exists(_ref): referential integrity test method for row of page_uri_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:212: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS page_uri_rows_no_update_trigger ON page_uri_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:212: NOTICE:  00000: trigger "page_uri_rows_no_update_trigger" for relation "page_uri_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:uri-schema.sql:212: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER page_uri_rows_no_update_trigger
  BEFORE UPDATE ON page_uri_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:212: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_page_uri_from_id(ref_ids)
RETURNS page_uri_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''page_uri_refs'', ''page_uri_rows'', $1
	)::page_uri_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:212: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_page_uri_from_id(ref_ids) IS
'unchecked_page_uri_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:212: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION page_uri_nil()
RETURNS page_uri_refs LANGUAGE SQL  AS
'	SELECT unchecked_page_uri_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:212: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION page_uri_nil() IS
'page_uri_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:212: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_page_uri(_ref refs)
RETURNS page_uri_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM page_uri_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:212: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_page_uri(refs) IS
'try_page_uri(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                      declare_ref_class_with_funcs                       
-------------------------------------------------------------------------
 {unchecked_page_uri_from_id(ref_ids),page_uri_nil(),try_page_uri(refs)}
(1 row)

psql:uri-schema.sql:213: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE page_uri_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:213: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE page_uri_seq OWNED BY page_uri_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:213: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_page_uri_ref()
RETURNS page_uri_refs LANGUAGE SQL  AS
'SELECT unchecked_page_uri_from_id(nextval(''page_uri_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:213: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_page_uri_ref() IS
'next_page_uri_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:213: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE page_uri_rows ALTER COLUMN ref SET DEFAULT next_page_uri_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_simple_serial 
----------------------
 next_page_uri_ref()
(1 row)

CREATE FUNCTION
INSERT 0 1
CREATE TABLE
COMMENT
COMMENT
psql:uri-schema.sql:245: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION entity_uri_rows_21_exists(_ref entity_uri_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM entity_uri_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:245: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION entity_uri_rows_21_exists(entity_uri_refs) IS
'entity_uri_rows_21_exists(_ref): referential integrity test method for row of entity_uri_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:245: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS entity_uri_rows_no_update_trigger ON entity_uri_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:245: NOTICE:  00000: trigger "entity_uri_rows_no_update_trigger" for relation "entity_uri_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:uri-schema.sql:245: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER entity_uri_rows_no_update_trigger
  BEFORE UPDATE ON entity_uri_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:245: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_entity_uri_from_id(ref_ids)
RETURNS entity_uri_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''entity_uri_refs'', ''entity_uri_rows'', $1
	)::entity_uri_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:245: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_entity_uri_from_id(ref_ids) IS
'unchecked_entity_uri_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:245: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION entity_uri_nil()
RETURNS entity_uri_refs LANGUAGE SQL  AS
'	SELECT unchecked_entity_uri_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:245: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION entity_uri_nil() IS
'entity_uri_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:245: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_entity_uri(_ref refs)
RETURNS entity_uri_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM entity_uri_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:245: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_entity_uri(refs) IS
'try_entity_uri(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                         declare_ref_class_with_funcs                          
-------------------------------------------------------------------------------
 {unchecked_entity_uri_from_id(ref_ids),entity_uri_nil(),try_entity_uri(refs)}
(1 row)

INSERT 0 1
CREATE FUNCTION
CREATE FUNCTION
CREATE TABLE
COMMENT
COMMENT
COMMENT
psql:uri-schema.sql:283: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_rows_22_exists(_ref uri_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM uri_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:283: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_rows_22_exists(uri_refs) IS
'uri_rows_22_exists(_ref): referential integrity test method for row of uri_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:283: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS uri_rows_no_update_trigger ON uri_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:283: NOTICE:  00000: trigger "uri_rows_no_update_trigger" for relation "uri_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:uri-schema.sql:283: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER uri_rows_no_update_trigger
  BEFORE UPDATE ON uri_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:283: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_uri_from_id(ref_ids)
RETURNS uri_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''uri_refs'', ''uri_rows'', $1
	)::uri_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:283: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_uri_from_id(ref_ids) IS
'unchecked_uri_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:283: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION uri_nil()
RETURNS uri_refs LANGUAGE SQL  AS
'	SELECT unchecked_uri_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:283: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION uri_nil() IS
'uri_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:283: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_uri(_ref refs)
RETURNS uri_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM uri_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:283: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_uri(refs) IS
'try_uri(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
               declare_ref_class_with_funcs               
----------------------------------------------------------
 {unchecked_uri_from_id(ref_ids),uri_nil(),try_uri(refs)}
(1 row)

psql:uri-schema.sql:284: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE uri_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:284: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE uri_seq OWNED BY uri_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:284: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_uri_ref()
RETURNS uri_refs LANGUAGE SQL  AS
'SELECT unchecked_uri_from_id(nextval(''uri_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:284: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_uri_ref() IS
'next_uri_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:uri-schema.sql:284: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE uri_rows ALTER COLUMN ref SET DEFAULT next_uri_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_simple_serial 
----------------------
 next_uri_ref()
(1 row)

INSERT 0 1
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f uri-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/uri-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/uri-code.sql-out-err /home/greg/.Wicci/Make/wicci1/uri-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                         set_file                          
-----------------------------------------------------------
 schema uri-code.sql, module uri-code, revision $Id, id 71
(1 row)

 declare_uri_domain_name 
-------------------------
                       2
(1 row)

 find_uri_domain_name 
----------------------
 localhost
(1 row)

 declare_uri_entity_type_name 
------------------------------
                            3
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
       type_class_in       
---------------------------
 try_uri_entity_pair(text)
(1 row)

               type_class_out               
--------------------------------------------
 uri_entity_pair_text(uri_entity_pair_refs)
(1 row)

                         type_class_op_method                          
-----------------------------------------------------------------------
 (16,"ref_text_op(refs)","uri_entity_pair_text(uri_entity_pair_refs)")
(1 row)

                           type_class_op_method                            
---------------------------------------------------------------------------
 (16,"ref_length_op(refs)","uri_entity_pair_length(uri_entity_pair_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
    type_class_in    
---------------------
 try_uri_query(text)
(1 row)

         type_class_out         
--------------------------------
 uri_query_text(uri_query_refs)
(1 row)

                   type_class_op_method                    
-----------------------------------------------------------
 (17,"ref_text_op(refs)","uri_query_text(uri_query_refs)")
(1 row)

                     type_class_op_method                      
---------------------------------------------------------------
 (17,"ref_length_op(refs)","uri_query_length(uri_query_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
psql:uri-code.sql:425: NOTICE:  00000: operator ^ does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP OPERATOR
CREATE OPERATOR
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
   type_class_in    
--------------------
 try_page_uri(text)
(1 row)

        type_class_out        
------------------------------
 page_uri_text(page_uri_refs)
(1 row)

                  type_class_op_method                   
---------------------------------------------------------
 (20,"ref_text_op(refs)","page_uri_text(page_uri_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
    type_class_in     
----------------------
 try_entity_uri(text)
(1 row)

          type_class_out          
----------------------------------
 entity_uri_text(entity_uri_refs)
(1 row)

                    type_class_op_method                     
-------------------------------------------------------------
 (21,"ref_text_op(refs)","entity_uri_text(entity_uri_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
 type_class_in 
---------------
 try_uri(text)
(1 row)

   type_class_out   
--------------------
 uri_text(uri_refs)
(1 row)

             type_class_op_method              
-----------------------------------------------
 (22,"ref_text_op(refs)","uri_text(uri_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
psql:uri-code.sql:1059: NOTICE:  00000: operator ^ does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP OPERATOR
CREATE OPERATOR
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f uri-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/uri-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/uri-test.sql-out-err /home/greg/.Wicci/Make/wicci1/uri-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                         set_file                          
-----------------------------------------------------------
 schema uri-test.sql, module uri-test, revision $Id, id 72
(1 row)

CREATE FUNCTION
 clear_uri_tables 
------------------
 
(1 row)

         test_func          
----------------------------
 uri_entity_type_name_nil()
(1 row)

             test_func             
-----------------------------------
 find_uri_entity_type_name(citext)
(1 row)

            test_func             
----------------------------------
 get_uri_entity_type_name(citext)
(1 row)

                      test_func                       
------------------------------------------------------
 uri_entity_type_name_text(uri_entity_type_name_refs)
(1 row)

                       test_func                        
--------------------------------------------------------
 uri_entity_type_name_length(uri_entity_type_name_refs)
(1 row)

            test_func            
---------------------------------
 try_uri_entity_pair_match(text)
(1 row)

            test_func            
---------------------------------
 try_uri_entity_pair_match(text)
(1 row)

       test_func       
-----------------------
 uri_entity_pair_nil()
(1 row)

         test_func         
---------------------------
 get_uri_entity_pair(text)
(1 row)

                       test_func                        
--------------------------------------------------------
 uri_entity_type_name_length(uri_entity_type_name_refs)
(1 row)

         test_func         
---------------------------
 get_uri_entity_pair(text)
(1 row)

                 test_func                  
--------------------------------------------
 uri_entity_type_name(uri_entity_pair_refs)
(1 row)

                       test_func                        
--------------------------------------------------------
 uri_entity_type_name_length(uri_entity_type_name_refs)
(1 row)

                 test_func                  
--------------------------------------------
 uri_entity_pair_text(uri_entity_pair_refs)
(1 row)

                  test_func                   
----------------------------------------------
 uri_entity_pair_length(uri_entity_pair_refs)
(1 row)

                 test_func                  
--------------------------------------------
 uri_entity_type_name(uri_entity_pair_refs)
(1 row)

                 test_func                  
--------------------------------------------
 uri_entity_type_name(uri_entity_pair_refs)
(1 row)

          test_func           
------------------------------
 try_uri_query_pair_key(text)
(1 row)

          test_func           
------------------------------
 try_uri_query_pair_val(text)
(1 row)

          test_func           
------------------------------
 try_uri_query_pair_key(text)
(1 row)

          test_func           
------------------------------
 try_uri_query_pair_val(text)
(1 row)

         test_func         
---------------------------
 try_uri_query_parse(text)
(1 row)

         test_func         
---------------------------
 try_uri_query_parse(text)
(1 row)

         test_func         
---------------------------
 try_uri_query_parse(text)
(1 row)

    test_func    
-----------------
 uri_query_nil()
(1 row)

      test_func      
---------------------
 get_uri_query(text)
(1 row)

      test_func       
----------------------
 find_uri_query(text)
(1 row)

      test_func      
---------------------
 get_uri_query(text)
(1 row)

      test_func       
----------------------
 find_uri_query(text)
(1 row)

       test_func       
-----------------------
 uri_domain_name_nil()
(1 row)

          test_func          
-----------------------------
 get_uri_domain_name(citext)
(1 row)

          test_func           
------------------------------
 find_uri_domain_name(citext)
(1 row)

      test_func      
---------------------
 uri_path_name_nil()
(1 row)

        test_func        
-------------------------
 get_uri_path_name(text)
(1 row)

        test_func         
--------------------------
 find_uri_path_name(text)
(1 row)

   test_func    
----------------
 page_uri_nil()
(1 row)

     test_func      
--------------------
 get_page_uri(text)
(1 row)

     test_func      
--------------------
 get_page_uri(text)
(1 row)

     test_func      
--------------------
 get_page_uri(text)
(1 row)

     test_func      
--------------------
 get_page_uri(text)
(1 row)

     test_func      
--------------------
 get_page_uri(text)
(1 row)

     test_func      
--------------------
 get_page_uri(text)
(1 row)

     test_func      
--------------------
 get_page_uri(text)
(1 row)

      test_func      
---------------------
 find_page_uri(text)
(1 row)

    test_func     
------------------
 entity_uri_nil()
(1 row)

    test_func     
------------------
 entity_uri_nil()
(1 row)

      test_func       
----------------------
 get_entity_uri(text)
(1 row)

      test_func       
----------------------
 get_entity_uri(text)
(1 row)

      test_func       
----------------------
 get_entity_uri(text)
(1 row)

       test_func       
-----------------------
 find_entity_uri(text)
(1 row)

            try_uri_match            
-------------------------------------
 {"","","",puuhonua.org,"","","",""}
(1 row)

                        try_uri_match                        
-------------------------------------------------------------
 {http,user,touch,puuhonua.org,80,foo/bar,baz,"up=down,x=0"}
(1 row)

 test_func 
-----------
 uri_nil()
(1 row)

   test_func   
---------------
 get_uri(text)
(1 row)

   test_func   
---------------
 get_uri(text)
(1 row)

   test_func   
---------------
 get_uri(text)
(1 row)

   test_func   
---------------
 get_uri(text)
(1 row)

   test_func   
---------------
 get_uri(text)
(1 row)

   test_func   
---------------
 get_uri(text)
(1 row)

   test_func    
----------------
 find_uri(text)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f doc-types.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/doc-types.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/doc-types.sql-out-err /home/greg/.Wicci/Make/wicci1/doc-types.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                          set_file                           
-------------------------------------------------------------
 schema doc-types.sql, module doc-types, revision $Id, id 73
(1 row)

psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE doc_lang_name_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: created shell type doc_lang_name_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION doc_lang_name_refs_in_op(cstring,oid,integer)
RETURNS doc_lang_name_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  42809: return type doc_lang_name_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:doc-types.sql:24: NOTICE:  00000: CREATED doc_lang_name_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION doc_lang_name_refs_out_op(doc_lang_name_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  42809: argument type doc_lang_name_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:doc-types.sql:24: NOTICE:  00000: CREATED doc_lang_name_refs_out_op(doc_lang_name_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE doc_lang_name_refs (
  INPUT = doc_lang_name_refs_in_op,
  OUTPUT = doc_lang_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: WARNING:  42P17: type input function doc_lang_name_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:doc-types.sql:24: WARNING:  42P17: type output function doc_lang_name_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:doc-types.sql:24: NOTICE:  00000: CREATE TYPE doc_lang_name_refs (
  INPUT = doc_lang_name_refs_in_op,
  OUTPUT = doc_lang_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS doc_lang_name_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS doc_lang_name_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (doc_lang_name_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (doc_lang_name_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (doc_lang_name_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (doc_lang_name_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_lang_name_refs_cmp(doc_lang_name_refs, doc_lang_name_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_lang_name_refs_cmp(doc_lang_name_refs,doc_lang_name_refs) IS
'doc_lang_name_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_lang_name_refs_lt(doc_lang_name_refs, doc_lang_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_lang_name_refs_lt(doc_lang_name_refs,doc_lang_name_refs) IS
'doc_lang_name_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = doc_lang_name_refs,
	 rightarg = doc_lang_name_refs,
	 procedure = doc_lang_name_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_lang_name_refs_le(doc_lang_name_refs, doc_lang_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_lang_name_refs_le(doc_lang_name_refs,doc_lang_name_refs) IS
'doc_lang_name_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = doc_lang_name_refs,
	 rightarg = doc_lang_name_refs,
	 procedure = doc_lang_name_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_lang_name_refs_eq(doc_lang_name_refs, doc_lang_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_lang_name_refs_eq(doc_lang_name_refs,doc_lang_name_refs) IS
'doc_lang_name_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = doc_lang_name_refs,
	 rightarg = doc_lang_name_refs,
	 procedure = doc_lang_name_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_lang_name_refs_neq(doc_lang_name_refs, doc_lang_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_lang_name_refs_neq(doc_lang_name_refs,doc_lang_name_refs) IS
'doc_lang_name_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = doc_lang_name_refs,
	 rightarg = doc_lang_name_refs,
	 procedure = doc_lang_name_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_lang_name_refs_ge(doc_lang_name_refs, doc_lang_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_lang_name_refs_ge(doc_lang_name_refs,doc_lang_name_refs) IS
'doc_lang_name_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = doc_lang_name_refs,
	 rightarg = doc_lang_name_refs,
	 procedure = doc_lang_name_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_lang_name_refs_gt(doc_lang_name_refs, doc_lang_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_lang_name_refs_gt(doc_lang_name_refs,doc_lang_name_refs) IS
'doc_lang_name_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = doc_lang_name_refs,
	 rightarg = doc_lang_name_refs,
	 procedure = doc_lang_name_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS doc_lang_name_refs_ops
		DEFAULT FOR TYPE doc_lang_name_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       doc_lang_name_refs_cmp(doc_lang_name_refs, doc_lang_name_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE doc_lang_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE doc_lang_name_rows (
	ref doc_lang_name_refs PRIMARY KEY,
	name_ citext NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE doc_lang_name_rows IS
' - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_lang_name_rows_23_exists(_ref doc_lang_name_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM doc_lang_name_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_lang_name_rows_23_exists(doc_lang_name_refs) IS
'doc_lang_name_rows_23_exists(_ref): referential integrity test method for row of doc_lang_name_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_doc_lang_name_from_id(ref_ids)
RETURNS doc_lang_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''doc_lang_name_refs'', ''doc_lang_name_rows'', $1
	)::doc_lang_name_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_doc_lang_name_from_id(ref_ids) IS
'unchecked_doc_lang_name_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_lang_name_nil()
RETURNS doc_lang_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_doc_lang_name_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_lang_name_nil() IS
'doc_lang_name_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_name_ref_schema(text,boolean,boolean,regtype,regprocedure,text)
INSERT INTO doc_lang_name_rows (ref, name_) VALUES( doc_lang_name_nil(), '')
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS doc_lang_name_rows_no_update_trigger ON doc_lang_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: trigger "doc_lang_name_rows_no_update_trigger" for relation "doc_lang_name_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-types.sql:24: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER doc_lang_name_rows_no_update_trigger
  BEFORE UPDATE ON doc_lang_name_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_doc_lang_name(_ref refs)
RETURNS doc_lang_name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM doc_lang_name_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_doc_lang_name(refs) IS
'try_doc_lang_name(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_doc_lang_name_text(doc_lang_name_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM doc_lang_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_doc_lang_name_text(doc_lang_name_refs) IS
'try_doc_lang_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_lang_name_text(doc_lang_name_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_doc_lang_name_text( $1),''doc_lang_name_text(doc_lang_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_lang_name_text(doc_lang_name_refs) IS
'doc_lang_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_doc_lang_name_length(doc_lang_name_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM doc_lang_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_doc_lang_name_length(doc_lang_name_refs) IS
'try_doc_lang_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_lang_name_length(doc_lang_name_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_doc_lang_name_length( $1),''doc_lang_name_length(doc_lang_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_lang_name_length(doc_lang_name_refs) IS
'doc_lang_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_doc_lang_name(citext)
RETURNS doc_lang_name_refs LANGUAGE SQL  STRICT AS
'SELECT CASE
	WHEN $1 = '''' THEN doc_lang_name_nil()
	ELSE ( SELECT ref FROM doc_lang_name_rows WHERE name_ = $1 )
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_doc_lang_name(citext) IS
's4_doc.try_doc_lang_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_doc_lang_name(citext)
RETURNS doc_lang_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_doc_lang_name( $1),''find_doc_lang_name(citext)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_doc_lang_name(citext) IS
'find_doc_lang_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_doc_lang_name_in(citext)
RETURNS doc_lang_name_refs LANGUAGE SQL  AS
'SELECT COALESCE(s4_doc.try_doc_lang_name($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_doc_lang_name_in(citext) IS
'try_doc_lang_name_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE doc_lang_name_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE doc_lang_name_seq OWNED BY doc_lang_name_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_doc_lang_name_ref()
RETURNS doc_lang_name_refs LANGUAGE SQL  AS
'SELECT unchecked_doc_lang_name_from_id(nextval(''doc_lang_name_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_doc_lang_name_ref() IS
'next_doc_lang_name_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE doc_lang_name_rows ALTER COLUMN ref SET DEFAULT next_doc_lang_name_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_doc_lang_name(citext)
RETURNS doc_lang_name_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name citext := $1;
	maybe doc_lang_name_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_doc_lang_name(citext)'';
BEGIN
	 IF _name IS NULL THEN RETURN doc_lang_name_nil(); END IF;
	
	LOOP
		maybe := try_doc_lang_name(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO doc_lang_name_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_doc_lang_name(citext) IS
'try_get_doc_lang_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_doc_lang_name(citext)
RETURNS doc_lang_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_doc_lang_name( $1),''get_doc_lang_name(citext)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_doc_lang_name(citext) IS
'get_doc_lang_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_doc_lang_name(VARIADIC citext[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_doc_lang_name(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:24: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_doc_lang_name(citext[]) IS
'declare_doc_lang_name(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                                              create_name_ref_schema                                                                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_doc_lang_name_from_id(ref_ids),doc_lang_name_nil(),try_doc_lang_name(refs),doc_lang_name_text(doc_lang_name_refs),doc_lang_name_length(doc_lang_name_refs),find_doc_lang_name(citext),try_doc_lang_name_in(citext),next_doc_lang_name_ref(),get_doc_lang_name(citext),declare_doc_lang_name(citext[])}
(1 row)

 declare_doc_lang_name 
-----------------------
                    16
(1 row)

psql:doc-types.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env_doc_lang(env_refs)
RETURNS doc_lang_name_refs LANGUAGE SQL STABLE STRICT AS
'SELECT try_doc_lang_name( env_name_value( $1, ''env_doc_lang''))';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env_doc_lang(env_refs) IS
'try_env_doc_lang(): lookup value associated with name env_doc_lang in given environment and return as value of type doc_lang_name_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_doc_lang(env_refs)
RETURNS doc_lang_name_refs LANGUAGE SQL STABLE AS
'SELECT non_null(try_env_doc_lang( $1),''env_doc_lang(env_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_doc_lang(env_refs) IS
'env_doc_lang(): lookup value associated with name env_doc_lang in given environment and return as value of type doc_lang_name_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_doc_lang(env_refs, doc_lang_name_refs)
RETURNS env_pair_stati LANGUAGE SQL  AS
'	SELECT env_add_binding( $1, ''env_doc_lang''::name_refs, $2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-types.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_doc_lang(env_refs,doc_lang_name_refs) IS
's4_doc.env_doc_lang(): associate name env_doc_lang in given environment with value of type doc_lang_name_refs and return the status by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
         create_env_name_type_func         
-------------------------------------------
 env_doc_lang(env_refs,doc_lang_name_refs)
(1 row)

CREATE TABLE
COMMENT
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE TABLE
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f doc-kind-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/doc-kind-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/doc-kind-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/doc-kind-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                set_file                                 
-------------------------------------------------------------------------
 schema doc-kind-schema.sql, module doc-kind-schema, revision $Id, id 74
(1 row)

psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE doc_node_kind_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: created shell type doc_node_kind_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION doc_node_kind_refs_in_op(cstring,oid,integer)
RETURNS doc_node_kind_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  42809: return type doc_node_kind_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:doc-kind-schema.sql:18: NOTICE:  00000: CREATED doc_node_kind_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION doc_node_kind_refs_out_op(doc_node_kind_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  42809: argument type doc_node_kind_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:doc-kind-schema.sql:18: NOTICE:  00000: CREATED doc_node_kind_refs_out_op(doc_node_kind_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE doc_node_kind_refs (
  INPUT = doc_node_kind_refs_in_op,
  OUTPUT = doc_node_kind_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: WARNING:  42P17: type input function doc_node_kind_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:doc-kind-schema.sql:18: WARNING:  42P17: type output function doc_node_kind_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:doc-kind-schema.sql:18: NOTICE:  00000: CREATE TYPE doc_node_kind_refs (
  INPUT = doc_node_kind_refs_in_op,
  OUTPUT = doc_node_kind_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS doc_node_kind_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS doc_node_kind_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (doc_node_kind_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (doc_node_kind_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (doc_node_kind_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (doc_node_kind_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_kind_refs_cmp(doc_node_kind_refs, doc_node_kind_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_kind_refs_cmp(doc_node_kind_refs,doc_node_kind_refs) IS
'doc_node_kind_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_kind_refs_lt(doc_node_kind_refs, doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_kind_refs_lt(doc_node_kind_refs,doc_node_kind_refs) IS
'doc_node_kind_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = doc_node_kind_refs,
	 rightarg = doc_node_kind_refs,
	 procedure = doc_node_kind_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_kind_refs_le(doc_node_kind_refs, doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_kind_refs_le(doc_node_kind_refs,doc_node_kind_refs) IS
'doc_node_kind_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = doc_node_kind_refs,
	 rightarg = doc_node_kind_refs,
	 procedure = doc_node_kind_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_kind_refs_eq(doc_node_kind_refs, doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_kind_refs_eq(doc_node_kind_refs,doc_node_kind_refs) IS
'doc_node_kind_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = doc_node_kind_refs,
	 rightarg = doc_node_kind_refs,
	 procedure = doc_node_kind_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_kind_refs_neq(doc_node_kind_refs, doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_kind_refs_neq(doc_node_kind_refs,doc_node_kind_refs) IS
'doc_node_kind_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = doc_node_kind_refs,
	 rightarg = doc_node_kind_refs,
	 procedure = doc_node_kind_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_kind_refs_ge(doc_node_kind_refs, doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_kind_refs_ge(doc_node_kind_refs,doc_node_kind_refs) IS
'doc_node_kind_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = doc_node_kind_refs,
	 rightarg = doc_node_kind_refs,
	 procedure = doc_node_kind_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_kind_refs_gt(doc_node_kind_refs, doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_kind_refs_gt(doc_node_kind_refs,doc_node_kind_refs) IS
'doc_node_kind_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = doc_node_kind_refs,
	 rightarg = doc_node_kind_refs,
	 procedure = doc_node_kind_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:18: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS doc_node_kind_refs_ops
		DEFAULT FOR TYPE doc_node_kind_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       doc_node_kind_refs_cmp(doc_node_kind_refs, doc_node_kind_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  create_ref_type   
--------------------
 doc_node_kind_refs
(1 row)

CREATE TABLE
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE doc_node_kind_keys_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE doc_node_kind_keys_row_handles (
	handle handles NOT NULL UNIQUE,
	key doc_node_kind_refs PRIMARY KEY  REFERENCES doc_node_kind_keys(key)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE doc_node_kind_keys_row_handles IS
'row handles associated with doc_node_kind_keys rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_kind_keys_row_get_(handle handles, key doc_node_kind_refs)
RETURNS doc_node_kind_keys LANGUAGE SQL  STRICT AS
'SELECT doc_node_kind_keys.*
 FROM doc_node_kind_keys,doc_node_kind_keys_row_handles
WHERE
doc_node_kind_keys_row_handles.handle=$1 AND doc_node_kind_keys_row_handles.key=$2
AND
doc_node_kind_keys.key=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_kind_keys_row_get_(handles,doc_node_kind_refs) IS
'doc_node_kind_keys_row_get_(handle, key): find existing handle for row of doc_node_kind_keys; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_kind_keys_row_set_(handle handles, key doc_node_kind_refs)
RETURNS doc_node_kind_keys LANGUAGE SQL  STRICT AS
'
	INSERT INTO doc_node_kind_keys_row_handles VALUES ( $1, $2);
	SELECT doc_node_kind_keys_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_kind_keys_row_set_(handles,doc_node_kind_refs) IS
'doc_node_kind_keys_row_set_(handle, key): make new handle for row of doc_node_kind_keys; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_kind_keys_row(handle handles, key doc_node_kind_refs)
RETURNS doc_node_kind_keys LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   doc_node_kind_keys_row_get_( $1, $2),
   doc_node_kind_keys_row_set_( $1, $2)
  )FROM debug_enter(
  ''doc_node_kind_keys_row(handles, doc_node_kind_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_kind_keys_row(handles,doc_node_kind_refs) IS
'doc_node_kind_keys_row(handle, key): ensure handle for row of doc_node_kind_keys given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_kind_keys_row(handle handles)
RETURNS doc_node_kind_keys LANGUAGE SQL  STRICT AS
'SELECT doc_node_kind_keys.*
  FROM doc_node_kind_keys, doc_node_kind_keys_row_handles
  WHERE $1 = doc_node_kind_keys_row_handles.handle
    AND doc_node_kind_keys.key=doc_node_kind_keys_row_handles.key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_kind_keys_row(handles) IS
's4_doc.doc_node_kind_keys_row(handle): return a row given a handle for doc_node_kind_keys';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_kind_keys_key(handle handles)
RETURNS doc_node_kind_refs LANGUAGE SQL  STRICT AS
'SELECT key FROM doc_node_kind_keys_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_kind_keys_key(handles) IS
'doc_node_kind_keys_key(handle): given a row handle for doc_node_kind_keys return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_kind_keys_key(handle handles, key doc_node_kind_refs)
RETURNS doc_node_kind_refs LANGUAGE SQL  STRICT AS
'SELECT (doc_node_kind_keys_row( $1, $2)).key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_kind_keys_key(handles,doc_node_kind_refs) IS
's4_doc.doc_node_kind_keys_key(handle, key): set handle for primary key of doc_node_kind_keys and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                  create_handles_for                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({doc_node_kind_keys_row_handles},"{""doc_node_kind_keys_row(handles,doc_node_kind_refs)"",doc_node_kind_keys_row(handles),doc_node_kind_keys_key(handles),""doc_node_kind_keys_key(handles,doc_node_kind_refs)""}")
(1 row)

psql:doc-kind-schema.sql:32: NOTICE:  00000: 
---> META create_key_insert_trigger_function_for(regclass,text)
CREATE OR REPLACE
FUNCTION doc_node_kind_keys_insert_trigger() RETURNS trigger
LANGUAGE plpgsql AS $body$ 
	BEGIN
		IF TG_OP = 'INSERT' THEN
			INSERT INTO doc_node_kind_keys VALUES ( NEW.ref );
			RETURN NEW;
		ELSE
			RAISE NOTICE 'Unexpected operation!';
			RETURN NULL;
		END IF;
	END
$body$
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:32: NOTICE:  00000: 
---> META create_key_delete_trigger_function_for(regclass,text)
CREATE OR REPLACE
FUNCTION doc_node_kind_keys_delete_trigger() RETURNS trigger
LANGUAGE plpgsql AS $body$ 
	BEGIN
		IF TG_OP = 'DELETE' THEN
			DELETE FROM doc_node_kind_keys WHERE key = OLD.ref;
		ELSE
			RAISE NOTICE 'Unexpected operation!';
		END IF;
		RETURN NULL;
	END
$body$
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_trigger_functions_for 
----------------------------------
 doc_node_kind_keys
(1 row)

CREATE TABLE
COMMENT
psql:doc-kind-schema.sql:45: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS abstract_doc_node_kind_rows_abstract_trigger ON abstract_doc_node_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:45: NOTICE:  00000: trigger "abstract_doc_node_kind_rows_abstract_trigger" for relation "abstract_doc_node_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-kind-schema.sql:45: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER abstract_doc_node_kind_rows_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON abstract_doc_node_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
      declare_abstract       
-----------------------------
 abstract_doc_node_kind_rows
(1 row)

                                    declare_ref_type_class                                    
----------------------------------------------------------------------------------------------
 (24,abstract_doc_node_kind_rows,doc_node_kind_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

CREATE FUNCTION
CREATE FUNCTION
psql:doc-kind-schema.sql:68: NOTICE:  00000: sequence "doc_kinds_id_seq" does not exist, skipping
LOCATION:  DropErrorMsgNonExistent, tablecmds.c:763
DROP SEQUENCE
CREATE SEQUENCE
CREATE FUNCTION
CREATE TABLE
COMMENT
psql:doc-kind-schema.sql:98: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION show1_doc_node_kind_rows_25_exists(_ref doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM show1_doc_node_kind_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:98: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION show1_doc_node_kind_rows_25_exists(doc_node_kind_refs) IS
'show1_doc_node_kind_rows_25_exists(_ref): referential integrity test method for row of show1_doc_node_kind_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:98: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS show1_doc_node_kind_rows_no_update_trigger ON show1_doc_node_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:98: NOTICE:  00000: trigger "show1_doc_node_kind_rows_no_update_trigger" for relation "show1_doc_node_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-kind-schema.sql:98: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER show1_doc_node_kind_rows_no_update_trigger
  BEFORE UPDATE ON show1_doc_node_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                     declare_ref_class                                     
-------------------------------------------------------------------------------------------
 (25,show1_doc_node_kind_rows,doc_node_kind_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

 declare_doc_kind_lang_type 
----------------------------
 show1_doc_node_kind_rows
(1 row)

ALTER TABLE
psql:doc-kind-schema.sql:107: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS show1_doc_node_kind_rows_key_insert_trigger ON show1_doc_node_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:107: NOTICE:  00000: trigger "show1_doc_node_kind_rows_key_insert_trigger" for relation "show1_doc_node_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-kind-schema.sql:107: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER show1_doc_node_kind_rows_key_insert_trigger
  BEFORE INSERT ON show1_doc_node_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:107: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS show1_doc_node_kind_rows_key_delete_trigger ON show1_doc_node_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:107: NOTICE:  00000: trigger "show1_doc_node_kind_rows_key_delete_trigger" for relation "show1_doc_node_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-kind-schema.sql:107: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER show1_doc_node_kind_rows_key_delete_trigger
  BEFORE DELETE ON show1_doc_node_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for  
--------------------------
 show1_doc_node_kind_rows
(1 row)

CREATE TABLE
COMMENT
psql:doc-kind-schema.sql:122: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_wrap_doc_node_kind_rows_26_exists(_ref doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM env_wrap_doc_node_kind_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:122: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_wrap_doc_node_kind_rows_26_exists(doc_node_kind_refs) IS
'env_wrap_doc_node_kind_rows_26_exists(_ref): referential integrity test method for row of env_wrap_doc_node_kind_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:122: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS env_wrap_doc_node_kind_rows_no_update_trigger ON env_wrap_doc_node_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:122: NOTICE:  00000: trigger "env_wrap_doc_node_kind_rows_no_update_trigger" for relation "env_wrap_doc_node_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-kind-schema.sql:122: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER env_wrap_doc_node_kind_rows_no_update_trigger
  BEFORE UPDATE ON env_wrap_doc_node_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                      declare_ref_class                                       
----------------------------------------------------------------------------------------------
 (26,env_wrap_doc_node_kind_rows,doc_node_kind_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

ALTER TABLE
psql:doc-kind-schema.sql:129: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS env_wrap_doc_node_kind_rows_key_insert_trigger ON env_wrap_doc_node_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:129: NOTICE:  00000: trigger "env_wrap_doc_node_kind_rows_key_insert_trigger" for relation "env_wrap_doc_node_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-kind-schema.sql:129: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER env_wrap_doc_node_kind_rows_key_insert_trigger
  BEFORE INSERT ON env_wrap_doc_node_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:129: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS env_wrap_doc_node_kind_rows_key_delete_trigger ON env_wrap_doc_node_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:129: NOTICE:  00000: trigger "env_wrap_doc_node_kind_rows_key_delete_trigger" for relation "env_wrap_doc_node_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-kind-schema.sql:129: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER env_wrap_doc_node_kind_rows_key_delete_trigger
  BEFORE DELETE ON env_wrap_doc_node_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   create_key_triggers_for   
-----------------------------
 env_wrap_doc_node_kind_rows
(1 row)

CREATE TABLE
COMMENT
psql:doc-kind-schema.sql:142: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION dynamic_doc_node_kind_rows_27_exists(_ref doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM dynamic_doc_node_kind_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:142: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION dynamic_doc_node_kind_rows_27_exists(doc_node_kind_refs) IS
'dynamic_doc_node_kind_rows_27_exists(_ref): referential integrity test method for row of dynamic_doc_node_kind_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:142: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS dynamic_doc_node_kind_rows_no_update_trigger ON dynamic_doc_node_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:142: NOTICE:  00000: trigger "dynamic_doc_node_kind_rows_no_update_trigger" for relation "dynamic_doc_node_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-kind-schema.sql:142: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER dynamic_doc_node_kind_rows_no_update_trigger
  BEFORE UPDATE ON dynamic_doc_node_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                      declare_ref_class                                      
---------------------------------------------------------------------------------------------
 (27,dynamic_doc_node_kind_rows,doc_node_kind_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

ALTER TABLE
psql:doc-kind-schema.sql:149: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS dynamic_doc_node_kind_rows_key_insert_trigger ON dynamic_doc_node_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:149: NOTICE:  00000: trigger "dynamic_doc_node_kind_rows_key_insert_trigger" for relation "dynamic_doc_node_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-kind-schema.sql:149: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER dynamic_doc_node_kind_rows_key_insert_trigger
  BEFORE INSERT ON dynamic_doc_node_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:149: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS dynamic_doc_node_kind_rows_key_delete_trigger ON dynamic_doc_node_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-kind-schema.sql:149: NOTICE:  00000: trigger "dynamic_doc_node_kind_rows_key_delete_trigger" for relation "dynamic_doc_node_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-kind-schema.sql:149: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER dynamic_doc_node_kind_rows_key_delete_trigger
  BEFORE DELETE ON dynamic_doc_node_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  create_key_triggers_for   
----------------------------
 dynamic_doc_node_kind_rows
(1 row)

CREATE TABLE
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f doc-node-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/doc-node-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/doc-node-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/doc-node-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                 set_file                                  
---------------------------------------------------------------------------
 schema tor2-node-schema.sql, module tor2-node-schema, revision $Id, id 75
(1 row)

psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE doc_node_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: created shell type doc_node_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION doc_node_refs_in_op(cstring,oid,integer)
RETURNS doc_node_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  42809: return type doc_node_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:doc-node-schema.sql:27: NOTICE:  00000: CREATED doc_node_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION doc_node_refs_out_op(doc_node_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  42809: argument type doc_node_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:doc-node-schema.sql:27: NOTICE:  00000: CREATED doc_node_refs_out_op(doc_node_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE doc_node_refs (
  INPUT = doc_node_refs_in_op,
  OUTPUT = doc_node_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: WARNING:  42P17: type input function doc_node_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:doc-node-schema.sql:27: WARNING:  42P17: type output function doc_node_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:doc-node-schema.sql:27: NOTICE:  00000: CREATE TYPE doc_node_refs (
  INPUT = doc_node_refs_in_op,
  OUTPUT = doc_node_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS doc_node_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS doc_node_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (doc_node_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (doc_node_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (doc_node_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (doc_node_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_refs_cmp(doc_node_refs, doc_node_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_refs_cmp(doc_node_refs,doc_node_refs) IS
'doc_node_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_refs_lt(doc_node_refs, doc_node_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_refs_lt(doc_node_refs,doc_node_refs) IS
'doc_node_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = doc_node_refs,
	 rightarg = doc_node_refs,
	 procedure = doc_node_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_refs_le(doc_node_refs, doc_node_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_refs_le(doc_node_refs,doc_node_refs) IS
'doc_node_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = doc_node_refs,
	 rightarg = doc_node_refs,
	 procedure = doc_node_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_refs_eq(doc_node_refs, doc_node_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_refs_eq(doc_node_refs,doc_node_refs) IS
'doc_node_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = doc_node_refs,
	 rightarg = doc_node_refs,
	 procedure = doc_node_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_refs_neq(doc_node_refs, doc_node_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_refs_neq(doc_node_refs,doc_node_refs) IS
'doc_node_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = doc_node_refs,
	 rightarg = doc_node_refs,
	 procedure = doc_node_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_refs_ge(doc_node_refs, doc_node_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_refs_ge(doc_node_refs,doc_node_refs) IS
'doc_node_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = doc_node_refs,
	 rightarg = doc_node_refs,
	 procedure = doc_node_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_refs_gt(doc_node_refs, doc_node_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_refs_gt(doc_node_refs,doc_node_refs) IS
'doc_node_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = doc_node_refs,
	 rightarg = doc_node_refs,
	 procedure = doc_node_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:27: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS doc_node_refs_ops
		DEFAULT FOR TYPE doc_node_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       doc_node_refs_cmp(doc_node_refs, doc_node_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 doc_node_refs
(1 row)

CREATE TABLE
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE doc_node_keys_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE doc_node_keys_row_handles (
	handle handles NOT NULL UNIQUE,
	key doc_node_refs PRIMARY KEY  REFERENCES doc_node_keys(key)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE doc_node_keys_row_handles IS
'row handles associated with doc_node_keys rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_keys_row_get_(handle handles, key doc_node_refs)
RETURNS doc_node_keys LANGUAGE SQL  STRICT AS
'SELECT doc_node_keys.*
 FROM doc_node_keys,doc_node_keys_row_handles
WHERE
doc_node_keys_row_handles.handle=$1 AND doc_node_keys_row_handles.key=$2
AND
doc_node_keys.key=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_keys_row_get_(handles,doc_node_refs) IS
'doc_node_keys_row_get_(handle, key): find existing handle for row of doc_node_keys; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_keys_row_set_(handle handles, key doc_node_refs)
RETURNS doc_node_keys LANGUAGE SQL  STRICT AS
'
	INSERT INTO doc_node_keys_row_handles VALUES ( $1, $2);
	SELECT doc_node_keys_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_keys_row_set_(handles,doc_node_refs) IS
'doc_node_keys_row_set_(handle, key): make new handle for row of doc_node_keys; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_keys_row(handle handles, key doc_node_refs)
RETURNS doc_node_keys LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   doc_node_keys_row_get_( $1, $2),
   doc_node_keys_row_set_( $1, $2)
  )FROM debug_enter(
  ''doc_node_keys_row(handles, doc_node_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_keys_row(handles,doc_node_refs) IS
'doc_node_keys_row(handle, key): ensure handle for row of doc_node_keys given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_keys_row(handle handles)
RETURNS doc_node_keys LANGUAGE SQL  STRICT AS
'SELECT doc_node_keys.*
  FROM doc_node_keys, doc_node_keys_row_handles
  WHERE $1 = doc_node_keys_row_handles.handle
    AND doc_node_keys.key=doc_node_keys_row_handles.key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_keys_row(handles) IS
's4_doc.doc_node_keys_row(handle): return a row given a handle for doc_node_keys';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_keys_key(handle handles)
RETURNS doc_node_refs LANGUAGE SQL  STRICT AS
'SELECT key FROM doc_node_keys_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_keys_key(handles) IS
'doc_node_keys_key(handle): given a row handle for doc_node_keys return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_node_keys_key(handle handles, key doc_node_refs)
RETURNS doc_node_refs LANGUAGE SQL  STRICT AS
'SELECT (doc_node_keys_row( $1, $2)).key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:35: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_node_keys_key(handles,doc_node_refs) IS
's4_doc.doc_node_keys_key(handle, key): set handle for primary key of doc_node_keys and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                create_handles_for                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({doc_node_keys_row_handles},"{""doc_node_keys_row(handles,doc_node_refs)"",doc_node_keys_row(handles),doc_node_keys_key(handles),""doc_node_keys_key(handles,doc_node_refs)""}")
(1 row)

psql:doc-node-schema.sql:36: NOTICE:  00000: 
---> META create_key_insert_trigger_function_for(regclass,text)
CREATE OR REPLACE
FUNCTION doc_node_keys_insert_trigger() RETURNS trigger
LANGUAGE plpgsql AS $body$ 
	BEGIN
		IF TG_OP = 'INSERT' THEN
			INSERT INTO doc_node_keys VALUES ( NEW.ref );
			RETURN NEW;
		ELSE
			RAISE NOTICE 'Unexpected operation!';
			RETURN NULL;
		END IF;
	END
$body$
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:36: NOTICE:  00000: 
---> META create_key_delete_trigger_function_for(regclass,text)
CREATE OR REPLACE
FUNCTION doc_node_keys_delete_trigger() RETURNS trigger
LANGUAGE plpgsql AS $body$ 
	BEGIN
		IF TG_OP = 'DELETE' THEN
			DELETE FROM doc_node_keys WHERE key = OLD.ref;
		ELSE
			RAISE NOTICE 'Unexpected operation!';
		END IF;
		RETURN NULL;
	END
$body$
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_trigger_functions_for 
----------------------------------
 doc_node_keys
(1 row)

CREATE TABLE
COMMENT
COMMENT
COMMENT
psql:doc-node-schema.sql:58: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS abstract_doc_node_rows_abstract_trigger ON abstract_doc_node_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:58: NOTICE:  00000: trigger "abstract_doc_node_rows_abstract_trigger" for relation "abstract_doc_node_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-node-schema.sql:58: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER abstract_doc_node_rows_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON abstract_doc_node_rows
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
    declare_abstract    
------------------------
 abstract_doc_node_rows
(1 row)

                               declare_ref_type_class                               
------------------------------------------------------------------------------------
 (28,abstract_doc_node_rows,doc_node_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

CREATE FUNCTION
CREATE FUNCTION
psql:doc-node-schema.sql:74: NOTICE:  00000: sequence "doc_node_id_seq" does not exist, skipping
LOCATION:  DropErrorMsgNonExistent, tablecmds.c:763
DROP SEQUENCE
CREATE SEQUENCE
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE TABLE
COMMENT
COMMENT
psql:doc-node-schema.sql:128: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS graft_doc_node_rows_key_insert_trigger ON graft_doc_node_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:128: NOTICE:  00000: trigger "graft_doc_node_rows_key_insert_trigger" for relation "graft_doc_node_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-node-schema.sql:128: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER graft_doc_node_rows_key_insert_trigger
  BEFORE INSERT ON graft_doc_node_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:128: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS graft_doc_node_rows_key_delete_trigger ON graft_doc_node_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:128: NOTICE:  00000: trigger "graft_doc_node_rows_key_delete_trigger" for relation "graft_doc_node_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-node-schema.sql:128: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER graft_doc_node_rows_key_delete_trigger
  BEFORE DELETE ON graft_doc_node_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 graft_doc_node_rows
(1 row)

psql:doc-node-schema.sql:129: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION graft_doc_node_rows_29_exists(_ref doc_node_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM graft_doc_node_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:129: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION graft_doc_node_rows_29_exists(doc_node_refs) IS
'graft_doc_node_rows_29_exists(_ref): referential integrity test method for row of graft_doc_node_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:129: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS graft_doc_node_rows_no_update_trigger ON graft_doc_node_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:129: NOTICE:  00000: trigger "graft_doc_node_rows_no_update_trigger" for relation "graft_doc_node_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-node-schema.sql:129: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER graft_doc_node_rows_no_update_trigger
  BEFORE UPDATE ON graft_doc_node_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                declare_ref_class                                
---------------------------------------------------------------------------------
 (29,graft_doc_node_rows,doc_node_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

ALTER TABLE
ALTER TABLE
CREATE TABLE
COMMENT
psql:doc-node-schema.sql:149: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION tree_doc_node_rows_30_exists(_ref doc_node_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM tree_doc_node_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:149: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION tree_doc_node_rows_30_exists(doc_node_refs) IS
'tree_doc_node_rows_30_exists(_ref): referential integrity test method for row of tree_doc_node_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:149: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS tree_doc_node_rows_no_update_trigger ON tree_doc_node_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:149: NOTICE:  00000: trigger "tree_doc_node_rows_no_update_trigger" for relation "tree_doc_node_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-node-schema.sql:149: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER tree_doc_node_rows_no_update_trigger
  BEFORE UPDATE ON tree_doc_node_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                               declare_ref_class                                
--------------------------------------------------------------------------------
 (30,tree_doc_node_rows,doc_node_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

psql:doc-node-schema.sql:151: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS tree_doc_node_rows_key_insert_trigger ON tree_doc_node_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:151: NOTICE:  00000: trigger "tree_doc_node_rows_key_insert_trigger" for relation "tree_doc_node_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-node-schema.sql:151: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER tree_doc_node_rows_key_insert_trigger
  BEFORE INSERT ON tree_doc_node_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:151: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS tree_doc_node_rows_key_delete_trigger ON tree_doc_node_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-node-schema.sql:151: NOTICE:  00000: trigger "tree_doc_node_rows_key_delete_trigger" for relation "tree_doc_node_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-node-schema.sql:151: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER tree_doc_node_rows_key_delete_trigger
  BEFORE DELETE ON tree_doc_node_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 tree_doc_node_rows
(1 row)

ALTER TABLE
ALTER TABLE
CREATE TABLE
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
psql:doc-node-schema.sql:218: NOTICE:  00000: trigger "doc_nodes_after_inserter" for relation "doc_node_parents" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP TRIGGER
CREATE TRIGGER
CREATE TRIGGER
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f doc-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/doc-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/doc-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/doc-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                           set_file                            
---------------------------------------------------------------
 schema doc-schema.sql, module doc-schema, revision $Id, id 76
(1 row)

psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE doc_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: created shell type doc_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION doc_refs_in_op(cstring,oid,integer)
RETURNS doc_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  42809: return type doc_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:doc-schema.sql:31: NOTICE:  00000: CREATED doc_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION doc_refs_out_op(doc_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  42809: argument type doc_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:doc-schema.sql:31: NOTICE:  00000: CREATED doc_refs_out_op(doc_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE doc_refs (
  INPUT = doc_refs_in_op,
  OUTPUT = doc_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: WARNING:  42P17: type input function doc_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:doc-schema.sql:31: WARNING:  42P17: type output function doc_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:doc-schema.sql:31: NOTICE:  00000: CREATE TYPE doc_refs (
  INPUT = doc_refs_in_op,
  OUTPUT = doc_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS doc_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS doc_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (doc_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (doc_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (doc_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (doc_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_refs_cmp(doc_refs, doc_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_refs_cmp(doc_refs,doc_refs) IS
'doc_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_refs_lt(doc_refs, doc_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_refs_lt(doc_refs,doc_refs) IS
'doc_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = doc_refs,
	 rightarg = doc_refs,
	 procedure = doc_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_refs_le(doc_refs, doc_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_refs_le(doc_refs,doc_refs) IS
'doc_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = doc_refs,
	 rightarg = doc_refs,
	 procedure = doc_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_refs_eq(doc_refs, doc_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_refs_eq(doc_refs,doc_refs) IS
'doc_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = doc_refs,
	 rightarg = doc_refs,
	 procedure = doc_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_refs_neq(doc_refs, doc_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_refs_neq(doc_refs,doc_refs) IS
'doc_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = doc_refs,
	 rightarg = doc_refs,
	 procedure = doc_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_refs_ge(doc_refs, doc_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_refs_ge(doc_refs,doc_refs) IS
'doc_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = doc_refs,
	 rightarg = doc_refs,
	 procedure = doc_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_refs_gt(doc_refs, doc_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_refs_gt(doc_refs,doc_refs) IS
'doc_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = doc_refs,
	 rightarg = doc_refs,
	 procedure = doc_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:31: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS doc_refs_ops
		DEFAULT FOR TYPE doc_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       doc_refs_cmp(doc_refs, doc_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 doc_refs
(1 row)

CREATE FUNCTION
COMMENT
CREATE TABLE
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE doc_keys_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE doc_keys_row_handles (
	handle handles NOT NULL UNIQUE,
	key doc_refs PRIMARY KEY  REFERENCES doc_keys(key)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE doc_keys_row_handles IS
'row handles associated with doc_keys rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_keys_row_get_(handle handles, key doc_refs)
RETURNS doc_keys LANGUAGE SQL  STRICT AS
'SELECT doc_keys.*
 FROM doc_keys,doc_keys_row_handles
WHERE
doc_keys_row_handles.handle=$1 AND doc_keys_row_handles.key=$2
AND
doc_keys.key=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_keys_row_get_(handles,doc_refs) IS
'doc_keys_row_get_(handle, key): find existing handle for row of doc_keys; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_keys_row_set_(handle handles, key doc_refs)
RETURNS doc_keys LANGUAGE SQL  STRICT AS
'
	INSERT INTO doc_keys_row_handles VALUES ( $1, $2);
	SELECT doc_keys_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_keys_row_set_(handles,doc_refs) IS
'doc_keys_row_set_(handle, key): make new handle for row of doc_keys; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_keys_row(handle handles, key doc_refs)
RETURNS doc_keys LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   doc_keys_row_get_( $1, $2),
   doc_keys_row_set_( $1, $2)
  )FROM debug_enter(
  ''doc_keys_row(handles, doc_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_keys_row(handles,doc_refs) IS
'doc_keys_row(handle, key): ensure handle for row of doc_keys given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_keys_row(handle handles)
RETURNS doc_keys LANGUAGE SQL  STRICT AS
'SELECT doc_keys.*
  FROM doc_keys, doc_keys_row_handles
  WHERE $1 = doc_keys_row_handles.handle
    AND doc_keys.key=doc_keys_row_handles.key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_keys_row(handles) IS
's4_doc.doc_keys_row(handle): return a row given a handle for doc_keys';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_keys_key(handle handles)
RETURNS doc_refs LANGUAGE SQL  STRICT AS
'SELECT key FROM doc_keys_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_keys_key(handles) IS
'doc_keys_key(handle): given a row handle for doc_keys return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_keys_key(handle handles, key doc_refs)
RETURNS doc_refs LANGUAGE SQL  STRICT AS
'SELECT (doc_keys_row( $1, $2)).key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_keys_key(handles,doc_refs) IS
's4_doc.doc_keys_key(handle, key): set handle for primary key of doc_keys and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                               create_handles_for                                                               
------------------------------------------------------------------------------------------------------------------------------------------------
 ({doc_keys_row_handles},"{""doc_keys_row(handles,doc_refs)"",doc_keys_row(handles),doc_keys_key(handles),""doc_keys_key(handles,doc_refs)""}")
(1 row)

psql:doc-schema.sql:46: NOTICE:  00000: 
---> META create_key_insert_trigger_function_for(regclass,text)
CREATE OR REPLACE
FUNCTION doc_keys_insert_trigger() RETURNS trigger
LANGUAGE plpgsql AS $body$ 
	BEGIN
		IF TG_OP = 'INSERT' THEN
			INSERT INTO doc_keys VALUES ( NEW.ref );
			RETURN NEW;
		ELSE
			RAISE NOTICE 'Unexpected operation!';
			RETURN NULL;
		END IF;
	END
$body$
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:46: NOTICE:  00000: 
---> META create_key_delete_trigger_function_for(regclass,text)
CREATE OR REPLACE
FUNCTION doc_keys_delete_trigger() RETURNS trigger
LANGUAGE plpgsql AS $body$ 
	BEGIN
		IF TG_OP = 'DELETE' THEN
			DELETE FROM doc_keys WHERE key = OLD.ref;
		ELSE
			RAISE NOTICE 'Unexpected operation!';
		END IF;
		RETURN NULL;
	END
$body$
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_trigger_functions_for 
----------------------------------
 doc_keys
(1 row)

CREATE TABLE
COMMENT
psql:doc-schema.sql:56: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS abstract_doc_rows_abstract_trigger ON abstract_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:56: NOTICE:  00000: trigger "abstract_doc_rows_abstract_trigger" for relation "abstract_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:56: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER abstract_doc_rows_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON abstract_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_abstract  
-------------------
 abstract_doc_rows
(1 row)

                          declare_ref_type_class                          
--------------------------------------------------------------------------
 (31,abstract_doc_rows,doc_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

CREATE TABLE
COMMENT
psql:doc-schema.sql:68: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS abstract_base_doc_rows_abstract_trigger ON abstract_base_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:68: NOTICE:  00000: trigger "abstract_base_doc_rows_abstract_trigger" for relation "abstract_base_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:68: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER abstract_base_doc_rows_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON abstract_base_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
    declare_abstract    
------------------------
 abstract_base_doc_rows
(1 row)

CREATE TABLE
COMMENT
COMMENT
psql:doc-schema.sql:80: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS abstract_static_doc_rows_abstract_trigger ON abstract_static_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:80: NOTICE:  00000: trigger "abstract_static_doc_rows_abstract_trigger" for relation "abstract_static_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:80: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER abstract_static_doc_rows_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON abstract_static_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
     declare_abstract     
--------------------------
 abstract_static_doc_rows
(1 row)

CREATE FUNCTION
CREATE FUNCTION
INSERT 0 1
psql:doc-schema.sql:99: NOTICE:  00000: sequence "doc_id_seq" does not exist, skipping
LOCATION:  DropErrorMsgNonExistent, tablecmds.c:763
DROP SEQUENCE
CREATE SEQUENCE
CREATE FUNCTION
CREATE TABLE
COMMENT
psql:doc-schema.sql:125: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION tree_doc_rows_32_exists(_ref doc_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM tree_doc_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:125: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION tree_doc_rows_32_exists(doc_refs) IS
'tree_doc_rows_32_exists(_ref): referential integrity test method for row of tree_doc_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:125: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS tree_doc_rows_no_update_trigger ON tree_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:125: NOTICE:  00000: trigger "tree_doc_rows_no_update_trigger" for relation "tree_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:125: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER tree_doc_rows_no_update_trigger
  BEFORE UPDATE ON tree_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                          declare_ref_class                           
----------------------------------------------------------------------
 (32,tree_doc_rows,doc_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

ALTER TABLE
psql:doc-schema.sql:130: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS tree_doc_rows_key_insert_trigger ON tree_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:130: NOTICE:  00000: trigger "tree_doc_rows_key_insert_trigger" for relation "tree_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:130: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER tree_doc_rows_key_insert_trigger
  BEFORE INSERT ON tree_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:130: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS tree_doc_rows_key_delete_trigger ON tree_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:130: NOTICE:  00000: trigger "tree_doc_rows_key_delete_trigger" for relation "tree_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:130: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER tree_doc_rows_key_delete_trigger
  BEFORE DELETE ON tree_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 tree_doc_rows
(1 row)

CREATE TABLE
COMMENT
COMMENT
psql:doc-schema.sql:155: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION changeset_doc_rows_33_exists(_ref doc_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM changeset_doc_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:155: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION changeset_doc_rows_33_exists(doc_refs) IS
'changeset_doc_rows_33_exists(_ref): referential integrity test method for row of changeset_doc_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:155: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS changeset_doc_rows_no_update_trigger ON changeset_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:155: NOTICE:  00000: trigger "changeset_doc_rows_no_update_trigger" for relation "changeset_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:155: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER changeset_doc_rows_no_update_trigger
  BEFORE UPDATE ON changeset_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                             declare_ref_class                             
---------------------------------------------------------------------------
 (33,changeset_doc_rows,doc_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

ALTER TABLE
psql:doc-schema.sql:160: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS changeset_doc_rows_key_insert_trigger ON changeset_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:160: NOTICE:  00000: trigger "changeset_doc_rows_key_insert_trigger" for relation "changeset_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:160: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER changeset_doc_rows_key_insert_trigger
  BEFORE INSERT ON changeset_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:160: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS changeset_doc_rows_key_delete_trigger ON changeset_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:160: NOTICE:  00000: trigger "changeset_doc_rows_key_delete_trigger" for relation "changeset_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:160: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER changeset_doc_rows_key_delete_trigger
  BEFORE DELETE ON changeset_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 changeset_doc_rows
(1 row)

CREATE TABLE
COMMENT
psql:doc-schema.sql:176: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION blob_doc_rows_34_exists(_ref doc_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM blob_doc_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:176: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION blob_doc_rows_34_exists(doc_refs) IS
'blob_doc_rows_34_exists(_ref): referential integrity test method for row of blob_doc_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:176: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS blob_doc_rows_no_update_trigger ON blob_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:176: NOTICE:  00000: trigger "blob_doc_rows_no_update_trigger" for relation "blob_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:176: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER blob_doc_rows_no_update_trigger
  BEFORE UPDATE ON blob_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                          declare_ref_class                           
----------------------------------------------------------------------
 (34,blob_doc_rows,doc_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

ALTER TABLE
psql:doc-schema.sql:181: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS blob_doc_rows_key_insert_trigger ON blob_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:181: NOTICE:  00000: trigger "blob_doc_rows_key_insert_trigger" for relation "blob_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:181: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER blob_doc_rows_key_insert_trigger
  BEFORE INSERT ON blob_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:181: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS blob_doc_rows_key_delete_trigger ON blob_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:181: NOTICE:  00000: trigger "blob_doc_rows_key_delete_trigger" for relation "blob_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:181: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER blob_doc_rows_key_delete_trigger
  BEFORE DELETE ON blob_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 blob_doc_rows
(1 row)

CREATE TABLE
COMMENT
psql:doc-schema.sql:196: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION file_doc_rows_35_exists(_ref doc_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM file_doc_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:196: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION file_doc_rows_35_exists(doc_refs) IS
'file_doc_rows_35_exists(_ref): referential integrity test method for row of file_doc_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:196: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS file_doc_rows_no_update_trigger ON file_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:196: NOTICE:  00000: trigger "file_doc_rows_no_update_trigger" for relation "file_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:196: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER file_doc_rows_no_update_trigger
  BEFORE UPDATE ON file_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                          declare_ref_class                           
----------------------------------------------------------------------
 (35,file_doc_rows,doc_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

ALTER TABLE
psql:doc-schema.sql:201: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS file_doc_rows_key_insert_trigger ON file_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:201: NOTICE:  00000: trigger "file_doc_rows_key_insert_trigger" for relation "file_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:201: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER file_doc_rows_key_insert_trigger
  BEFORE INSERT ON file_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:201: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS file_doc_rows_key_delete_trigger ON file_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:201: NOTICE:  00000: trigger "file_doc_rows_key_delete_trigger" for relation "file_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:201: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER file_doc_rows_key_delete_trigger
  BEFORE DELETE ON file_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 file_doc_rows
(1 row)

CREATE TABLE
COMMENT
psql:doc-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION large_object_doc_rows_36_exists(_ref doc_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM large_object_doc_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION large_object_doc_rows_36_exists(doc_refs) IS
'large_object_doc_rows_36_exists(_ref): referential integrity test method for row of large_object_doc_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:216: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS large_object_doc_rows_no_update_trigger ON large_object_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:216: NOTICE:  00000: trigger "large_object_doc_rows_no_update_trigger" for relation "large_object_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:216: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER large_object_doc_rows_no_update_trigger
  BEFORE UPDATE ON large_object_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                              declare_ref_class                               
------------------------------------------------------------------------------
 (36,large_object_doc_rows,doc_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

ALTER TABLE
psql:doc-schema.sql:221: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS large_object_doc_rows_key_insert_trigger ON large_object_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:221: NOTICE:  00000: trigger "large_object_doc_rows_key_insert_trigger" for relation "large_object_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:221: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER large_object_doc_rows_key_insert_trigger
  BEFORE INSERT ON large_object_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:221: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS large_object_doc_rows_key_delete_trigger ON large_object_doc_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-schema.sql:221: NOTICE:  00000: trigger "large_object_doc_rows_key_delete_trigger" for relation "large_object_doc_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-schema.sql:221: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER large_object_doc_rows_key_delete_trigger
  BEFORE DELETE ON large_object_doc_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 large_object_doc_rows
(1 row)

CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f doc-kind-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/doc-kind-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/doc-kind-code.sql-out-err /home/greg/.Wicci/Make/wicci1/doc-kind-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                               set_file                                
-----------------------------------------------------------------------
 schema tor2-kind-code.sql, module tor2-kind-code, revision $Id, id 77
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
                                                declare_op_fallback                                                
-------------------------------------------------------------------------------------------------------------------
 ("ref_env_crefs_chiln_text_op(refs,env_refs,crefs,doc_node_refs[])","ref_env_crefs_text_op(refs,env_refs,crefs)")
(1 row)

CREATE FUNCTION
 declare_name 
--------------
            2
(1 row)

CREATE FUNCTION
COMMENT
                                                             type_class_op_method                                                             
----------------------------------------------------------------------------------------------------------------------------------------------
 (25,"ref_env_crefs_chiln_text_op(refs,env_refs,crefs,doc_node_refs[])","show1_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
                                                              type_class_op_method                                                              
------------------------------------------------------------------------------------------------------------------------------------------------
 (27,"ref_env_crefs_chiln_text_op(refs,env_refs,crefs,doc_node_refs[])","dynamic_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f doc-node-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/doc-node-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/doc-node-code.sql-out-err /home/greg/.Wicci/Make/wicci1/doc-node-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                              set_file                               
---------------------------------------------------------------------
 schema doc-node-code.sql, module doc-node-code, revision $Id, id 78
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
          type_class_out          
----------------------------------
 nil_doc_node_text(doc_node_refs)
(1 row)

                    type_class_op_method                     
-------------------------------------------------------------
 (28,"ref_text_op(refs)","nil_doc_node_text(doc_node_refs)")
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
                                       type_class_op_method                                        
---------------------------------------------------------------------------------------------------
 (29,"ref_env_crefs_text_op(refs,env_refs,crefs)","graft_node_text(doc_node_refs,env_refs,crefs)")
(1 row)

                                       type_class_op_method                                       
--------------------------------------------------------------------------------------------------
 (30,"ref_env_crefs_text_op(refs,env_refs,crefs)","tree_node_text(doc_node_refs,env_refs,crefs)")
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f doc-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/doc-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/doc-code.sql-out-err /home/greg/.Wicci/Make/wicci1/doc-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                         set_file                          
-----------------------------------------------------------
 schema doc-code.sql, module doc-code, revision $Id, id 79
(1 row)

CREATE FUNCTION
                 type_class_op_method                  
-------------------------------------------------------
 (31,"ref_text_op(refs)","nil_ref_doc_text(doc_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
                                    type_class_op_method                                    
--------------------------------------------------------------------------------------------
 (32,"ref_env_crefs_text_op(refs,env_refs,crefs)","tree_doc_text(doc_refs,env_refs,crefs)")
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
                                      type_class_op_method                                       
-------------------------------------------------------------------------------------------------
 (33,"ref_env_crefs_text_op(refs,env_refs,crefs)","changeset_doc_text(doc_refs,env_refs,crefs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
       test_func       
-----------------------
 xfiles_page_uri(text)
(1 row)

       test_func       
-----------------------
 xfiles_page_uri(text)
(1 row)

       test_func       
-----------------------
 xfiles_page_uri(text)
(1 row)

       test_func       
-----------------------
 xfiles_page_uri(text)
(1 row)

CREATE FUNCTION
COMMENT
psql:doc-code.sql:512: WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Entity-Icon/friend-kas.jpg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
              test_func              
-------------------------------------
 page_uri_xfiles_path(page_uri_refs)
(1 row)

psql:doc-code.sql:518: WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/JS/JS/cci.js file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
              test_func              
-------------------------------------
 page_uri_xfiles_path(page_uri_refs)
(1 row)

CREATE FUNCTION
COMMENT
psql:doc-code.sql:551: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env_doc(env_refs)
RETURNS doc_refs LANGUAGE SQL STABLE STRICT AS
'SELECT try_doc( env_name_value( $1, ''env_doc''))';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-code.sql:551: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env_doc(env_refs) IS
'try_env_doc(): lookup value associated with name env_doc in given environment and return as value of type doc_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-code.sql:551: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_doc(env_refs)
RETURNS doc_refs LANGUAGE SQL STABLE AS
'SELECT non_null(try_env_doc( $1),''env_doc(env_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-code.sql:551: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_doc(env_refs) IS
'env_doc(): lookup value associated with name env_doc in given environment and return as value of type doc_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-code.sql:551: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_doc(env_refs, doc_refs)
RETURNS env_pair_stati LANGUAGE SQL  AS
'	SELECT env_add_binding( $1, ''env_doc''::name_refs, $2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-code.sql:551: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_doc(env_refs,doc_refs) IS
's4_doc.env_doc(): associate name env_doc in given environment with value of type doc_refs and return the status by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_env_name_type_func  
----------------------------
 env_doc(env_refs,doc_refs)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f doc-page-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/doc-page-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/doc-page-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/doc-page-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                           set_file                            
---------------------------------------------------------------
 schema doc-schema.sql, module doc-schema, revision $Id, id 76
(1 row)

psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE doc_page_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: created shell type doc_page_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION doc_page_refs_in_op(cstring,oid,integer)
RETURNS doc_page_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  42809: return type doc_page_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:doc-page-schema.sql:17: NOTICE:  00000: CREATED doc_page_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION doc_page_refs_out_op(doc_page_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  42809: argument type doc_page_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:doc-page-schema.sql:17: NOTICE:  00000: CREATED doc_page_refs_out_op(doc_page_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE doc_page_refs (
  INPUT = doc_page_refs_in_op,
  OUTPUT = doc_page_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: WARNING:  42P17: type input function doc_page_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:doc-page-schema.sql:17: WARNING:  42P17: type output function doc_page_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:doc-page-schema.sql:17: NOTICE:  00000: CREATE TYPE doc_page_refs (
  INPUT = doc_page_refs_in_op,
  OUTPUT = doc_page_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS doc_page_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS doc_page_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (doc_page_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (doc_page_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (doc_page_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (doc_page_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_page_refs_cmp(doc_page_refs, doc_page_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_page_refs_cmp(doc_page_refs,doc_page_refs) IS
'doc_page_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_page_refs_lt(doc_page_refs, doc_page_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_page_refs_lt(doc_page_refs,doc_page_refs) IS
'doc_page_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = doc_page_refs,
	 rightarg = doc_page_refs,
	 procedure = doc_page_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_page_refs_le(doc_page_refs, doc_page_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_page_refs_le(doc_page_refs,doc_page_refs) IS
'doc_page_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = doc_page_refs,
	 rightarg = doc_page_refs,
	 procedure = doc_page_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_page_refs_eq(doc_page_refs, doc_page_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_page_refs_eq(doc_page_refs,doc_page_refs) IS
'doc_page_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = doc_page_refs,
	 rightarg = doc_page_refs,
	 procedure = doc_page_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_page_refs_neq(doc_page_refs, doc_page_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_page_refs_neq(doc_page_refs,doc_page_refs) IS
'doc_page_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = doc_page_refs,
	 rightarg = doc_page_refs,
	 procedure = doc_page_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_page_refs_ge(doc_page_refs, doc_page_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_page_refs_ge(doc_page_refs,doc_page_refs) IS
'doc_page_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = doc_page_refs,
	 rightarg = doc_page_refs,
	 procedure = doc_page_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_page_refs_gt(doc_page_refs, doc_page_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_page_refs_gt(doc_page_refs,doc_page_refs) IS
'doc_page_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = doc_page_refs,
	 rightarg = doc_page_refs,
	 procedure = doc_page_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS doc_page_refs_ops
		DEFAULT FOR TYPE doc_page_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       doc_page_refs_cmp(doc_page_refs, doc_page_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 doc_page_refs
(1 row)

CREATE TABLE
COMMENT
COMMENT
COMMENT
psql:doc-page-schema.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_page_rows_37_exists(_ref doc_page_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM doc_page_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_page_rows_37_exists(doc_page_refs) IS
'doc_page_rows_37_exists(_ref): referential integrity test method for row of doc_page_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:38: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS doc_page_rows_no_update_trigger ON doc_page_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:38: NOTICE:  00000: trigger "doc_page_rows_no_update_trigger" for relation "doc_page_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:doc-page-schema.sql:38: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER doc_page_rows_no_update_trigger
  BEFORE UPDATE ON doc_page_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_doc_page_from_id(ref_ids)
RETURNS doc_page_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''doc_page_refs'', ''doc_page_rows'', $1
	)::doc_page_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_doc_page_from_id(ref_ids) IS
'unchecked_doc_page_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION doc_page_nil()
RETURNS doc_page_refs LANGUAGE SQL  AS
'	SELECT unchecked_doc_page_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION doc_page_nil() IS
'doc_page_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_doc_page(_ref refs)
RETURNS doc_page_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM doc_page_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:doc-page-schema.sql:38: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_doc_page(refs) IS
'try_doc_page(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                      declare_ref_class_with_funcs                       
-------------------------------------------------------------------------
 {unchecked_doc_page_from_id(ref_ids),doc_page_nil(),try_doc_page(refs)}
(1 row)

INSERT 0 1
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f doc-page-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/doc-page-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/doc-page-code.sql-out-err /home/greg/.Wicci/Make/wicci1/doc-page-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                         set_file                          
-----------------------------------------------------------
 schema doc-code.sql, module doc-code, revision $Id, id 79
(1 row)

CREATE FUNCTION
COMMENT
psql:doc-page-code.sql:28: NOTICE:  00000: cast from type doc_page_refs to type page_uri_refs does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP CAST
CREATE CAST
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
   type_class_in    
--------------------
 try_doc_page(text)
(1 row)

        type_class_out        
------------------------------
 doc_page_text(doc_page_refs)
(1 row)

                  type_class_op_method                   
---------------------------------------------------------
 (37,"ref_text_op(refs)","doc_page_text(doc_page_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f doc-ready.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/doc-ready.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/doc-ready.sql-out-err /home/greg/.Wicci/Make/wicci1/doc-ready.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                          set_file                           
-------------------------------------------------------------
 schema doc-ready.sql, module doc-ready, revision $Id, id 80
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f doc-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/doc-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/doc-test.sql-out-err /home/greg/.Wicci/Make/wicci1/doc-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                  set_file                   
---------------------------------------------
 schema doc-test.sql, module doc-test, id 81
(1 row)

-- SELECT spx_debug_set(2);
-- SELECT refs_debug_set(2);
-- SELECT ctext_debug_set(2);
-- select refs_debug_on();
-- * doc tests
-- ** create and test a document tree with one node
SELECT declare_name('doc-1-root');
 declare_name 
--------------
            1
(1 row)

SELECT COALESCE(
	doc_keys_key('doc-1'),
	doc_keys_key('doc-1', new_tree_doc( COALESCE(
		doc_node_keys_key('doc-1-root'),
		doc_node_keys_key( 'doc-1-root', new_tree_node(
			show1_kind('doc-1-root'::name_refs)
		) )
	) ) )
);
         coalesce         
--------------------------
 doc_refs:tree_doc_rows:1
(1 row)

SELECT test_func(
	'new_tree_doc(doc_node_refs,doc_lang_name_refs)',
	tree_doc_text( doc_keys_key( 'doc-1') ),
	$$doc-1-root$$
);
                   test_func                    
------------------------------------------------
 new_tree_doc(doc_node_refs,doc_lang_name_refs)
(1 row)

-- ** create and test a graft node and changeset document
SELECT declare_name('doc-1-root-graft');
 declare_name 
--------------
            1
(1 row)

SELECT test_func(
	'graft_node(doc_node_refs, doc_node_kind_refs, doc_node_refs[])',
	graft_node_text( COALESCE(
		doc_node_keys_key('doc-1-root-graft'),
		doc_node_keys_key( 'doc-1-root-graft',
			graft_node(
				doc_node_keys_key('doc-1-root'),
				show1_kind('doc-1-root-graft'::name_refs)
			)
		)
	) ),
	$$doc-1-root-graft$$
);
                          test_func                           
--------------------------------------------------------------
 graft_node(doc_node_refs,doc_node_kind_refs,doc_node_refs[])
(1 row)

SELECT test_func(
	'get_changeset_doc(doc_refs, doc_node_refs[])',
	changeset_doc_text( COALESCE(
		doc_keys_key('doc-1-root-graft'),
		doc_keys_key('doc-1-root-graft',
			get_changeset_doc(
				doc_keys_key('doc-1'),
				doc_node_keys_key('doc-1-root-graft')
			)
		)
	) ),
	$$doc-1-root-graft$$
);
                  test_func                  
---------------------------------------------
 get_changeset_doc(doc_refs,doc_node_refs[])
(1 row)

-- SELECT refs_debug_set(1);
-- ** create and test a three-level document tree
SELECT declare_name('doc-3-root', '1', '2', '2.1', '3', '3.1', '3.1.1');
 declare_name 
--------------
            7
(1 row)

SELECT test_func_tokens(
	'new_tree_node(doc_node_kind_refs, doc_node_refs[])',
	tree_doc_text( COALESCE(
		doc_keys_key( 'doc-3'),
		doc_keys_key( 'doc-3', new_tree_doc( COALESCE(
			doc_node_keys_key('doc-3-root'),
			doc_node_keys_key( 'doc-3-root', new_tree_node(
				show1_kind('doc-3-root'::name_refs),
				doc_node_keys_key( '1', new_tree_node(
					show1_kind(find_name('1'))
				) ),
				doc_node_keys_key( '2', new_tree_node(
					show1_kind(find_name('2')),
					doc_node_keys_key( '2.1', new_tree_node(
						show1_kind(find_name('2.1'))
					) )
				) ),
				doc_node_keys_key('3', new_tree_node(
					show1_kind(find_name('3')),
					doc_node_keys_key('3.1', new_tree_node(
						show1_kind(find_name('3.1')),
						doc_node_keys_key( '3.1.1', new_tree_node(
							show1_kind(find_name('3.1.1'))
						) )
					) )
				) )
			) )
		) ) )
	) ),
$$doc-3-root
 1
 2
  2.1
 3
  3.1
   3.1.1$$
);
                 test_func_tokens                  
---------------------------------------------------
 new_tree_node(doc_node_kind_refs,doc_node_refs[])
(1 row)

-- ** create and test some grafts and a changset on the larger tree
SELECT declare_name('3.2-new');
 declare_name 
--------------
            1
(1 row)

SELECT test_func(
	'new_tree_node(doc_node_kind_refs, doc_node_refs[])',
	tree_node_text( COALESCE(
		doc_node_keys_key('3.2'),
		doc_node_keys_key('3.2',
			new_tree_node(
				show1_kind('3.2-new'::name_refs)
			)
		) --  for grafting
	) ),
	'3.2-new'
);
                     test_func                     
---------------------------------------------------
 new_tree_node(doc_node_kind_refs,doc_node_refs[])
(1 row)

SELECT declare_name('3.1.1-graft');
 declare_name 
--------------
            1
(1 row)

SELECT COALESCE(
	doc_node_keys_key('3.1.1-graft'),
	doc_node_keys_key('3.1.1-graft',
		graft_node(
			doc_node_keys_key('3.1.1'),
			show1_kind('3.1.1-graft'::name_refs)
		)
	)
);
               coalesce               
--------------------------------------
 doc_node_refs:graft_doc_node_rows:11
(1 row)

SELECT test_func_tokens(
	'get_changeset_doc(doc_refs, doc_node_refs[])',
	changeset_doc_text( COALESCE(
		doc_keys_key('doc-3-root-graft'),
		doc_keys_key('doc-3-root-graft',
			get_changeset_doc(
				doc_keys_key('doc-3'),
				doc_node_keys_key( '3.1.1-graft')
			)
		)
	) ),
	$$doc-3-root
 1
 2
  2.1
 3
  3.1
   3.1.1-graft$$
);
              test_func_tokens               
---------------------------------------------
 get_changeset_doc(doc_refs,doc_node_refs[])
(1 row)

SELECT declare_name('3-graft');
 declare_name 
--------------
            1
(1 row)

SELECT COALESCE(
	doc_node_keys_key('3-graft'),
	doc_node_keys_key('3-graft',
		graft_node(
			doc_node_keys_key('3'),
			show1_kind('3-graft'::name_refs),
			doc_node_keys_key('3.1'),
			doc_node_keys_key('3.2')
		)
	)
);
               coalesce               
--------------------------------------
 doc_node_refs:graft_doc_node_rows:12
(1 row)

-- SELECT debug_on('changeset_doc_text(doc_refs, env_refs, crefs)', true);
-- SELECT debug_on('doc_node_keys_row(handles, doc_node_refs)', true);
-- SELECT debug_on('doc_node_keys_row(handles, doc_node_refs)', false);
SELECT test_func_tokens(
	'get_changeset_doc(doc_refs, doc_node_refs[])',
	changeset_doc_text( COALESCE(
		doc_keys_key('doc-3-root-2grafts'),
		doc_keys_key('doc-3-root-2grafts',
			get_changeset_doc(
				doc_keys_key('doc-3'),
				doc_node_keys_key( '3-graft'),
				doc_node_keys_key( '3.1.1-graft')
			)
		)
	) ),
	$$doc-3-root
 1
 2
  2.1
 3-graft
  3.1
   3.1.1-graft
  3.2-new$$
);
              test_func_tokens               
---------------------------------------------
 get_changeset_doc(doc_refs,doc_node_refs[])
(1 row)

-- * matching tests
CREATE OR REPLACE
FUNCTION all_graft_nodes() RETURNS doc_node_refs[] AS $$
  SELECT ARRAY(SELECT ref FROM graft_doc_node_rows)
$$ LANGUAGE sql;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION test_match_grafts_first(
  handles, grafts doc_node_refs[] = all_graft_nodes()
) RETURNS doc_node_refs AS $$
   SELECT match_grafts_first_( doc_node_keys_key($1), $2 );
$$ LANGUAGE sql;
CREATE FUNCTION
CREATE OR REPLACE FUNCTION test_match_grafts_left(
  handles, grafts doc_node_refs[] = all_graft_nodes()
) RETURNS doc_node_refs[] AS $$
   SELECT match_grafts_left_( doc_node_keys_key($1), $2 );
$$ LANGUAGE sql;
CREATE FUNCTION
-- ALL THIS CODE NEEDS TO BE AUTOMATICALLY TESTED!!!
SELECT *, doc_node_text(ref) FROM abstract_doc_node_rows
WHERE ref = test_match_grafts_first('3.1.1');
                 ref                  |                      kind                      | children | doc_node_text 
--------------------------------------+------------------------------------------------+----------+---------------
 doc_node_refs:graft_doc_node_rows:11 | doc_node_kind_refs:show1_doc_node_kind_rows:11 | {}       | 3.1.1-graft
(1 row)

SELECT *, doc_node_text(ref) FROM graft_doc_node_rows
WHERE origin = doc_node_keys_key('3.1.1');
                 ref                  |                      kind                      | children |               origin               | doc_node_text 
--------------------------------------+------------------------------------------------+----------+------------------------------------+---------------
 doc_node_refs:graft_doc_node_rows:11 | doc_node_kind_refs:show1_doc_node_kind_rows:11 | {}       | doc_node_refs:tree_doc_node_rows:6 | 3.1.1-graft
(1 row)

SELECT ref, doc_node_text(ref)
FROM
	abstract_doc_node_rows an,
	unnest(all_graft_nodes()) gn
WHERE an.ref = gn;
                 ref                  |  doc_node_text   
--------------------------------------+------------------
 doc_node_refs:graft_doc_node_rows:2  | doc-1-root-graft
 doc_node_refs:graft_doc_node_rows:11 | 3.1.1-graft
 doc_node_refs:graft_doc_node_rows:12 | 3-graft         +
                                      | 3.1             +
                                      | 3.1.1           +
                                      | 3.2-new
(3 rows)

SELECT ref, doc_node_text(ref)
FROM
	abstract_doc_node_rows an,
	unnest(test_match_grafts_left('3.1.1')) gn
WHERE an.ref = gn;
                 ref                  |  doc_node_text   
--------------------------------------+------------------
 doc_node_refs:graft_doc_node_rows:2  | doc-1-root-graft
 doc_node_refs:graft_doc_node_rows:12 | 3-graft         +
                                      | 3.1             +
                                      | 3.1.1           +
                                      | 3.2-new
(2 rows)

SELECT node, doc_node_text(node)
FROM doc_node_keys_key('1') node;
                node                | doc_node_text 
------------------------------------+---------------
 doc_node_refs:tree_doc_node_rows:3 | 1
(1 row)

SELECT *, doc_node_text(ref)
FROM graft_doc_node_rows
WHERE origin = doc_node_keys_key('1');
 ref | kind | children | origin | doc_node_text 
-----+------+----------+--------+---------------
(0 rows)

SELECT *, doc_node_text(ref)
FROM abstract_doc_node_rows
WHERE ref = test_match_grafts_first('1');
                ref                 |                     kind                      | children | doc_node_text 
------------------------------------+-----------------------------------------------+----------+---------------
 doc_node_refs:tree_doc_node_rows:3 | doc_node_kind_refs:show1_doc_node_kind_rows:4 | {}       | 1
(1 row)

SELECT ref, doc_node_text(ref)
FROM
	abstract_doc_node_rows an,
	unnest(all_graft_nodes()) gn
WHERE an.ref = gn;
                 ref                  |  doc_node_text   
--------------------------------------+------------------
 doc_node_refs:graft_doc_node_rows:2  | doc-1-root-graft
 doc_node_refs:graft_doc_node_rows:11 | 3.1.1-graft
 doc_node_refs:graft_doc_node_rows:12 | 3-graft         +
                                      | 3.1             +
                                      | 3.1.1           +
                                      | 3.2-new
(3 rows)

SELECT ref, doc_node_text(ref)
FROM
	abstract_doc_node_rows an,
	unnest(test_match_grafts_left('1')) gn
WHERE an.ref = gn;
                 ref                  |  doc_node_text   
--------------------------------------+------------------
 doc_node_refs:graft_doc_node_rows:2  | doc-1-root-graft
 doc_node_refs:graft_doc_node_rows:11 | 3.1.1-graft
 doc_node_refs:graft_doc_node_rows:12 | 3-graft         +
                                      | 3.1             +
                                      | 3.1.1           +
                                      | 3.2-new
(3 rows)

SELECT ref, doc_node_text(ref)
FROM match_grafts_first_(
	doc_node_keys_key('3.1.1'), all_graft_nodes()
) ref;
                 ref                  | doc_node_text 
--------------------------------------+---------------
 doc_node_refs:graft_doc_node_rows:11 | 3.1.1-graft
(1 row)

SELECT ref, doc_node_text(ref)
FROM unnest(
	match_grafts_left_(doc_node_keys_key('3.1.1'), all_graft_nodes())
) ref;
                 ref                  |  doc_node_text   
--------------------------------------+------------------
 doc_node_refs:graft_doc_node_rows:2  | doc-1-root-graft
 doc_node_refs:graft_doc_node_rows:12 | 3-graft         +
                                      | 3.1             +
                                      | 3.1.1           +
                                      | 3.2-new
(2 rows)

SELECT ref, doc_node_text(ref)
FROM match_grafts_first_(
	doc_node_keys_key('3.1.1'), no_doc_node_array()
) ref;
                ref                 | doc_node_text 
------------------------------------+---------------
 doc_node_refs:tree_doc_node_rows:6 | 3.1.1
(1 row)

SELECT ref, doc_node_text(ref)
FROM match_grafts_first_(
	doc_node_keys_key('doc-3-root'), no_doc_node_array()
) ref;
                ref                 | doc_node_text 
------------------------------------+---------------
 doc_node_refs:tree_doc_node_rows:9 | doc-3-root   +
                                    | 1            +
                                    | 2            +
                                    | 2.1          +
                                    | 3            +
                                    | 3.1          +
                                    | 3.1.1
(1 row)

SELECT ref, doc_node_text(ref)
FROM doc_node_keys_key('doc-3-root') ref;
                ref                 | doc_node_text 
------------------------------------+---------------
 doc_node_refs:tree_doc_node_rows:9 | doc-3-root   +
                                    | 1            +
                                    | 2            +
                                    | 2.1          +
                                    | 3            +
                                    | 3.1          +
                                    | 3.1.1
(1 row)

SELECT array_is_empty('{}'::integer[]);
 array_is_empty 
----------------
 t
(1 row)

SELECT ref, doc_node_text(ref)
FROM find_by_path(
	doc_node_keys_key('doc-3-root'), '{}'::integer[]
) ref;
                ref                 | doc_node_text 
------------------------------------+---------------
 doc_node_refs:tree_doc_node_rows:9 | doc-3-root   +
                                    | 1            +
                                    | 2            +
                                    | 2.1          +
                                    | 3            +
                                    | 3.1          +
                                    | 3.1.1
(1 row)

SELECT ref, doc_node_text(ref)
FROM find_by_path(
	doc_node_keys_key('doc-3-root'), '{}'::integer[], all_graft_nodes()
) ref;
                ref                 | doc_node_text 
------------------------------------+---------------
 doc_node_refs:tree_doc_node_rows:9 | doc-3-root   +
                                    | 1            +
                                    | 2            +
                                    | 2.1          +
                                    | 3            +
                                    | 3.1          +
                                    | 3.1.1
(1 row)

SELECT ref, doc_node_text(ref)
FROM find_by_path(
	doc_node_keys_key('doc-3-root'), ARRAY[1]
) ref;
                ref                 | doc_node_text 
------------------------------------+---------------
 doc_node_refs:tree_doc_node_rows:3 | 1
(1 row)

SELECT ref, doc_node_text(ref)
FROM find_by_path(
	doc_node_keys_key('doc-3-root'), ARRAY[1], all_graft_nodes()
) ref;
                ref                 | doc_node_text 
------------------------------------+---------------
 doc_node_refs:tree_doc_node_rows:3 | 1
(1 row)

SELECT ref, doc_node_text(ref)
FROM find_by_path(
	doc_node_keys_key('doc-3-root'), ARRAY[1]
) ref;
                ref                 | doc_node_text 
------------------------------------+---------------
 doc_node_refs:tree_doc_node_rows:3 | 1
(1 row)

SELECT ref, doc_node_text(ref)
FROM find_by_path(
	doc_node_keys_key('doc-3-root'), ARRAY[1], all_graft_nodes()
) ref;
                ref                 | doc_node_text 
------------------------------------+---------------
 doc_node_refs:tree_doc_node_rows:3 | 1
(1 row)

SELECT ref, doc_node_text(ref)
FROM unnest(test_match_grafts_left('3.1.1')) ref;
                 ref                  |  doc_node_text   
--------------------------------------+------------------
 doc_node_refs:graft_doc_node_rows:2  | doc-1-root-graft
 doc_node_refs:graft_doc_node_rows:12 | 3-graft         +
                                      | 3.1             +
                                      | 3.1.1           +
                                      | 3.2-new
(2 rows)

SELECT handle, ref, doc_node_text(ref)
FROM doc_node_keys_row_handles, graft_doc_node_rows
WHERE key = origin;
   handle   |                 ref                  |  doc_node_text   
------------+--------------------------------------+------------------
 doc-1-root | doc_node_refs:graft_doc_node_rows:2  | doc-1-root-graft
 3.1.1      | doc_node_refs:graft_doc_node_rows:11 | 3.1.1-graft
 3          | doc_node_refs:graft_doc_node_rows:12 | 3-graft         +
            |                                      | 3.1             +
            |                                      | 3.1.1           +
            |                                      | 3.2-new
(3 rows)

SELECT handle, ref, doc_node_text(ref)
FROM doc_node_keys_row_handles, tree_doc_node_rows
WHERE key = ref;
   handle   |                 ref                 | doc_node_text 
------------+-------------------------------------+---------------
 doc-1-root | doc_node_refs:tree_doc_node_rows:1  | doc-1-root
 1          | doc_node_refs:tree_doc_node_rows:3  | 1
 2.1        | doc_node_refs:tree_doc_node_rows:4  | 2.1
 2          | doc_node_refs:tree_doc_node_rows:5  | 2            +
            |                                     | 2.1
 3.1.1      | doc_node_refs:tree_doc_node_rows:6  | 3.1.1
 3.1        | doc_node_refs:tree_doc_node_rows:7  | 3.1          +
            |                                     | 3.1.1
 3          | doc_node_refs:tree_doc_node_rows:8  | 3            +
            |                                     | 3.1          +
            |                                     | 3.1.1
 doc-3-root | doc_node_refs:tree_doc_node_rows:9  | doc-3-root   +
            |                                     | 1            +
            |                                     | 2            +
            |                                     | 2.1          +
            |                                     | 3            +
            |                                     | 3.1          +
            |                                     | 3.1.1
 3.2        | doc_node_refs:tree_doc_node_rows:10 | 3.2-new
(9 rows)

SELECT array_length(
	ARRAY(SELECT ref FROM graft_doc_node_rows)
);
 array_length 
--------------
            3
(1 row)

SELECT *, doc_node_text(ref) FROM graft_doc_node_rows
WHERE ref = match_grafts_first_(
  doc_node_keys_key('doc-1-root'),
	ARRAY(SELECT ref FROM graft_doc_node_rows)
);
                 ref                 |                     kind                      | children |               origin               |  doc_node_text   
-------------------------------------+-----------------------------------------------+----------+------------------------------------+------------------
 doc_node_refs:graft_doc_node_rows:2 | doc_node_kind_refs:show1_doc_node_kind_rows:2 | {}       | doc_node_refs:tree_doc_node_rows:1 | doc-1-root-graft
(1 row)

SELECT *, doc_node_text(ref) FROM tree_doc_node_rows
WHERE ref = match_grafts_first_(
  doc_node_keys_key('1'),
	ARRAY(SELECT ref FROM graft_doc_node_rows)
);
                ref                 |                     kind                      | children | doc_node_text 
------------------------------------+-----------------------------------------------+----------+---------------
 doc_node_refs:tree_doc_node_rows:3 | doc_node_kind_refs:show1_doc_node_kind_rows:4 | {}       | 1
(1 row)

SELECT *, doc_node_text(ref) FROM graft_doc_node_rows
WHERE ref = match_grafts_first_(
  doc_node_keys_key('3.1.1'),
	ARRAY(SELECT ref FROM graft_doc_node_rows)
);
                 ref                  |                      kind                      | children |               origin               | doc_node_text 
--------------------------------------+------------------------------------------------+----------+------------------------------------+---------------
 doc_node_refs:graft_doc_node_rows:11 | doc_node_kind_refs:show1_doc_node_kind_rows:11 | {}       | doc_node_refs:tree_doc_node_rows:6 | 3.1.1-graft
(1 row)

SELECT  array_length( ARRAY(SELECT ref FROM graft_doc_node_rows) );
 array_length 
--------------
            3
(1 row)

SELECT * FROM
	graft_doc_node_rows,
	unnest( match_grafts_left_(
		doc_node_keys_key('3.1.1'),
		ARRAY(SELECT ref FROM graft_doc_node_rows)
	) ) x
WHERE ref = x;
                 ref                  |                      kind                      |                                 children                                 |               origin               |                  x                   
--------------------------------------+------------------------------------------------+--------------------------------------------------------------------------+------------------------------------+--------------------------------------
 doc_node_refs:graft_doc_node_rows:2  | doc_node_kind_refs:show1_doc_node_kind_rows:2  | {}                                                                       | doc_node_refs:tree_doc_node_rows:1 | doc_node_refs:graft_doc_node_rows:2
 doc_node_refs:graft_doc_node_rows:12 | doc_node_kind_refs:show1_doc_node_kind_rows:12 | {doc_node_refs:tree_doc_node_rows:7,doc_node_refs:tree_doc_node_rows:10} | doc_node_refs:tree_doc_node_rows:8 | doc_node_refs:graft_doc_node_rows:12
(2 rows)

SELECT *, doc_node_text(ref) FROM graft_doc_node_rows
WHERE ref = match_grafts_first_(
  doc_node_keys_key('3.1.1'),
  match_grafts_left_(
		doc_node_keys_key('3.1.1'),
		ARRAY(SELECT ref FROM graft_doc_node_rows)
	)
);
 ref | kind | children | origin | doc_node_text 
-----+------+----------+--------+---------------
(0 rows)

SELECT *, doc_node_text(ref) FROM graft_doc_node_rows
WHERE ref = ANY( match_grafts_left_(
  doc_node_keys_key('3.1.1'),
	ARRAY(SELECT ref FROM graft_doc_node_rows)
) );
                 ref                  |                      kind                      |                                 children                                 |               origin               |  doc_node_text   
--------------------------------------+------------------------------------------------+--------------------------------------------------------------------------+------------------------------------+------------------
 doc_node_refs:graft_doc_node_rows:2  | doc_node_kind_refs:show1_doc_node_kind_rows:2  | {}                                                                       | doc_node_refs:tree_doc_node_rows:1 | doc-1-root-graft
 doc_node_refs:graft_doc_node_rows:12 | doc_node_kind_refs:show1_doc_node_kind_rows:12 | {doc_node_refs:tree_doc_node_rows:7,doc_node_refs:tree_doc_node_rows:10} | doc_node_refs:tree_doc_node_rows:8 | 3-graft         +
                                      |                                                |                                                                          |                                    | 3.1             +
                                      |                                                |                                                                          |                                    | 3.1.1           +
                                      |                                                |                                                                          |                                    | 3.2-new
(2 rows)

/*
-- no function doc_node_matches !!
-- what was the original intent ??
SELECT ref, doc_node_text(ref)
FROM doc_node_matches(
	doc_node_keys_key('3.1.1'),
	ARRAY(SELECT ref FROM graft_doc_node_rows)
) ref;
*/
/*
-- no function doc_node_match !!
-- what was the original intent ??
SELECT ref, doc_node_text(ref)
FROM doc_node_match(
	doc_node_keys_key('3'),
	ARRAY(SELECT ref FROM graft_doc_node_rows)
) ref;

SELECT doc_node_match(
	doc_node_keys_key('xyzzy'),
	ARRAY(SELECT ref FROM graft_doc_node_rows)
) IS NULL;
*/
SELECT array_length( match_grafts_left_(
	doc_node_keys_key('3.1.1'),
	ARRAY(SELECT ref FROM graft_doc_node_rows)
) );
 array_length 
--------------
            2
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f s4-doc.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/s4-doc.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/s4-doc.sql-out-err /home/greg/.Wicci/Make/wicci1/s4-doc.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                set_schema_path                 
------------------------------------------------
 {s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                       set_file                        
-------------------------------------------------------
 schema s4-doc.sql, module s4-doc, revision $Id, id 82
(1 row)

make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S4_doc'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S5_xml'
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-types.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-types.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-types.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-types.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
psql:settings.sql:8: NOTICE:  00000: 
---> META declare_system_schema(text)
CREATE SCHEMA s5_xml
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

psql:xml-types.sql:3: NOTICE:  00000: new_schema_name_id(schema_names) s5_xml ->  17 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                          set_file                           
-------------------------------------------------------------
 schema xml-types.sql, module xml-types, revision $Id, id 83
(1 row)

psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE xml_prefix_name_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: created shell type xml_prefix_name_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_prefix_name_refs_in_op(cstring,oid,integer)
RETURNS xml_prefix_name_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  42809: return type xml_prefix_name_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:xml-types.sql:18: NOTICE:  00000: CREATED xml_prefix_name_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_prefix_name_refs_out_op(xml_prefix_name_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  42809: argument type xml_prefix_name_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:xml-types.sql:18: NOTICE:  00000: CREATED xml_prefix_name_refs_out_op(xml_prefix_name_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE xml_prefix_name_refs (
  INPUT = xml_prefix_name_refs_in_op,
  OUTPUT = xml_prefix_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: WARNING:  42P17: type input function xml_prefix_name_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:xml-types.sql:18: WARNING:  42P17: type output function xml_prefix_name_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:xml-types.sql:18: NOTICE:  00000: CREATE TYPE xml_prefix_name_refs (
  INPUT = xml_prefix_name_refs_in_op,
  OUTPUT = xml_prefix_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS xml_prefix_name_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS xml_prefix_name_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_prefix_name_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_prefix_name_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_prefix_name_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_prefix_name_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_prefix_name_refs_cmp(xml_prefix_name_refs, xml_prefix_name_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_prefix_name_refs_cmp(xml_prefix_name_refs,xml_prefix_name_refs) IS
'xml_prefix_name_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_prefix_name_refs_lt(xml_prefix_name_refs, xml_prefix_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_prefix_name_refs_lt(xml_prefix_name_refs,xml_prefix_name_refs) IS
'xml_prefix_name_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = xml_prefix_name_refs,
	 rightarg = xml_prefix_name_refs,
	 procedure = xml_prefix_name_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_prefix_name_refs_le(xml_prefix_name_refs, xml_prefix_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_prefix_name_refs_le(xml_prefix_name_refs,xml_prefix_name_refs) IS
'xml_prefix_name_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = xml_prefix_name_refs,
	 rightarg = xml_prefix_name_refs,
	 procedure = xml_prefix_name_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_prefix_name_refs_eq(xml_prefix_name_refs, xml_prefix_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_prefix_name_refs_eq(xml_prefix_name_refs,xml_prefix_name_refs) IS
'xml_prefix_name_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = xml_prefix_name_refs,
	 rightarg = xml_prefix_name_refs,
	 procedure = xml_prefix_name_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_prefix_name_refs_neq(xml_prefix_name_refs, xml_prefix_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_prefix_name_refs_neq(xml_prefix_name_refs,xml_prefix_name_refs) IS
'xml_prefix_name_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = xml_prefix_name_refs,
	 rightarg = xml_prefix_name_refs,
	 procedure = xml_prefix_name_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_prefix_name_refs_ge(xml_prefix_name_refs, xml_prefix_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_prefix_name_refs_ge(xml_prefix_name_refs,xml_prefix_name_refs) IS
'xml_prefix_name_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = xml_prefix_name_refs,
	 rightarg = xml_prefix_name_refs,
	 procedure = xml_prefix_name_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_prefix_name_refs_gt(xml_prefix_name_refs, xml_prefix_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_prefix_name_refs_gt(xml_prefix_name_refs,xml_prefix_name_refs) IS
'xml_prefix_name_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = xml_prefix_name_refs,
	 rightarg = xml_prefix_name_refs,
	 procedure = xml_prefix_name_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS xml_prefix_name_refs_ops
		DEFAULT FOR TYPE xml_prefix_name_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       xml_prefix_name_refs_cmp(xml_prefix_name_refs, xml_prefix_name_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE xml_prefix_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE xml_prefix_name_rows (
	ref xml_prefix_name_refs PRIMARY KEY,
	name_ text NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE xml_prefix_name_rows IS
' - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_prefix_name_rows_38_exists(_ref xml_prefix_name_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_prefix_name_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_prefix_name_rows_38_exists(xml_prefix_name_refs) IS
'xml_prefix_name_rows_38_exists(_ref): referential integrity test method for row of xml_prefix_name_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_xml_prefix_name_from_id(ref_ids)
RETURNS xml_prefix_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''xml_prefix_name_refs'', ''xml_prefix_name_rows'', $1
	)::xml_prefix_name_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_xml_prefix_name_from_id(ref_ids) IS
'unchecked_xml_prefix_name_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_prefix_name_nil()
RETURNS xml_prefix_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_xml_prefix_name_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_prefix_name_nil() IS
'xml_prefix_name_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_name_ref_schema(text,boolean,boolean,regtype,regprocedure,text)
INSERT INTO xml_prefix_name_rows (ref, name_) VALUES( xml_prefix_name_nil(), '')
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_prefix_name_rows_no_update_trigger ON xml_prefix_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: trigger "xml_prefix_name_rows_no_update_trigger" for relation "xml_prefix_name_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-types.sql:18: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_prefix_name_rows_no_update_trigger
  BEFORE UPDATE ON xml_prefix_name_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_prefix_name(_ref refs)
RETURNS xml_prefix_name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM xml_prefix_name_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_prefix_name(refs) IS
'try_xml_prefix_name(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_prefix_name_text(xml_prefix_name_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM xml_prefix_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_prefix_name_text(xml_prefix_name_refs) IS
'try_xml_prefix_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_prefix_name_text(xml_prefix_name_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_xml_prefix_name_text( $1),''xml_prefix_name_text(xml_prefix_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_prefix_name_text(xml_prefix_name_refs) IS
'xml_prefix_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_prefix_name_length(xml_prefix_name_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM xml_prefix_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_prefix_name_length(xml_prefix_name_refs) IS
'try_xml_prefix_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_prefix_name_length(xml_prefix_name_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_xml_prefix_name_length( $1),''xml_prefix_name_length(xml_prefix_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_prefix_name_length(xml_prefix_name_refs) IS
'xml_prefix_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_prefix_name(text)
RETURNS xml_prefix_name_refs LANGUAGE SQL  STRICT AS
'SELECT CASE
	WHEN $1 = '''' THEN xml_prefix_name_nil()
	ELSE ( SELECT ref FROM xml_prefix_name_rows WHERE name_ = $1 )
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_prefix_name(text) IS
's5_xml.try_xml_prefix_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_xml_prefix_name(text)
RETURNS xml_prefix_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_xml_prefix_name( $1),''find_xml_prefix_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_xml_prefix_name(text) IS
'find_xml_prefix_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_prefix_name_in(text)
RETURNS xml_prefix_name_refs LANGUAGE SQL  AS
'SELECT COALESCE(s5_xml.try_xml_prefix_name($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_prefix_name_in(text) IS
'try_xml_prefix_name_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE xml_prefix_name_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE xml_prefix_name_seq OWNED BY xml_prefix_name_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_xml_prefix_name_ref()
RETURNS xml_prefix_name_refs LANGUAGE SQL  AS
'SELECT unchecked_xml_prefix_name_from_id(nextval(''xml_prefix_name_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_xml_prefix_name_ref() IS
'next_xml_prefix_name_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE xml_prefix_name_rows ALTER COLUMN ref SET DEFAULT next_xml_prefix_name_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_xml_prefix_name(text)
RETURNS xml_prefix_name_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name text := $1;
	maybe xml_prefix_name_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_xml_prefix_name(text)'';
BEGIN
	 IF _name IS NULL THEN RETURN xml_prefix_name_nil(); END IF;
	
	LOOP
		maybe := try_xml_prefix_name(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO xml_prefix_name_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_xml_prefix_name(text) IS
'try_get_xml_prefix_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_xml_prefix_name(text)
RETURNS xml_prefix_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_xml_prefix_name( $1),''get_xml_prefix_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_xml_prefix_name(text) IS
'get_xml_prefix_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_xml_prefix_name(VARIADIC text[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_xml_prefix_name(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:18: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_xml_prefix_name(text[]) IS
'declare_xml_prefix_name(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                                                      create_name_ref_schema                                                                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_xml_prefix_name_from_id(ref_ids),xml_prefix_name_nil(),try_xml_prefix_name(refs),xml_prefix_name_text(xml_prefix_name_refs),xml_prefix_name_length(xml_prefix_name_refs),find_xml_prefix_name(text),try_xml_prefix_name_in(text),next_xml_prefix_name_ref(),get_xml_prefix_name(text),declare_xml_prefix_name(text[])}
(1 row)

COMMENT
psql:xml-types.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env_namespace_prefix(env_refs)
RETURNS xml_prefix_name_refs LANGUAGE SQL STABLE STRICT AS
'SELECT try_xml_prefix_name( env_name_value( $1, ''env_namespace_prefix''))';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env_namespace_prefix(env_refs) IS
'try_env_namespace_prefix(): lookup value associated with name env_namespace_prefix in given environment and return as value of type xml_prefix_name_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_namespace_prefix(env_refs)
RETURNS xml_prefix_name_refs LANGUAGE SQL STABLE AS
'SELECT non_null(try_env_namespace_prefix( $1),''env_namespace_prefix(env_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_namespace_prefix(env_refs) IS
'env_namespace_prefix(): lookup value associated with name env_namespace_prefix in given environment and return as value of type xml_prefix_name_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_namespace_prefix(env_refs, xml_prefix_name_refs)
RETURNS env_pair_stati LANGUAGE SQL  AS
'	SELECT env_add_binding( $1, ''env_namespace_prefix''::name_refs, $2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:26: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_namespace_prefix(env_refs,xml_prefix_name_refs) IS
's5_xml.env_namespace_prefix(): associate name env_namespace_prefix in given environment with value of type xml_prefix_name_refs and return the status by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
              create_env_name_type_func              
-----------------------------------------------------
 env_namespace_prefix(env_refs,xml_prefix_name_refs)
(1 row)

psql:xml-types.sql:30: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env_namespace_uri(env_refs)
RETURNS page_uri_refs LANGUAGE SQL STABLE STRICT AS
'SELECT try_page_uri( env_name_value( $1, ''env_namespace_uri''))';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:30: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env_namespace_uri(env_refs) IS
'try_env_namespace_uri(): lookup value associated with name env_namespace_uri in given environment and return as value of type page_uri_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:30: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_namespace_uri(env_refs)
RETURNS page_uri_refs LANGUAGE SQL STABLE AS
'SELECT non_null(try_env_namespace_uri( $1),''env_namespace_uri(env_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:30: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_namespace_uri(env_refs) IS
'env_namespace_uri(): lookup value associated with name env_namespace_uri in given environment and return as value of type page_uri_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:30: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_namespace_uri(env_refs, page_uri_refs)
RETURNS env_pair_stati LANGUAGE SQL  AS
'	SELECT env_add_binding( $1, ''env_namespace_uri''::name_refs, $2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:30: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_namespace_uri(env_refs,page_uri_refs) IS
's5_xml.env_namespace_uri(): associate name env_namespace_uri in given environment with value of type page_uri_refs and return the status by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
         create_env_name_type_func         
-------------------------------------------
 env_namespace_uri(env_refs,page_uri_refs)
(1 row)

CREATE TABLE
psql:xml-types.sql:38: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS xml_prefix_uri_pairs_abstract_trigger ON xml_prefix_uri_pairs CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types.sql:38: NOTICE:  00000: trigger "xml_prefix_uri_pairs_abstract_trigger" for relation "xml_prefix_uri_pairs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-types.sql:38: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER xml_prefix_uri_pairs_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON xml_prefix_uri_pairs
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   declare_abstract   
----------------------
 xml_prefix_uri_pairs
(1 row)

COMMENT
CREATE TABLE
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-types-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-types-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-types-code.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-types-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                               set_file                                
-----------------------------------------------------------------------
 schema xml-types-code.sql, module xml-types-code, revision $Id, id 84
(1 row)

 declare_name 
--------------
            1
(1 row)

psql:xml-types-code.sql:22: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env_xml_kind_type(env_refs)
RETURNS name_refs LANGUAGE SQL STABLE STRICT AS
'SELECT try_name( env_name_value( $1, ''env_xml_kind_type''))';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types-code.sql:22: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env_xml_kind_type(env_refs) IS
'try_env_xml_kind_type(): lookup value associated with name env_xml_kind_type in given environment and return as value of type name_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types-code.sql:22: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_xml_kind_type(env_refs)
RETURNS name_refs LANGUAGE SQL STABLE AS
'SELECT non_null(try_env_xml_kind_type( $1),''env_xml_kind_type(env_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types-code.sql:22: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_xml_kind_type(env_refs) IS
'env_xml_kind_type(): lookup value associated with name env_xml_kind_type in given environment and return as value of type name_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types-code.sql:22: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_xml_kind_type(env_refs, name_refs)
RETURNS env_pair_stati LANGUAGE SQL  AS
'	SELECT env_add_binding( $1, ''env_xml_kind_type''::name_refs, $2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-types-code.sql:22: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_xml_kind_type(env_refs,name_refs) IS
's5_xml.env_xml_kind_type(): associate name env_xml_kind_type in given environment with value of type name_refs and return the status by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
       create_env_name_type_func       
---------------------------------------
 env_xml_kind_type(env_refs,name_refs)
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
                                declare_op_fallback                                 
------------------------------------------------------------------------------------
 ("ref_env_crefs_xml_op(refs,env_refs,crefs)","xml_pure_text(refs,env_refs,crefs)")
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-qname-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-qname-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-qname-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-qname-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                 set_file                                  
---------------------------------------------------------------------------
 schema xml-qname-schema.sql, module xml-qname-schema, revision $Id, id 85
(1 row)

psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE xml_qname_name_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: created shell type xml_qname_name_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_qname_name_refs_in_op(cstring,oid,integer)
RETURNS xml_qname_name_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  42809: return type xml_qname_name_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:xml-qname-schema.sql:21: NOTICE:  00000: CREATED xml_qname_name_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_qname_name_refs_out_op(xml_qname_name_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  42809: argument type xml_qname_name_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:xml-qname-schema.sql:21: NOTICE:  00000: CREATED xml_qname_name_refs_out_op(xml_qname_name_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE xml_qname_name_refs (
  INPUT = xml_qname_name_refs_in_op,
  OUTPUT = xml_qname_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: WARNING:  42P17: type input function xml_qname_name_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:xml-qname-schema.sql:21: WARNING:  42P17: type output function xml_qname_name_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:xml-qname-schema.sql:21: NOTICE:  00000: CREATE TYPE xml_qname_name_refs (
  INPUT = xml_qname_name_refs_in_op,
  OUTPUT = xml_qname_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS xml_qname_name_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS xml_qname_name_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_qname_name_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_qname_name_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_qname_name_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_qname_name_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_name_refs_cmp(xml_qname_name_refs, xml_qname_name_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_name_refs_cmp(xml_qname_name_refs,xml_qname_name_refs) IS
'xml_qname_name_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_name_refs_lt(xml_qname_name_refs, xml_qname_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_name_refs_lt(xml_qname_name_refs,xml_qname_name_refs) IS
'xml_qname_name_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = xml_qname_name_refs,
	 rightarg = xml_qname_name_refs,
	 procedure = xml_qname_name_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_name_refs_le(xml_qname_name_refs, xml_qname_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_name_refs_le(xml_qname_name_refs,xml_qname_name_refs) IS
'xml_qname_name_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = xml_qname_name_refs,
	 rightarg = xml_qname_name_refs,
	 procedure = xml_qname_name_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_name_refs_eq(xml_qname_name_refs, xml_qname_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_name_refs_eq(xml_qname_name_refs,xml_qname_name_refs) IS
'xml_qname_name_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = xml_qname_name_refs,
	 rightarg = xml_qname_name_refs,
	 procedure = xml_qname_name_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_name_refs_neq(xml_qname_name_refs, xml_qname_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_name_refs_neq(xml_qname_name_refs,xml_qname_name_refs) IS
'xml_qname_name_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = xml_qname_name_refs,
	 rightarg = xml_qname_name_refs,
	 procedure = xml_qname_name_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_name_refs_ge(xml_qname_name_refs, xml_qname_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_name_refs_ge(xml_qname_name_refs,xml_qname_name_refs) IS
'xml_qname_name_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = xml_qname_name_refs,
	 rightarg = xml_qname_name_refs,
	 procedure = xml_qname_name_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_name_refs_gt(xml_qname_name_refs, xml_qname_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_name_refs_gt(xml_qname_name_refs,xml_qname_name_refs) IS
'xml_qname_name_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = xml_qname_name_refs,
	 rightarg = xml_qname_name_refs,
	 procedure = xml_qname_name_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS xml_qname_name_refs_ops
		DEFAULT FOR TYPE xml_qname_name_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       xml_qname_name_refs_cmp(xml_qname_name_refs, xml_qname_name_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE xml_qname_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE xml_qname_name_rows (
	ref xml_qname_name_refs PRIMARY KEY,
	name_ text NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE xml_qname_name_rows IS
' - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_name_rows_39_exists(_ref xml_qname_name_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_qname_name_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_name_rows_39_exists(xml_qname_name_refs) IS
'xml_qname_name_rows_39_exists(_ref): referential integrity test method for row of xml_qname_name_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_xml_qname_name_from_id(ref_ids)
RETURNS xml_qname_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''xml_qname_name_refs'', ''xml_qname_name_rows'', $1
	)::xml_qname_name_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_xml_qname_name_from_id(ref_ids) IS
'unchecked_xml_qname_name_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_name_nil()
RETURNS xml_qname_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_xml_qname_name_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_name_nil() IS
'xml_qname_name_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_name_ref_schema(text,boolean,boolean,regtype,regprocedure,text)
INSERT INTO xml_qname_name_rows (ref, name_) VALUES( xml_qname_name_nil(), '')
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_qname_name_rows_no_update_trigger ON xml_qname_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: trigger "xml_qname_name_rows_no_update_trigger" for relation "xml_qname_name_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_qname_name_rows_no_update_trigger
  BEFORE UPDATE ON xml_qname_name_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_qname_name(_ref refs)
RETURNS xml_qname_name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM xml_qname_name_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_qname_name(refs) IS
'try_xml_qname_name(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_qname_name_text(xml_qname_name_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM xml_qname_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_qname_name_text(xml_qname_name_refs) IS
'try_xml_qname_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_name_text(xml_qname_name_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_xml_qname_name_text( $1),''xml_qname_name_text(xml_qname_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_name_text(xml_qname_name_refs) IS
'xml_qname_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_qname_name_length(xml_qname_name_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM xml_qname_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_qname_name_length(xml_qname_name_refs) IS
'try_xml_qname_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_name_length(xml_qname_name_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_xml_qname_name_length( $1),''xml_qname_name_length(xml_qname_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_name_length(xml_qname_name_refs) IS
'xml_qname_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_qname_name(text)
RETURNS xml_qname_name_refs LANGUAGE SQL  STRICT AS
'SELECT CASE
	WHEN $1 = '''' THEN xml_qname_name_nil()
	ELSE ( SELECT ref FROM xml_qname_name_rows WHERE name_ = $1 )
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_qname_name(text) IS
's5_xml.try_xml_qname_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_xml_qname_name(text)
RETURNS xml_qname_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_xml_qname_name( $1),''find_xml_qname_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_xml_qname_name(text) IS
'find_xml_qname_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_qname_name_in(text)
RETURNS xml_qname_name_refs LANGUAGE SQL  AS
'SELECT COALESCE(s5_xml.try_xml_qname_name($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_qname_name_in(text) IS
'try_xml_qname_name_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE xml_qname_name_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE xml_qname_name_seq OWNED BY xml_qname_name_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_xml_qname_name_ref()
RETURNS xml_qname_name_refs LANGUAGE SQL  AS
'SELECT unchecked_xml_qname_name_from_id(nextval(''xml_qname_name_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_xml_qname_name_ref() IS
'next_xml_qname_name_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE xml_qname_name_rows ALTER COLUMN ref SET DEFAULT next_xml_qname_name_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_xml_qname_name(text)
RETURNS xml_qname_name_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name text := $1;
	maybe xml_qname_name_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_xml_qname_name(text)'';
BEGIN
	 IF _name IS NULL THEN RETURN xml_qname_name_nil(); END IF;
	
	LOOP
		maybe := try_xml_qname_name(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO xml_qname_name_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_xml_qname_name(text) IS
'try_get_xml_qname_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_xml_qname_name(text)
RETURNS xml_qname_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_xml_qname_name( $1),''get_xml_qname_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_xml_qname_name(text) IS
'get_xml_qname_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_xml_qname_name(VARIADIC text[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_xml_qname_name(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_xml_qname_name(text[]) IS
'declare_xml_qname_name(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                                                create_name_ref_schema                                                                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_xml_qname_name_from_id(ref_ids),xml_qname_name_nil(),try_xml_qname_name(refs),xml_qname_name_text(xml_qname_name_refs),xml_qname_name_length(xml_qname_name_refs),find_xml_qname_name(text),try_xml_qname_name_in(text),next_xml_qname_name_ref(),get_xml_qname_name(text),declare_xml_qname_name(text[])}
(1 row)

psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE xml_qname_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: created shell type xml_qname_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_qname_refs_in_op(cstring,oid,integer)
RETURNS xml_qname_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  42809: return type xml_qname_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:xml-qname-schema.sql:23: NOTICE:  00000: CREATED xml_qname_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_qname_refs_out_op(xml_qname_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  42809: argument type xml_qname_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:xml-qname-schema.sql:23: NOTICE:  00000: CREATED xml_qname_refs_out_op(xml_qname_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE xml_qname_refs (
  INPUT = xml_qname_refs_in_op,
  OUTPUT = xml_qname_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: WARNING:  42P17: type input function xml_qname_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:xml-qname-schema.sql:23: WARNING:  42P17: type output function xml_qname_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:xml-qname-schema.sql:23: NOTICE:  00000: CREATE TYPE xml_qname_refs (
  INPUT = xml_qname_refs_in_op,
  OUTPUT = xml_qname_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS xml_qname_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS xml_qname_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_qname_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_qname_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_qname_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_qname_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_refs_cmp(xml_qname_refs, xml_qname_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_refs_cmp(xml_qname_refs,xml_qname_refs) IS
'xml_qname_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_refs_lt(xml_qname_refs, xml_qname_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_refs_lt(xml_qname_refs,xml_qname_refs) IS
'xml_qname_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = xml_qname_refs,
	 rightarg = xml_qname_refs,
	 procedure = xml_qname_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_refs_le(xml_qname_refs, xml_qname_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_refs_le(xml_qname_refs,xml_qname_refs) IS
'xml_qname_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = xml_qname_refs,
	 rightarg = xml_qname_refs,
	 procedure = xml_qname_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_refs_eq(xml_qname_refs, xml_qname_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_refs_eq(xml_qname_refs,xml_qname_refs) IS
'xml_qname_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = xml_qname_refs,
	 rightarg = xml_qname_refs,
	 procedure = xml_qname_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_refs_neq(xml_qname_refs, xml_qname_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_refs_neq(xml_qname_refs,xml_qname_refs) IS
'xml_qname_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = xml_qname_refs,
	 rightarg = xml_qname_refs,
	 procedure = xml_qname_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_refs_ge(xml_qname_refs, xml_qname_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_refs_ge(xml_qname_refs,xml_qname_refs) IS
'xml_qname_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = xml_qname_refs,
	 rightarg = xml_qname_refs,
	 procedure = xml_qname_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_refs_gt(xml_qname_refs, xml_qname_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_refs_gt(xml_qname_refs,xml_qname_refs) IS
'xml_qname_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = xml_qname_refs,
	 rightarg = xml_qname_refs,
	 procedure = xml_qname_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS xml_qname_refs_ops
		DEFAULT FOR TYPE xml_qname_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       xml_qname_refs_cmp(xml_qname_refs, xml_qname_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 xml_qname_refs
(1 row)

CREATE TABLE
COMMENT
COMMENT
psql:xml-qname-schema.sql:40: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_rows_40_exists(_ref xml_qname_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_qname_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:40: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_rows_40_exists(xml_qname_refs) IS
'xml_qname_rows_40_exists(_ref): referential integrity test method for row of xml_qname_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:40: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_qname_rows_no_update_trigger ON xml_qname_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:40: NOTICE:  00000: trigger "xml_qname_rows_no_update_trigger" for relation "xml_qname_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-qname-schema.sql:40: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_qname_rows_no_update_trigger
  BEFORE UPDATE ON xml_qname_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:40: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_xml_qname_from_id(ref_ids)
RETURNS xml_qname_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''xml_qname_refs'', ''xml_qname_rows'', $1
	)::xml_qname_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:40: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_xml_qname_from_id(ref_ids) IS
'unchecked_xml_qname_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:40: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_qname_nil()
RETURNS xml_qname_refs LANGUAGE SQL  AS
'	SELECT unchecked_xml_qname_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:40: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_qname_nil() IS
'xml_qname_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:40: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_qname(_ref refs)
RETURNS xml_qname_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM xml_qname_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:40: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_qname(refs) IS
'try_xml_qname(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                        declare_ref_class_with_funcs                        
----------------------------------------------------------------------------
 {unchecked_xml_qname_from_id(ref_ids),xml_qname_nil(),try_xml_qname(refs)}
(1 row)

psql:xml-qname-schema.sql:42: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE xml_qname_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:42: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE xml_qname_seq OWNED BY xml_qname_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:42: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_xml_qname_ref()
RETURNS xml_qname_refs LANGUAGE SQL  AS
'SELECT unchecked_xml_qname_from_id(nextval(''xml_qname_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:42: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_xml_qname_ref() IS
'next_xml_qname_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-qname-schema.sql:42: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE xml_qname_rows ALTER COLUMN ref SET DEFAULT next_xml_qname_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_simple_serial 
----------------------
 next_xml_qname_ref()
(1 row)

CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-qname-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-qname-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-qname-code.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-qname-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                               set_file                                
-----------------------------------------------------------------------
 schema xml-qname-code.sql, module xml-qname-code, revision $Id, id 86
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
                           type_class_op_method                           
--------------------------------------------------------------------------
 (40,"ref_text_op(refs)","xml_qname_text(xml_qname_refs,env_refs,crefs)")
(1 row)

                                       type_class_op_method                                        
---------------------------------------------------------------------------------------------------
 (40,"ref_env_crefs_text_op(refs,env_refs,crefs)","xml_qname_text(xml_qname_refs,env_refs,crefs)")
(1 row)

 declare_xml_qname_name 
------------------------
                      2
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-attr-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-attr-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-attr-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-attr-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                set_file                                 
-------------------------------------------------------------------------
 schema xml-attr-schema.sql, module xml-attr-schema, revision $Id, id 87
(1 row)

psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE xml_attr_name_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: created shell type xml_attr_name_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_attr_name_refs_in_op(cstring,oid,integer)
RETURNS xml_attr_name_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  42809: return type xml_attr_name_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:xml-attr-schema.sql:19: NOTICE:  00000: CREATED xml_attr_name_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_attr_name_refs_out_op(xml_attr_name_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  42809: argument type xml_attr_name_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:xml-attr-schema.sql:19: NOTICE:  00000: CREATED xml_attr_name_refs_out_op(xml_attr_name_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE xml_attr_name_refs (
  INPUT = xml_attr_name_refs_in_op,
  OUTPUT = xml_attr_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: WARNING:  42P17: type input function xml_attr_name_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:xml-attr-schema.sql:19: WARNING:  42P17: type output function xml_attr_name_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:xml-attr-schema.sql:19: NOTICE:  00000: CREATE TYPE xml_attr_name_refs (
  INPUT = xml_attr_name_refs_in_op,
  OUTPUT = xml_attr_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS xml_attr_name_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS xml_attr_name_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_attr_name_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_attr_name_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_attr_name_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_attr_name_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_name_refs_cmp(xml_attr_name_refs, xml_attr_name_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_name_refs_cmp(xml_attr_name_refs,xml_attr_name_refs) IS
'xml_attr_name_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_name_refs_lt(xml_attr_name_refs, xml_attr_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_name_refs_lt(xml_attr_name_refs,xml_attr_name_refs) IS
'xml_attr_name_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = xml_attr_name_refs,
	 rightarg = xml_attr_name_refs,
	 procedure = xml_attr_name_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_name_refs_le(xml_attr_name_refs, xml_attr_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_name_refs_le(xml_attr_name_refs,xml_attr_name_refs) IS
'xml_attr_name_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = xml_attr_name_refs,
	 rightarg = xml_attr_name_refs,
	 procedure = xml_attr_name_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_name_refs_eq(xml_attr_name_refs, xml_attr_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_name_refs_eq(xml_attr_name_refs,xml_attr_name_refs) IS
'xml_attr_name_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = xml_attr_name_refs,
	 rightarg = xml_attr_name_refs,
	 procedure = xml_attr_name_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_name_refs_neq(xml_attr_name_refs, xml_attr_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_name_refs_neq(xml_attr_name_refs,xml_attr_name_refs) IS
'xml_attr_name_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = xml_attr_name_refs,
	 rightarg = xml_attr_name_refs,
	 procedure = xml_attr_name_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_name_refs_ge(xml_attr_name_refs, xml_attr_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_name_refs_ge(xml_attr_name_refs,xml_attr_name_refs) IS
'xml_attr_name_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = xml_attr_name_refs,
	 rightarg = xml_attr_name_refs,
	 procedure = xml_attr_name_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_name_refs_gt(xml_attr_name_refs, xml_attr_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_name_refs_gt(xml_attr_name_refs,xml_attr_name_refs) IS
'xml_attr_name_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = xml_attr_name_refs,
	 rightarg = xml_attr_name_refs,
	 procedure = xml_attr_name_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS xml_attr_name_refs_ops
		DEFAULT FOR TYPE xml_attr_name_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       xml_attr_name_refs_cmp(xml_attr_name_refs, xml_attr_name_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE xml_attr_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE xml_attr_name_rows (
	ref xml_attr_name_refs PRIMARY KEY,
	name_ text NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE xml_attr_name_rows IS
' - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_name_rows_41_exists(_ref xml_attr_name_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_attr_name_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_name_rows_41_exists(xml_attr_name_refs) IS
'xml_attr_name_rows_41_exists(_ref): referential integrity test method for row of xml_attr_name_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_xml_attr_name_from_id(ref_ids)
RETURNS xml_attr_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''xml_attr_name_refs'', ''xml_attr_name_rows'', $1
	)::xml_attr_name_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_xml_attr_name_from_id(ref_ids) IS
'unchecked_xml_attr_name_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_name_nil()
RETURNS xml_attr_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_xml_attr_name_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_name_nil() IS
'xml_attr_name_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_name_ref_schema(text,boolean,boolean,regtype,regprocedure,text)
INSERT INTO xml_attr_name_rows (ref, name_) VALUES( xml_attr_name_nil(), '')
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_attr_name_rows_no_update_trigger ON xml_attr_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: trigger "xml_attr_name_rows_no_update_trigger" for relation "xml_attr_name_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_attr_name_rows_no_update_trigger
  BEFORE UPDATE ON xml_attr_name_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_attr_name(_ref refs)
RETURNS xml_attr_name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM xml_attr_name_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_attr_name(refs) IS
'try_xml_attr_name(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_attr_name_text(xml_attr_name_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM xml_attr_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_attr_name_text(xml_attr_name_refs) IS
'try_xml_attr_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_name_text(xml_attr_name_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_xml_attr_name_text( $1),''xml_attr_name_text(xml_attr_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_name_text(xml_attr_name_refs) IS
'xml_attr_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_attr_name_length(xml_attr_name_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM xml_attr_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_attr_name_length(xml_attr_name_refs) IS
'try_xml_attr_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_name_length(xml_attr_name_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_xml_attr_name_length( $1),''xml_attr_name_length(xml_attr_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_name_length(xml_attr_name_refs) IS
'xml_attr_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_attr_name(text)
RETURNS xml_attr_name_refs LANGUAGE SQL  STRICT AS
'SELECT CASE
	WHEN $1 = '''' THEN xml_attr_name_nil()
	ELSE ( SELECT ref FROM xml_attr_name_rows WHERE name_ = $1 )
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_attr_name(text) IS
's5_xml.try_xml_attr_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_xml_attr_name(text)
RETURNS xml_attr_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_xml_attr_name( $1),''find_xml_attr_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_xml_attr_name(text) IS
'find_xml_attr_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_attr_name_in(text)
RETURNS xml_attr_name_refs LANGUAGE SQL  AS
'SELECT COALESCE(s5_xml.try_xml_attr_name($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_attr_name_in(text) IS
'try_xml_attr_name_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE xml_attr_name_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE xml_attr_name_seq OWNED BY xml_attr_name_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_xml_attr_name_ref()
RETURNS xml_attr_name_refs LANGUAGE SQL  AS
'SELECT unchecked_xml_attr_name_from_id(nextval(''xml_attr_name_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_xml_attr_name_ref() IS
'next_xml_attr_name_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE xml_attr_name_rows ALTER COLUMN ref SET DEFAULT next_xml_attr_name_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_xml_attr_name(text)
RETURNS xml_attr_name_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name text := $1;
	maybe xml_attr_name_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_xml_attr_name(text)'';
BEGIN
	 IF _name IS NULL THEN RETURN xml_attr_name_nil(); END IF;
	
	LOOP
		maybe := try_xml_attr_name(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO xml_attr_name_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_xml_attr_name(text) IS
'try_get_xml_attr_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_xml_attr_name(text)
RETURNS xml_attr_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_xml_attr_name( $1),''get_xml_attr_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_xml_attr_name(text) IS
'get_xml_attr_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_xml_attr_name(VARIADIC text[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_xml_attr_name(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:19: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_xml_attr_name(text[]) IS
'declare_xml_attr_name(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                                          create_name_ref_schema                                                                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_xml_attr_name_from_id(ref_ids),xml_attr_name_nil(),try_xml_attr_name(refs),xml_attr_name_text(xml_attr_name_refs),xml_attr_name_length(xml_attr_name_refs),find_xml_attr_name(text),try_xml_attr_name_in(text),next_xml_attr_name_ref(),get_xml_attr_name(text),declare_xml_attr_name(text[])}
(1 row)

psql:xml-attr-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_name_id()
RETURNS xml_attr_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_xml_attr_name_from_id(-1)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:21: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_name_id() IS
'xml_attr_name_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_const_ref_func 
-----------------------
 xml_attr_name_id()
(1 row)

INSERT 0 1
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE xml_attr_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: created shell type xml_attr_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_attr_refs_in_op(cstring,oid,integer)
RETURNS xml_attr_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  42809: return type xml_attr_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:xml-attr-schema.sql:28: NOTICE:  00000: CREATED xml_attr_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_attr_refs_out_op(xml_attr_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  42809: argument type xml_attr_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:xml-attr-schema.sql:28: NOTICE:  00000: CREATED xml_attr_refs_out_op(xml_attr_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE xml_attr_refs (
  INPUT = xml_attr_refs_in_op,
  OUTPUT = xml_attr_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: WARNING:  42P17: type input function xml_attr_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:xml-attr-schema.sql:28: WARNING:  42P17: type output function xml_attr_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:xml-attr-schema.sql:28: NOTICE:  00000: CREATE TYPE xml_attr_refs (
  INPUT = xml_attr_refs_in_op,
  OUTPUT = xml_attr_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS xml_attr_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS xml_attr_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_attr_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_attr_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_attr_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_attr_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_refs_cmp(xml_attr_refs, xml_attr_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_refs_cmp(xml_attr_refs,xml_attr_refs) IS
'xml_attr_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_refs_lt(xml_attr_refs, xml_attr_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_refs_lt(xml_attr_refs,xml_attr_refs) IS
'xml_attr_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = xml_attr_refs,
	 rightarg = xml_attr_refs,
	 procedure = xml_attr_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_refs_le(xml_attr_refs, xml_attr_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_refs_le(xml_attr_refs,xml_attr_refs) IS
'xml_attr_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = xml_attr_refs,
	 rightarg = xml_attr_refs,
	 procedure = xml_attr_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_refs_eq(xml_attr_refs, xml_attr_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_refs_eq(xml_attr_refs,xml_attr_refs) IS
'xml_attr_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = xml_attr_refs,
	 rightarg = xml_attr_refs,
	 procedure = xml_attr_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_refs_neq(xml_attr_refs, xml_attr_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_refs_neq(xml_attr_refs,xml_attr_refs) IS
'xml_attr_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = xml_attr_refs,
	 rightarg = xml_attr_refs,
	 procedure = xml_attr_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_refs_ge(xml_attr_refs, xml_attr_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_refs_ge(xml_attr_refs,xml_attr_refs) IS
'xml_attr_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = xml_attr_refs,
	 rightarg = xml_attr_refs,
	 procedure = xml_attr_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_refs_gt(xml_attr_refs, xml_attr_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_refs_gt(xml_attr_refs,xml_attr_refs) IS
'xml_attr_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = xml_attr_refs,
	 rightarg = xml_attr_refs,
	 procedure = xml_attr_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:28: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS xml_attr_refs_ops
		DEFAULT FOR TYPE xml_attr_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       xml_attr_refs_cmp(xml_attr_refs, xml_attr_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 xml_attr_refs
(1 row)

CREATE TABLE
COMMENT
COMMENT
COMMENT
COMMENT
psql:xml-attr-schema.sql:58: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_rows_42_exists(_ref xml_attr_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_attr_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:58: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_rows_42_exists(xml_attr_refs) IS
'xml_attr_rows_42_exists(_ref): referential integrity test method for row of xml_attr_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:58: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_attr_rows_no_update_trigger ON xml_attr_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:58: NOTICE:  00000: trigger "xml_attr_rows_no_update_trigger" for relation "xml_attr_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-attr-schema.sql:58: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_attr_rows_no_update_trigger
  BEFORE UPDATE ON xml_attr_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:58: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_xml_attr_from_id(ref_ids)
RETURNS xml_attr_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''xml_attr_refs'', ''xml_attr_rows'', $1
	)::xml_attr_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:58: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_xml_attr_from_id(ref_ids) IS
'unchecked_xml_attr_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:58: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_attr_nil()
RETURNS xml_attr_refs LANGUAGE SQL  AS
'	SELECT unchecked_xml_attr_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:58: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_attr_nil() IS
'xml_attr_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:58: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_attr(_ref refs)
RETURNS xml_attr_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM xml_attr_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:58: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_attr(refs) IS
'try_xml_attr(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                      declare_ref_class_with_funcs                       
-------------------------------------------------------------------------
 {unchecked_xml_attr_from_id(ref_ids),xml_attr_nil(),try_xml_attr(refs)}
(1 row)

psql:xml-attr-schema.sql:60: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE xml_attr_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:60: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE xml_attr_seq OWNED BY xml_attr_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:60: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_xml_attr_ref()
RETURNS xml_attr_refs LANGUAGE SQL  AS
'SELECT unchecked_xml_attr_from_id(nextval(''xml_attr_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:60: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_xml_attr_ref() IS
'next_xml_attr_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-attr-schema.sql:60: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE xml_attr_rows ALTER COLUMN ref SET DEFAULT next_xml_attr_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_simple_serial 
----------------------
 next_xml_attr_ref()
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-attr-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-attr-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-attr-code.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-attr-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                              set_file                               
---------------------------------------------------------------------
 schema xml-attr-code.sql, module xml-attr-code, revision $Id, id 88
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
                          type_class_op_method                          
------------------------------------------------------------------------
 (42,"ref_text_op(refs)","xml_attr_text(xml_attr_refs,env_refs,crefs)")
(1 row)

                                      type_class_op_method                                       
-------------------------------------------------------------------------------------------------
 (42,"ref_env_crefs_text_op(refs,env_refs,crefs)","xml_attr_text(xml_attr_refs,env_refs,crefs)")
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
psql:xml-attr-code.sql:347: NOTICE:  00000: operator ^ does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP OPERATOR
CREATE OPERATOR
 declare_xml_attr_name 
-----------------------
                     1
(1 row)

CREATE FUNCTION
COMMENT
 declare_xml_attr_name 
-----------------------
                     2
(1 row)

CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-attr-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-attr-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-attr-test.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-attr-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                              set_file                               
---------------------------------------------------------------------
 schema xml-attr-test.sql, module xml-attr-test, revision $Id, id 89
(1 row)

 declare_xml_attr_name 
-----------------------
                     3
(1 row)

          test_func           
------------------------------
 get_xml_attr(text,text,text)
(1 row)

          test_func           
------------------------------
 xml_attr_name(xml_attr_refs)
(1 row)

           test_func           
-------------------------------
 xml_attr_value(xml_attr_refs)
(1 row)

 spx_debug_set 
---------------
             0
(1 row)

 refs_debug_set 
----------------
              0
(1 row)

psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEtcToValue:
	+
LOCATION:  RefEtcToValue, refs.c:351
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx:
	+
LOCATION:  MethodForOpTagSpx, refs.c:273
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.GetTom:
	+
LOCATION:  GetTom, refs.c:72
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.RefMakeQueryPlan:
	+
LOCATION:  RefMakeQueryPlan, refs.c:233
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s5_xml.xml_attr_text($1)
LOCATION:  SpxPlanQuery, spx.c:1554
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEtcToValue.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s5_xml.xml_attr_text($1) ->  plan 0x252f078 nargs= 1
LOCATION:  SpxPlanQuery, spx.c:1567
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEtcToValue:
	op ref_text_op(refs)/1
	method xml_attr_text(xml_attr_refs,env_refs,crefs)/1
	 ref tag=42 id=1
LOCATION:  TomDebug, refs.c:300
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x252f078 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	+
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.try_name_in($1::text)
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  SpxPlanQuery, spx.c:1554
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s2_core.try_name_in($1::text) ->  plan 0x26eed08 nargs= 1
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  SpxPlanQuery, spx.c:1567
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26eed08 nargs= 1, maxrows: 1
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 2490371
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	+
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26eed08 nargs= 1, maxrows: 1
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_name_in::name_refs
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:53: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 2490371
LINE 1: SELECT try_doc( env_name_value( $1, 'env_doc'))
                                            ^
QUERY:  SELECT try_doc( env_name_value( $1, 'env_doc'))
LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEnvCrefsEtcToValue:
	+
LOCATION:  RefEnvCrefsEtcToValue, refs.c:1082
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEnvCrefsEtcToValue.OpCrefsArgsToTom:
	+
LOCATION:  OpCrefsArgsToTom, refs.c:1062
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEnvCrefsEtcToValue.OpCrefsArgsToTom.MethodForOpTagSpx:
	+
LOCATION:  MethodForOpTagSpx, refs.c:273
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEnvCrefsEtcToValue.OpCrefsArgsToTom.MethodForOpTagSpx.GetTom:
	+
LOCATION:  GetTom, refs.c:72
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEnvCrefsEtcToValue.OpCrefsArgsToTom.MethodForOpTagSpx.GetTom:
	ref_env_crefs_text_op falling back to ref_env_text_op
LOCATION:  GetTom, refs.c:95
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEnvCrefsEtcToValue.OpCrefsArgsToTom.MethodForOpTagSpx.GetTom:
	ref_env_text_op falling back to ref_text_op
LOCATION:  GetTom, refs.c:95
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEnvCrefsEtcToValue.OpCrefsArgsToTom.MethodForOpTagSpx.RefMakeQueryPlan:
	+
LOCATION:  RefMakeQueryPlan, refs.c:233
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEnvCrefsEtcToValue.OpCrefsArgsToTom.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s3_more.small_text_string_text($1)
LOCATION:  SpxPlanQuery, spx.c:1554
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEnvCrefsEtcToValue.OpCrefsArgsToTom.MethodForOpTagSpx.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s3_more.small_text_string_text($1) ->  plan 0x2876768 nargs= 1
LOCATION:  SpxPlanQuery, spx.c:1567
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEnvCrefsEtcToValue.OpCrefsArgsToTom:
	op ref_env_crefs_text_op(refs,env_refs,crefs)/3
	method small_text_string_text(text_refs)/1
	 ref tag=7 id=17
LOCATION:  TomDebug, refs.c:300
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEnvCrefsEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x2876768 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEnvCrefsEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEnvCrefsEtcToValue.SpxQueryText.RowColStrPtr:
	Returning red
LOCATION:  RowColStrPtr, spx.c:1757
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEtcToValue.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:53: NOTICE:  00000: RefEtcToValue.SpxQueryText.RowColStrPtr:
	Returning  color="red"
LOCATION:  RowColStrPtr, spx.c:1757
                  test_func                  
---------------------------------------------
 xml_attr_text(xml_attr_refs,env_refs,crefs)
(1 row)

psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:56: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:56: NOTICE:  00000: refs_op_tag_to_method:
	+
LOCATION:  refs_op_tag_to_method, refs.c:140
psql:xml-attr-test.sql:56: NOTICE:  00000: refs_op_tag_to_method.GetTom:
	+
LOCATION:  GetTom, refs.c:72
psql:xml-attr-test.sql:56: NOTICE:  00000: refs_op_tag_to_method.GetTom:
	ref_env_crefs_text_op falling back to ref_env_text_op
LOCATION:  GetTom, refs.c:95
psql:xml-attr-test.sql:56: NOTICE:  00000: refs_op_tag_to_method:
	 tag 13 op proc s3_more.ref_env_text_op-19282 method proc s3_more.int_ref_text-19589 plan (nil) nargs= 0
LOCATION:  DebugTom, refs.c:121
psql:xml-attr-test.sql:56: NOTICE:  00000: call_out_method:
	+
LOCATION:  call_out_method, refs.c:1008
psql:xml-attr-test.sql:56: NOTICE:  00000: call_out_method.RefMakeQueryPlan:
	+
LOCATION:  RefMakeQueryPlan, refs.c:233
psql:xml-attr-test.sql:56: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s1_refs.ref_textout($1)::cstring
LOCATION:  SpxPlanQuery, spx.c:1554
psql:xml-attr-test.sql:56: NOTICE:  00000: call_out_method.RefMakeQueryPlan.SpxProcTypesQueryPlan.SpxPlanQuery:
	SELECT s1_refs.ref_textout($1)::cstring ->  plan 0x240f908 nargs= 1
LOCATION:  SpxPlanQuery, spx.c:1567
psql:xml-attr-test.sql:56: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	plan:  plan 0x240f908 nargs= 1, maxrows: 1 readonly
LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:56: NOTICE:  00000: call_out_method.SpxQueryText.Query1.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:56: NOTICE:  00000: call_out_method.SpxQueryText.RowColStrPtr:
	Returning xml_attr_refs:xml_attr_rows:2
LOCATION:  RowColStrPtr, spx.c:1757
         get_xml_attr          
-------------------------------
 xml_attr_refs:xml_attr_rows:2
(1 row)

psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:62: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
                       test_func                        
--------------------------------------------------------
 get_xml_attr(page_uri_refs,xml_attr_name_refs,integer)
(1 row)

psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	+
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 65554
LINE 3:   WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
                     ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	+
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  call_in_method, refs.c:923
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method:
	 expected 3 arg types
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  UnknownReport, spx.c:130
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	plan:  plan 0x26ffce8 nargs= 1, maxrows: 1
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1789
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.SpxAccessDB:
	tuples: 1, status: 5 Ok_Select
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  SpxAccessDB, spx.c:1796
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 ...
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1610
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64.RowColDatumType:
	0, 0 -> try_uri_domain_name_in::uri_domain_name_refs
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColDatumType, spx.c:1641
psql:xml-attr-test.sql:71: NOTICE:  00000: call_in_method.SpxUpdateTypeInt64.RowColTypeInt64:
	Returning 131090
LINE 6:    'wicci.org'::uri_domain_name_refs
           ^
QUERY:  
	SELECT CASE
		WHEN $1 != 'localhost'::uri_domain_name_refs THEN $1
		ELSE COALESCE(
			try_uri_domain_name(($2 ^ 'host')::citext),
			'wicci.org'::uri_domain_name_refs
		)
	END

LOCATION:  RowColTypeInt64, spx.c:1678
psql:xml-attr-test.sql:71: NOTICE:  00000: refs_op_tag_to_method:
	+
LOCATION:  refs_op_tag_to_method, refs.c:140
psql:xml-attr-test.sql:71: NOTICE:  00000: refs_op_tag_to_method.GetTom:
	+
LOCATION:  GetTom, refs.c:72
psql:xml-attr-test.sql:71: NOTICE:  00000: refs_op_tag_to_method.GetTom:
	ref_env_crefs_text_op falling back to ref_env_text_op
LOCATION:  GetTom, refs.c:95
psql:xml-attr-test.sql:71: NOTICE:  00000: refs_op_tag_to_method:
	 tag 12 op proc s3_more.ref_env_text_op-19282 method proc s3_more.float_ref_text-19497 plan (nil) nargs= 0
LOCATION:  DebugTom, refs.c:121
                            test_func                            
-----------------------------------------------------------------
 get_xml_attr(page_uri_refs,xml_attr_name_refs,double precision)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-char.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-char.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-char.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-char.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                         set_file                          
-----------------------------------------------------------
 schema xml-char.sql, module xml-char, revision $Id, id 90
(1 row)

psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE xml_char_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: created shell type xml_char_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_char_refs_in_op(cstring,oid,integer)
RETURNS xml_char_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  42809: return type xml_char_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:xml-char.sql:20: NOTICE:  00000: CREATED xml_char_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_char_refs_out_op(xml_char_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  42809: argument type xml_char_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:xml-char.sql:20: NOTICE:  00000: CREATED xml_char_refs_out_op(xml_char_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE xml_char_refs (
  INPUT = xml_char_refs_in_op,
  OUTPUT = xml_char_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: WARNING:  42P17: type input function xml_char_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:xml-char.sql:20: WARNING:  42P17: type output function xml_char_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:xml-char.sql:20: NOTICE:  00000: CREATE TYPE xml_char_refs (
  INPUT = xml_char_refs_in_op,
  OUTPUT = xml_char_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS xml_char_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS xml_char_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_char_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_char_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_char_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_char_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_char_refs_cmp(xml_char_refs, xml_char_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_char_refs_cmp(xml_char_refs,xml_char_refs) IS
'xml_char_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_char_refs_lt(xml_char_refs, xml_char_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_char_refs_lt(xml_char_refs,xml_char_refs) IS
'xml_char_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = xml_char_refs,
	 rightarg = xml_char_refs,
	 procedure = xml_char_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_char_refs_le(xml_char_refs, xml_char_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_char_refs_le(xml_char_refs,xml_char_refs) IS
'xml_char_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = xml_char_refs,
	 rightarg = xml_char_refs,
	 procedure = xml_char_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_char_refs_eq(xml_char_refs, xml_char_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_char_refs_eq(xml_char_refs,xml_char_refs) IS
'xml_char_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = xml_char_refs,
	 rightarg = xml_char_refs,
	 procedure = xml_char_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_char_refs_neq(xml_char_refs, xml_char_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_char_refs_neq(xml_char_refs,xml_char_refs) IS
'xml_char_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = xml_char_refs,
	 rightarg = xml_char_refs,
	 procedure = xml_char_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_char_refs_ge(xml_char_refs, xml_char_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_char_refs_ge(xml_char_refs,xml_char_refs) IS
'xml_char_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = xml_char_refs,
	 rightarg = xml_char_refs,
	 procedure = xml_char_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_char_refs_gt(xml_char_refs, xml_char_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_char_refs_gt(xml_char_refs,xml_char_refs) IS
'xml_char_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = xml_char_refs,
	 rightarg = xml_char_refs,
	 procedure = xml_char_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:20: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS xml_char_refs_ops
		DEFAULT FOR TYPE xml_char_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       xml_char_refs_cmp(xml_char_refs, xml_char_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 xml_char_refs
(1 row)

CREATE TABLE
COMMENT
psql:xml-char.sql:40: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_chars_43_exists(_ref xml_char_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_chars
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:40: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_chars_43_exists(xml_char_refs) IS
'xml_chars_43_exists(_ref): referential integrity test method for row of xml_chars';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:40: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_chars_no_update_trigger ON xml_chars CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-char.sql:40: NOTICE:  00000: trigger "xml_chars_no_update_trigger" for relation "xml_chars" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-char.sql:40: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_chars_no_update_trigger
  BEFORE UPDATE ON xml_chars
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                           declare_ref_class                           
-----------------------------------------------------------------------
 (43,xml_chars,xml_char_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

CREATE FUNCTION
psql:xml-char.sql:52: NOTICE:  00000: sequence "xml_chars_id_seq" does not exist, skipping
LOCATION:  DropErrorMsgNonExistent, tablecmds.c:763
DROP SEQUENCE
CREATE SEQUENCE
ALTER TABLE
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
                  type_class_op_method                   
---------------------------------------------------------
 (43,"ref_text_op(refs)","xml_char_text(xml_char_refs)")
(1 row)

                    type_class_op_method                     
-------------------------------------------------------------
 (43,"ref_length_op(refs)","xml_char_length(xml_char_refs)")
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-tag-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-tag-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-tag-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-tag-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                               set_file                                
-----------------------------------------------------------------------
 schema xml-tag-schema.sql, module xml-tag-schema, revision $Id, id 91
(1 row)

psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE xml_tag_name_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: created shell type xml_tag_name_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_tag_name_refs_in_op(cstring,oid,integer)
RETURNS xml_tag_name_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  42809: return type xml_tag_name_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:xml-tag-schema.sql:33: NOTICE:  00000: CREATED xml_tag_name_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_tag_name_refs_out_op(xml_tag_name_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  42809: argument type xml_tag_name_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:xml-tag-schema.sql:33: NOTICE:  00000: CREATED xml_tag_name_refs_out_op(xml_tag_name_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE xml_tag_name_refs (
  INPUT = xml_tag_name_refs_in_op,
  OUTPUT = xml_tag_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: WARNING:  42P17: type input function xml_tag_name_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:xml-tag-schema.sql:33: WARNING:  42P17: type output function xml_tag_name_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:xml-tag-schema.sql:33: NOTICE:  00000: CREATE TYPE xml_tag_name_refs (
  INPUT = xml_tag_name_refs_in_op,
  OUTPUT = xml_tag_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS xml_tag_name_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS xml_tag_name_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_tag_name_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_tag_name_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_tag_name_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_tag_name_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_name_refs_cmp(xml_tag_name_refs, xml_tag_name_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_name_refs_cmp(xml_tag_name_refs,xml_tag_name_refs) IS
'xml_tag_name_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_name_refs_lt(xml_tag_name_refs, xml_tag_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_name_refs_lt(xml_tag_name_refs,xml_tag_name_refs) IS
'xml_tag_name_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = xml_tag_name_refs,
	 rightarg = xml_tag_name_refs,
	 procedure = xml_tag_name_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_name_refs_le(xml_tag_name_refs, xml_tag_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_name_refs_le(xml_tag_name_refs,xml_tag_name_refs) IS
'xml_tag_name_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = xml_tag_name_refs,
	 rightarg = xml_tag_name_refs,
	 procedure = xml_tag_name_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_name_refs_eq(xml_tag_name_refs, xml_tag_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_name_refs_eq(xml_tag_name_refs,xml_tag_name_refs) IS
'xml_tag_name_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = xml_tag_name_refs,
	 rightarg = xml_tag_name_refs,
	 procedure = xml_tag_name_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_name_refs_neq(xml_tag_name_refs, xml_tag_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_name_refs_neq(xml_tag_name_refs,xml_tag_name_refs) IS
'xml_tag_name_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = xml_tag_name_refs,
	 rightarg = xml_tag_name_refs,
	 procedure = xml_tag_name_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_name_refs_ge(xml_tag_name_refs, xml_tag_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_name_refs_ge(xml_tag_name_refs,xml_tag_name_refs) IS
'xml_tag_name_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = xml_tag_name_refs,
	 rightarg = xml_tag_name_refs,
	 procedure = xml_tag_name_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_name_refs_gt(xml_tag_name_refs, xml_tag_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_name_refs_gt(xml_tag_name_refs,xml_tag_name_refs) IS
'xml_tag_name_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = xml_tag_name_refs,
	 rightarg = xml_tag_name_refs,
	 procedure = xml_tag_name_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS xml_tag_name_refs_ops
		DEFAULT FOR TYPE xml_tag_name_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       xml_tag_name_refs_cmp(xml_tag_name_refs, xml_tag_name_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE xml_tag_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE xml_tag_name_rows (
	ref xml_tag_name_refs PRIMARY KEY,
	name_ text NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE xml_tag_name_rows IS
' - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_name_rows_44_exists(_ref xml_tag_name_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_tag_name_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_name_rows_44_exists(xml_tag_name_refs) IS
'xml_tag_name_rows_44_exists(_ref): referential integrity test method for row of xml_tag_name_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_xml_tag_name_from_id(ref_ids)
RETURNS xml_tag_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''xml_tag_name_refs'', ''xml_tag_name_rows'', $1
	)::xml_tag_name_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_xml_tag_name_from_id(ref_ids) IS
'unchecked_xml_tag_name_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_tag_name_rows_no_update_trigger ON xml_tag_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: trigger "xml_tag_name_rows_no_update_trigger" for relation "xml_tag_name_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_tag_name_rows_no_update_trigger
  BEFORE UPDATE ON xml_tag_name_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_tag_name(_ref refs)
RETURNS xml_tag_name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM xml_tag_name_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_tag_name(refs) IS
'try_xml_tag_name(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_tag_name_text(xml_tag_name_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM xml_tag_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_tag_name_text(xml_tag_name_refs) IS
'try_xml_tag_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_name_text(xml_tag_name_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_xml_tag_name_text( $1),''xml_tag_name_text(xml_tag_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_name_text(xml_tag_name_refs) IS
'xml_tag_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_tag_name_length(xml_tag_name_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM xml_tag_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_tag_name_length(xml_tag_name_refs) IS
'try_xml_tag_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_name_length(xml_tag_name_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_xml_tag_name_length( $1),''xml_tag_name_length(xml_tag_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_name_length(xml_tag_name_refs) IS
'xml_tag_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_tag_name(text)
RETURNS xml_tag_name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM xml_tag_name_rows WHERE name_ = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_tag_name(text) IS
's5_xml.try_xml_tag_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_xml_tag_name(text)
RETURNS xml_tag_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_xml_tag_name( $1),''find_xml_tag_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_xml_tag_name(text) IS
'find_xml_tag_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_tag_name_in(text)
RETURNS xml_tag_name_refs LANGUAGE SQL  AS
'SELECT COALESCE(s5_xml.try_xml_tag_name($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_tag_name_in(text) IS
'try_xml_tag_name_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE xml_tag_name_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE xml_tag_name_seq OWNED BY xml_tag_name_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_xml_tag_name_ref()
RETURNS xml_tag_name_refs LANGUAGE SQL  AS
'SELECT unchecked_xml_tag_name_from_id(nextval(''xml_tag_name_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_xml_tag_name_ref() IS
'next_xml_tag_name_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE xml_tag_name_rows ALTER COLUMN ref SET DEFAULT next_xml_tag_name_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_xml_tag_name(text)
RETURNS xml_tag_name_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name text := $1;
	maybe xml_tag_name_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_xml_tag_name(text)'';
BEGIN
	
	LOOP
		maybe := try_xml_tag_name(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO xml_tag_name_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_xml_tag_name(text) IS
'try_get_xml_tag_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_xml_tag_name(text)
RETURNS xml_tag_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_xml_tag_name( $1),''get_xml_tag_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_xml_tag_name(text) IS
'get_xml_tag_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_xml_tag_name(VARIADIC text[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_xml_tag_name(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:33: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_xml_tag_name(text[]) IS
'declare_xml_tag_name(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                           create_name_ref_schema                                                                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_xml_tag_name_from_id(ref_ids),try_xml_tag_name(refs),xml_tag_name_text(xml_tag_name_refs),xml_tag_name_length(xml_tag_name_refs),find_xml_tag_name(text),try_xml_tag_name_in(text),next_xml_tag_name_ref(),get_xml_tag_name(text),declare_xml_tag_name(text[])}
(1 row)

COMMENT
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE xml_tag_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: created shell type xml_tag_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_tag_refs_in_op(cstring,oid,integer)
RETURNS xml_tag_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  42809: return type xml_tag_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:xml-tag-schema.sql:39: NOTICE:  00000: CREATED xml_tag_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_tag_refs_out_op(xml_tag_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  42809: argument type xml_tag_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:xml-tag-schema.sql:39: NOTICE:  00000: CREATED xml_tag_refs_out_op(xml_tag_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE xml_tag_refs (
  INPUT = xml_tag_refs_in_op,
  OUTPUT = xml_tag_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: WARNING:  42P17: type input function xml_tag_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:xml-tag-schema.sql:39: WARNING:  42P17: type output function xml_tag_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:xml-tag-schema.sql:39: NOTICE:  00000: CREATE TYPE xml_tag_refs (
  INPUT = xml_tag_refs_in_op,
  OUTPUT = xml_tag_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS xml_tag_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS xml_tag_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_tag_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_tag_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_tag_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_tag_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_refs_cmp(xml_tag_refs, xml_tag_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_refs_cmp(xml_tag_refs,xml_tag_refs) IS
'xml_tag_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_refs_lt(xml_tag_refs, xml_tag_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_refs_lt(xml_tag_refs,xml_tag_refs) IS
'xml_tag_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = xml_tag_refs,
	 rightarg = xml_tag_refs,
	 procedure = xml_tag_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_refs_le(xml_tag_refs, xml_tag_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_refs_le(xml_tag_refs,xml_tag_refs) IS
'xml_tag_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = xml_tag_refs,
	 rightarg = xml_tag_refs,
	 procedure = xml_tag_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_refs_eq(xml_tag_refs, xml_tag_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_refs_eq(xml_tag_refs,xml_tag_refs) IS
'xml_tag_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = xml_tag_refs,
	 rightarg = xml_tag_refs,
	 procedure = xml_tag_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_refs_neq(xml_tag_refs, xml_tag_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_refs_neq(xml_tag_refs,xml_tag_refs) IS
'xml_tag_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = xml_tag_refs,
	 rightarg = xml_tag_refs,
	 procedure = xml_tag_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_refs_ge(xml_tag_refs, xml_tag_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_refs_ge(xml_tag_refs,xml_tag_refs) IS
'xml_tag_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = xml_tag_refs,
	 rightarg = xml_tag_refs,
	 procedure = xml_tag_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_refs_gt(xml_tag_refs, xml_tag_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_refs_gt(xml_tag_refs,xml_tag_refs) IS
'xml_tag_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = xml_tag_refs,
	 rightarg = xml_tag_refs,
	 procedure = xml_tag_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:39: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS xml_tag_refs_ops
		DEFAULT FOR TYPE xml_tag_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       xml_tag_refs_cmp(xml_tag_refs, xml_tag_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 xml_tag_refs
(1 row)

CREATE TABLE
COMMENT
COMMENT
CREATE TABLE
COMMENT
COMMENT
COMMENT
psql:xml-tag-schema.sql:117: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_rows_45_exists(_ref xml_tag_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_tag_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:117: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_rows_45_exists(xml_tag_refs) IS
'xml_tag_rows_45_exists(_ref): referential integrity test method for row of xml_tag_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:117: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_tag_rows_no_update_trigger ON xml_tag_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:117: NOTICE:  00000: trigger "xml_tag_rows_no_update_trigger" for relation "xml_tag_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-tag-schema.sql:117: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_tag_rows_no_update_trigger
  BEFORE UPDATE ON xml_tag_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:117: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_xml_tag_from_id(ref_ids)
RETURNS xml_tag_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''xml_tag_refs'', ''xml_tag_rows'', $1
	)::xml_tag_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:117: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_xml_tag_from_id(ref_ids) IS
'unchecked_xml_tag_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:117: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_tag_nil()
RETURNS xml_tag_refs LANGUAGE SQL  AS
'	SELECT unchecked_xml_tag_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:117: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_tag_nil() IS
'xml_tag_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:117: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_tag(_ref refs)
RETURNS xml_tag_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM xml_tag_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:117: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_tag(refs) IS
'try_xml_tag(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                     declare_ref_class_with_funcs                     
----------------------------------------------------------------------
 {unchecked_xml_tag_from_id(ref_ids),xml_tag_nil(),try_xml_tag(refs)}
(1 row)

psql:xml-tag-schema.sql:118: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE xml_tag_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:118: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE xml_tag_seq OWNED BY xml_tag_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:118: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_xml_tag_ref()
RETURNS xml_tag_refs LANGUAGE SQL  AS
'SELECT unchecked_xml_tag_from_id(nextval(''xml_tag_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:118: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_xml_tag_ref() IS
'next_xml_tag_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-tag-schema.sql:118: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE xml_tag_rows ALTER COLUMN ref SET DEFAULT next_xml_tag_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_simple_serial 
----------------------
 next_xml_tag_ref()
(1 row)

CREATE TABLE
COMMENT
CREATE TABLE
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-tag-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-tag-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-tag-code.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-tag-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                             set_file                              
-------------------------------------------------------------------
 schema xml-tag-code.sql, module xml-tag-code, revision $Id, id 92
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
                                     type_class_op_method                                      
-----------------------------------------------------------------------------------------------
 (45,"ref_env_crefs_text_op(refs,env_refs,crefs)","xml_tag_text(xml_tag_refs,env_refs,crefs)")
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-kind-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-kind-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-kind-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-kind-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                set_file                                 
-------------------------------------------------------------------------
 schema xml-kind-schema.sql, module xml-kind-schema, revision $Id, id 93
(1 row)

 declare_doc_lang_family 
-------------------------
 text
(1 row)

 declare_doc_lang_family 
-------------------------
 text
(1 row)

 declare_doc_lang_family 
-------------------------
 xml
(1 row)

 declare_doc_lang_family 
-------------------------
 xml
(1 row)

 declare_doc_lang_family 
-------------------------
 xml
(1 row)

 declare_doc_lang_family 
-------------------------
 html
(1 row)

 declare_doc_lang_family 
-------------------------
 xhtml
(1 row)

 declare_doc_lang_family 
-------------------------
 html
(1 row)

 declare_doc_lang_family 
-------------------------
 html4
(1 row)

 declare_doc_lang_family 
-------------------------
 binary
(1 row)

 declare_doc_lang_family 
-------------------------
 binary
(1 row)

 declare_doc_lang_family 
-------------------------
 binary
(1 row)

CREATE FUNCTION
COMMENT
CREATE TABLE
COMMENT
psql:xml-kind-schema.sql:60: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS abstract_xml_leaf_kind_rows_abstract_trigger ON abstract_xml_leaf_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:60: NOTICE:  00000: trigger "abstract_xml_leaf_kind_rows_abstract_trigger" for relation "abstract_xml_leaf_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:60: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER abstract_xml_leaf_kind_rows_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON abstract_xml_leaf_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
      declare_abstract       
-----------------------------
 abstract_xml_leaf_kind_rows
(1 row)

CREATE TABLE
COMMENT
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE xml_literal_kind_rows_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE xml_literal_kind_rows_row_handles (
	handle handles NOT NULL UNIQUE,
	ref doc_node_kind_refs PRIMARY KEY  REFERENCES xml_literal_kind_rows(ref)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE xml_literal_kind_rows_row_handles IS
'row handles associated with xml_literal_kind_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_literal_kind_rows_row_get_(handle handles, ref doc_node_kind_refs)
RETURNS xml_literal_kind_rows LANGUAGE SQL  STRICT AS
'SELECT xml_literal_kind_rows.*
 FROM xml_literal_kind_rows,xml_literal_kind_rows_row_handles
WHERE
xml_literal_kind_rows_row_handles.handle=$1 AND xml_literal_kind_rows_row_handles.ref=$2
AND
xml_literal_kind_rows.ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_literal_kind_rows_row_get_(handles,doc_node_kind_refs) IS
'xml_literal_kind_rows_row_get_(handle, ref): find existing handle for row of xml_literal_kind_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_literal_kind_rows_row_set_(handle handles, ref doc_node_kind_refs)
RETURNS xml_literal_kind_rows LANGUAGE SQL  STRICT AS
'
	INSERT INTO xml_literal_kind_rows_row_handles VALUES ( $1, $2);
	SELECT xml_literal_kind_rows_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_literal_kind_rows_row_set_(handles,doc_node_kind_refs) IS
'xml_literal_kind_rows_row_set_(handle, ref): make new handle for row of xml_literal_kind_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_literal_kind_rows_row(handle handles, ref doc_node_kind_refs)
RETURNS xml_literal_kind_rows LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   xml_literal_kind_rows_row_get_( $1, $2),
   xml_literal_kind_rows_row_set_( $1, $2)
  )FROM debug_enter(
  ''xml_literal_kind_rows_row(handles, doc_node_kind_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_literal_kind_rows_row(handles,doc_node_kind_refs) IS
'xml_literal_kind_rows_row(handle, ref): ensure handle for row of xml_literal_kind_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_literal_kind_rows_row(handle handles)
RETURNS xml_literal_kind_rows LANGUAGE SQL  STRICT AS
'SELECT xml_literal_kind_rows.*
  FROM xml_literal_kind_rows, xml_literal_kind_rows_row_handles
  WHERE $1 = xml_literal_kind_rows_row_handles.handle
    AND xml_literal_kind_rows.ref=xml_literal_kind_rows_row_handles.ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_literal_kind_rows_row(handles) IS
's5_xml.xml_literal_kind_rows_row(handle): return a row given a handle for xml_literal_kind_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_literal_kind_rows_ref(handle handles)
RETURNS doc_node_kind_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM xml_literal_kind_rows_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_literal_kind_rows_ref(handles) IS
'xml_literal_kind_rows_ref(handle): given a row handle for xml_literal_kind_rows return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_literal_kind_rows_ref(handle handles, ref doc_node_kind_refs)
RETURNS doc_node_kind_refs LANGUAGE SQL  STRICT AS
'SELECT (xml_literal_kind_rows_row( $1, $2)).ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:83: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_literal_kind_rows_ref(handles,doc_node_kind_refs) IS
's5_xml.xml_literal_kind_rows_ref(handle, ref): set handle for primary key of xml_literal_kind_rows and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                         create_handles_for                                                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({xml_literal_kind_rows_row_handles},"{""xml_literal_kind_rows_row(handles,doc_node_kind_refs)"",xml_literal_kind_rows_row(handles),xml_literal_kind_rows_ref(handles),""xml_literal_kind_rows_ref(handles,doc_node_kind_refs)""}")
(1 row)

psql:xml-kind-schema.sql:84: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_literal_kind_rows_46_exists(_ref doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_literal_kind_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:84: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_literal_kind_rows_46_exists(doc_node_kind_refs) IS
'xml_literal_kind_rows_46_exists(_ref): referential integrity test method for row of xml_literal_kind_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:84: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_literal_kind_rows_no_update_trigger ON xml_literal_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:84: NOTICE:  00000: trigger "xml_literal_kind_rows_no_update_trigger" for relation "xml_literal_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:84: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_literal_kind_rows_no_update_trigger
  BEFORE UPDATE ON xml_literal_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                   declare_ref_class                                    
----------------------------------------------------------------------------------------
 (46,xml_literal_kind_rows,doc_node_kind_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

 declare_doc_kind_lang_type 
----------------------------
 xml_literal_kind_rows
(1 row)

ALTER TABLE
psql:xml-kind-schema.sql:92: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS xml_literal_kind_rows_key_insert_trigger ON xml_literal_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:92: NOTICE:  00000: trigger "xml_literal_kind_rows_key_insert_trigger" for relation "xml_literal_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:92: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER xml_literal_kind_rows_key_insert_trigger
  BEFORE INSERT ON xml_literal_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:92: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS xml_literal_kind_rows_key_delete_trigger ON xml_literal_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:92: NOTICE:  00000: trigger "xml_literal_kind_rows_key_delete_trigger" for relation "xml_literal_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:92: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER xml_literal_kind_rows_key_delete_trigger
  BEFORE DELETE ON xml_literal_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 xml_literal_kind_rows
(1 row)

CREATE TABLE
COMMENT
psql:xml-kind-schema.sql:103: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_element_kind_rows_47_exists(_ref doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_element_kind_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:103: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_element_kind_rows_47_exists(doc_node_kind_refs) IS
'xml_element_kind_rows_47_exists(_ref): referential integrity test method for row of xml_element_kind_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:103: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_element_kind_rows_no_update_trigger ON xml_element_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:103: NOTICE:  00000: trigger "xml_element_kind_rows_no_update_trigger" for relation "xml_element_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:103: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_element_kind_rows_no_update_trigger
  BEFORE UPDATE ON xml_element_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                   declare_ref_class                                    
----------------------------------------------------------------------------------------
 (47,xml_element_kind_rows,doc_node_kind_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

 declare_doc_kind_lang_type 
----------------------------
 xml_element_kind_rows
(1 row)

psql:xml-kind-schema.sql:108: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS xml_element_kind_rows_key_insert_trigger ON xml_element_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:108: NOTICE:  00000: trigger "xml_element_kind_rows_key_insert_trigger" for relation "xml_element_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:108: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER xml_element_kind_rows_key_insert_trigger
  BEFORE INSERT ON xml_element_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:108: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS xml_element_kind_rows_key_delete_trigger ON xml_element_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:108: NOTICE:  00000: trigger "xml_element_kind_rows_key_delete_trigger" for relation "xml_element_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:108: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER xml_element_kind_rows_key_delete_trigger
  BEFORE DELETE ON xml_element_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 xml_element_kind_rows
(1 row)

CREATE TABLE
COMMENT
psql:xml-kind-schema.sql:125: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_root_element_kind_rows_48_exists(_ref doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_root_element_kind_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:125: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_root_element_kind_rows_48_exists(doc_node_kind_refs) IS
'xml_root_element_kind_rows_48_exists(_ref): referential integrity test method for row of xml_root_element_kind_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:125: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_root_element_kind_rows_no_update_trigger ON xml_root_element_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:125: NOTICE:  00000: trigger "xml_root_element_kind_rows_no_update_trigger" for relation "xml_root_element_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:125: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_root_element_kind_rows_no_update_trigger
  BEFORE UPDATE ON xml_root_element_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                      declare_ref_class                                      
---------------------------------------------------------------------------------------------
 (48,xml_root_element_kind_rows,doc_node_kind_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

 declare_doc_kind_lang_type 
----------------------------
 xml_root_element_kind_rows
(1 row)

psql:xml-kind-schema.sql:130: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS xml_root_element_kind_rows_key_insert_trigger ON xml_root_element_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:130: NOTICE:  00000: trigger "xml_root_element_kind_rows_key_insert_trigger" for relation "xml_root_element_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:130: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER xml_root_element_kind_rows_key_insert_trigger
  BEFORE INSERT ON xml_root_element_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:130: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS xml_root_element_kind_rows_key_delete_trigger ON xml_root_element_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:130: NOTICE:  00000: trigger "xml_root_element_kind_rows_key_delete_trigger" for relation "xml_root_element_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:130: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER xml_root_element_kind_rows_key_delete_trigger
  BEFORE DELETE ON xml_root_element_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  create_key_triggers_for   
----------------------------
 xml_root_element_kind_rows
(1 row)

CREATE TABLE
COMMENT
psql:xml-kind-schema.sql:144: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_text_kind_rows_49_exists(_ref doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_text_kind_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:144: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_text_kind_rows_49_exists(doc_node_kind_refs) IS
'xml_text_kind_rows_49_exists(_ref): referential integrity test method for row of xml_text_kind_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:144: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_text_kind_rows_no_update_trigger ON xml_text_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:144: NOTICE:  00000: trigger "xml_text_kind_rows_no_update_trigger" for relation "xml_text_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:144: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_text_kind_rows_no_update_trigger
  BEFORE UPDATE ON xml_text_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                  declare_ref_class                                  
-------------------------------------------------------------------------------------
 (49,xml_text_kind_rows,doc_node_kind_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

 declare_doc_kind_lang_type 
----------------------------
 xml_text_kind_rows
(1 row)

ALTER TABLE
psql:xml-kind-schema.sql:152: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS xml_text_kind_rows_key_insert_trigger ON xml_text_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:152: NOTICE:  00000: trigger "xml_text_kind_rows_key_insert_trigger" for relation "xml_text_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:152: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER xml_text_kind_rows_key_insert_trigger
  BEFORE INSERT ON xml_text_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:152: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS xml_text_kind_rows_key_delete_trigger ON xml_text_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:152: NOTICE:  00000: trigger "xml_text_kind_rows_key_delete_trigger" for relation "xml_text_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:152: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER xml_text_kind_rows_key_delete_trigger
  BEFORE DELETE ON xml_text_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 xml_text_kind_rows
(1 row)

CREATE TABLE
COMMENT
psql:xml-kind-schema.sql:166: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_to_xml_text_kind_rows_50_exists(_ref doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_to_xml_text_kind_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:166: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_to_xml_text_kind_rows_50_exists(doc_node_kind_refs) IS
'xml_to_xml_text_kind_rows_50_exists(_ref): referential integrity test method for row of xml_to_xml_text_kind_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:166: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_to_xml_text_kind_rows_no_update_trigger ON xml_to_xml_text_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:166: NOTICE:  00000: trigger "xml_to_xml_text_kind_rows_no_update_trigger" for relation "xml_to_xml_text_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:166: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_to_xml_text_kind_rows_no_update_trigger
  BEFORE UPDATE ON xml_to_xml_text_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                     declare_ref_class                                      
--------------------------------------------------------------------------------------------
 (50,xml_to_xml_text_kind_rows,doc_node_kind_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

 declare_doc_kind_lang_type 
----------------------------
 xml_to_xml_text_kind_rows
(1 row)

ALTER TABLE
psql:xml-kind-schema.sql:174: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS xml_to_xml_text_kind_rows_key_insert_trigger ON xml_to_xml_text_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:174: NOTICE:  00000: trigger "xml_to_xml_text_kind_rows_key_insert_trigger" for relation "xml_to_xml_text_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:174: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER xml_to_xml_text_kind_rows_key_insert_trigger
  BEFORE INSERT ON xml_to_xml_text_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:174: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS xml_to_xml_text_kind_rows_key_delete_trigger ON xml_to_xml_text_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-kind-schema.sql:174: NOTICE:  00000: trigger "xml_to_xml_text_kind_rows_key_delete_trigger" for relation "xml_to_xml_text_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-kind-schema.sql:174: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER xml_to_xml_text_kind_rows_key_delete_trigger
  BEFORE DELETE ON xml_to_xml_text_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  create_key_triggers_for  
---------------------------
 xml_to_xml_text_kind_rows
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-node-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-node-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-node-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-node-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                set_file                                 
-------------------------------------------------------------------------
 schema xml-node-schema.sql, module xml-node-schema, revision $Id, id 94
(1 row)

psql:xml-node-schema.sql:18: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS tree_doc_node_rows_key_delete_trigger ON tree_doc_node_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-node-schema.sql:18: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER tree_doc_node_rows_key_delete_trigger
  BEFORE DELETE ON tree_doc_node_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_delete_trigger_for 
-------------------------------
 tree_doc_node_rows
(1 row)

psql:xml-node-schema.sql:22: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS graft_doc_node_rows_key_delete_trigger ON graft_doc_node_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-node-schema.sql:22: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER graft_doc_node_rows_key_delete_trigger
  BEFORE DELETE ON graft_doc_node_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_delete_trigger_for 
-------------------------------
 graft_doc_node_rows
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-doc-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-doc-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-doc-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-doc-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                               set_file                                
-----------------------------------------------------------------------
 schema xml-doc-schema.sql, module xml-doc-schema, revision $Id, id 95
(1 row)

psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE xml_id_name_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: created shell type xml_id_name_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_id_name_refs_in_op(cstring,oid,integer)
RETURNS xml_id_name_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  42809: return type xml_id_name_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:xml-doc-schema.sql:17: NOTICE:  00000: CREATED xml_id_name_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION xml_id_name_refs_out_op(xml_id_name_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  42809: argument type xml_id_name_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:xml-doc-schema.sql:17: NOTICE:  00000: CREATED xml_id_name_refs_out_op(xml_id_name_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE xml_id_name_refs (
  INPUT = xml_id_name_refs_in_op,
  OUTPUT = xml_id_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: WARNING:  42P17: type input function xml_id_name_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:xml-doc-schema.sql:17: WARNING:  42P17: type output function xml_id_name_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:xml-doc-schema.sql:17: NOTICE:  00000: CREATE TYPE xml_id_name_refs (
  INPUT = xml_id_name_refs_in_op,
  OUTPUT = xml_id_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS xml_id_name_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS xml_id_name_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_id_name_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_id_name_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (xml_id_name_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (xml_id_name_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_id_name_refs_cmp(xml_id_name_refs, xml_id_name_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_id_name_refs_cmp(xml_id_name_refs,xml_id_name_refs) IS
'xml_id_name_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_id_name_refs_lt(xml_id_name_refs, xml_id_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_id_name_refs_lt(xml_id_name_refs,xml_id_name_refs) IS
'xml_id_name_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = xml_id_name_refs,
	 rightarg = xml_id_name_refs,
	 procedure = xml_id_name_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_id_name_refs_le(xml_id_name_refs, xml_id_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_id_name_refs_le(xml_id_name_refs,xml_id_name_refs) IS
'xml_id_name_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = xml_id_name_refs,
	 rightarg = xml_id_name_refs,
	 procedure = xml_id_name_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_id_name_refs_eq(xml_id_name_refs, xml_id_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_id_name_refs_eq(xml_id_name_refs,xml_id_name_refs) IS
'xml_id_name_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = xml_id_name_refs,
	 rightarg = xml_id_name_refs,
	 procedure = xml_id_name_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_id_name_refs_neq(xml_id_name_refs, xml_id_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_id_name_refs_neq(xml_id_name_refs,xml_id_name_refs) IS
'xml_id_name_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = xml_id_name_refs,
	 rightarg = xml_id_name_refs,
	 procedure = xml_id_name_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_id_name_refs_ge(xml_id_name_refs, xml_id_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_id_name_refs_ge(xml_id_name_refs,xml_id_name_refs) IS
'xml_id_name_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = xml_id_name_refs,
	 rightarg = xml_id_name_refs,
	 procedure = xml_id_name_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_id_name_refs_gt(xml_id_name_refs, xml_id_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_id_name_refs_gt(xml_id_name_refs,xml_id_name_refs) IS
'xml_id_name_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = xml_id_name_refs,
	 rightarg = xml_id_name_refs,
	 procedure = xml_id_name_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS xml_id_name_refs_ops
		DEFAULT FOR TYPE xml_id_name_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       xml_id_name_refs_cmp(xml_id_name_refs, xml_id_name_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE xml_id_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE xml_id_name_rows (
	ref xml_id_name_refs PRIMARY KEY,
	name_ text NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE xml_id_name_rows IS
' - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_id_name_rows_51_exists(_ref xml_id_name_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM xml_id_name_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_id_name_rows_51_exists(xml_id_name_refs) IS
'xml_id_name_rows_51_exists(_ref): referential integrity test method for row of xml_id_name_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_xml_id_name_from_id(ref_ids)
RETURNS xml_id_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''xml_id_name_refs'', ''xml_id_name_rows'', $1
	)::xml_id_name_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_xml_id_name_from_id(ref_ids) IS
'unchecked_xml_id_name_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_id_name_nil()
RETURNS xml_id_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_xml_id_name_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_id_name_nil() IS
'xml_id_name_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_name_ref_schema(text,boolean,boolean,regtype,regprocedure,text)
INSERT INTO xml_id_name_rows (ref, name_) VALUES( xml_id_name_nil(), '')
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS xml_id_name_rows_no_update_trigger ON xml_id_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: trigger "xml_id_name_rows_no_update_trigger" for relation "xml_id_name_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER xml_id_name_rows_no_update_trigger
  BEFORE UPDATE ON xml_id_name_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_id_name(_ref refs)
RETURNS xml_id_name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM xml_id_name_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_id_name(refs) IS
'try_xml_id_name(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_id_name_text(xml_id_name_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM xml_id_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_id_name_text(xml_id_name_refs) IS
'try_xml_id_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_id_name_text(xml_id_name_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_xml_id_name_text( $1),''xml_id_name_text(xml_id_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_id_name_text(xml_id_name_refs) IS
'xml_id_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_id_name_length(xml_id_name_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM xml_id_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_id_name_length(xml_id_name_refs) IS
'try_xml_id_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION xml_id_name_length(xml_id_name_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_xml_id_name_length( $1),''xml_id_name_length(xml_id_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION xml_id_name_length(xml_id_name_refs) IS
'xml_id_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_id_name(text)
RETURNS xml_id_name_refs LANGUAGE SQL  STRICT AS
'SELECT CASE
	WHEN $1 = '''' THEN xml_id_name_nil()
	ELSE ( SELECT ref FROM xml_id_name_rows WHERE name_ = $1 )
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_id_name(text) IS
's5_xml.try_xml_id_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_xml_id_name(text)
RETURNS xml_id_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_xml_id_name( $1),''find_xml_id_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_xml_id_name(text) IS
'find_xml_id_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_xml_id_name_in(text)
RETURNS xml_id_name_refs LANGUAGE SQL  AS
'SELECT COALESCE(s5_xml.try_xml_id_name($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_xml_id_name_in(text) IS
'try_xml_id_name_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE xml_id_name_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE xml_id_name_seq OWNED BY xml_id_name_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_xml_id_name_ref()
RETURNS xml_id_name_refs LANGUAGE SQL  AS
'SELECT unchecked_xml_id_name_from_id(nextval(''xml_id_name_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_xml_id_name_ref() IS
'next_xml_id_name_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE xml_id_name_rows ALTER COLUMN ref SET DEFAULT next_xml_id_name_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_xml_id_name(text)
RETURNS xml_id_name_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name text := $1;
	maybe xml_id_name_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_xml_id_name(text)'';
BEGIN
	 IF _name IS NULL THEN RETURN xml_id_name_nil(); END IF;
	
	LOOP
		maybe := try_xml_id_name(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO xml_id_name_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_xml_id_name(text) IS
'try_get_xml_id_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_xml_id_name(text)
RETURNS xml_id_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_xml_id_name( $1),''get_xml_id_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_xml_id_name(text) IS
'get_xml_id_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_xml_id_name(VARIADIC text[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_xml_id_name(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_xml_id_name(text[]) IS
'declare_xml_id_name(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                              create_name_ref_schema                                                                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_xml_id_name_from_id(ref_ids),xml_id_name_nil(),try_xml_id_name(refs),xml_id_name_text(xml_id_name_refs),xml_id_name_length(xml_id_name_refs),find_xml_id_name(text),try_xml_id_name_in(text),next_xml_id_name_ref(),get_xml_id_name(text),declare_xml_id_name(text[])}
(1 row)

CREATE TABLE
psql:xml-doc-schema.sql:28: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS xml_id_node_pairs_abstract_trigger ON xml_id_node_pairs CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-doc-schema.sql:28: NOTICE:  00000: trigger "xml_id_node_pairs_abstract_trigger" for relation "xml_id_node_pairs" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:xml-doc-schema.sql:28: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER xml_id_node_pairs_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON xml_id_node_pairs
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 declare_abstract  
-------------------
 xml_id_node_pairs
(1 row)

COMMENT
CREATE TABLE
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-import-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-import-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-import-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-import-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                  set_file                                   
-----------------------------------------------------------------------------
 schema xml-import-schema.sql, module xml-import-schema, revision $Id, id 96
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
psql:xml-import-schema.sql:106: NOTICE:  00000: type "xml_attr_returns" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
COMMENT
CREATE FUNCTION
psql:xml-import-schema.sql:129: NOTICE:  00000: type "xml_kind_returns" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
psql:xml-import-schema.sql:175: NOTICE:  00000: type "xml_tree_returns" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP TYPE
CREATE TYPE
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-import-schema-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-import-schema-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-import-schema-test.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-import-schema-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                       set_file                                        
---------------------------------------------------------------------------------------
 schema xml-import-schema-test.sql, module xml-import-schema-test, revision $Id, id 97
(1 row)

CREATE FUNCTION
 prefix |                uri                 
--------+------------------------------------
        | puuhonua.org
        | user:touch@puuhonua.org
 index  | user:touch@puuhonua.org/index.html
 touch  | touch@puuhonua.org
 bar    | /foo/bar
 foo    | /foo/bar
 puu    | puuhonua.org
(7 rows)

 _prefix |                _uri                
---------+------------------------------------
 puu     | puuhonua.org
         | puuhonua.org
 bar     | /foo/bar
 foo     | /foo/bar
 touch   | touch@puuhonua.org
         | user:touch@puuhonua.org
 index   | user:touch@puuhonua.org/index.html
(7 rows)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-kind-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-kind-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-kind-code.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-kind-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                              set_file                               
---------------------------------------------------------------------
 schema xml-kind-code.sql, module xml-kind-code, revision $Id, id 98
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
                                                                type_class_op_method                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------
 (46,"ref_env_crefs_chiln_text_op(refs,env_refs,crefs,doc_node_refs[])","xml_literal_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
                                                                type_class_op_method                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------
 (47,"ref_env_crefs_chiln_text_op(refs,env_refs,crefs,doc_node_refs[])","xml_element_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
                                                                  type_class_op_method                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------
 (48,"ref_env_crefs_chiln_text_op(refs,env_refs,crefs,doc_node_refs[])","xml_root_element_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
                                                              type_class_op_method                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------
 (49,"ref_env_crefs_chiln_text_op(refs,env_refs,crefs,doc_node_refs[])","xml_text_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
                                                                  type_class_op_method                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------
 (50,"ref_env_crefs_chiln_text_op(refs,env_refs,crefs,doc_node_refs[])","xml_to_xml_text_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])")
(1 row)

CREATE FUNCTION
COMMENT
                                            type_class_op_method                                            
------------------------------------------------------------------------------------------------------------
 (47,"ref_name_search_op(refs,name_refs)","xml_element_kind_search(doc_node_kind_refs,xml_attr_name_refs)")
(1 row)

psql:xml-kind-code.sql:539: NOTICE:  00000: operator ^ does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP OPERATOR
CREATE OPERATOR
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-kind-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-kind-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-kind-test.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-kind-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                              set_file                               
---------------------------------------------------------------------
 schema xml-kind-test.sql, module xml-kind-test, revision $Id, id 99
(1 row)

-- SELECT refs_debug_on(), text_refs_debug_on(), xml_debug_on();
SELECT declare_name('hello');
 declare_name 
--------------
            1
(1 row)

SELECT test_func(
	'xml_literal_kind_text(doc_node_kind_refs, env_refs, crefs, doc_node_refs[])',
	ref_env_crefs_chiln_text_op(
		xml_literal_kind('hello'::name_refs::refs), env_nil(), crefs_nil(), '{}'::doc_node_refs[]
	), E'hello\n'
);
                                test_func                                 
--------------------------------------------------------------------------
 xml_literal_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

SELECT test_func(
	'xml_text_kind_text(doc_node_kind_refs, env_refs, crefs, doc_node_refs[])',
	ref_env_crefs_chiln_text_op(
		get_xml_text_kind( 'hello'::name_refs::refs ),
		env_nil(), crefs_nil(), '{}'::doc_node_refs[]
	), 'hello'
);
                               test_func                               
-----------------------------------------------------------------------
 xml_text_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

SELECT test_func(
	'xml_to_xml_text_kind_text(doc_node_kind_refs, env_refs, crefs, doc_node_refs[])',
	ref_env_crefs_chiln_text_op(
		xml_to_xml_text_kind(get_text('hello & goodbye')::refs),
		env_nil(), crefs_nil(), '{}'::doc_node_refs[]
	), E'hello &amp; goodbye\n'
);
                                  test_func                                   
------------------------------------------------------------------------------
 xml_to_xml_text_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-node-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-node-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-node-code.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-node-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                               set_file                               
----------------------------------------------------------------------
 schema xml-node-code.sql, module xml-node-code, revision $Id, id 100
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
 declare_name 
--------------
            4
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-node-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-node-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-node-test.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-node-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                               set_file                               
----------------------------------------------------------------------
 schema xml-node-test.sql, module xml-node-test, revision $Id, id 101
(1 row)

-- SELECT refs_debug_on(), text_refs_debug_on(), xml_debug_on();
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-doc-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-doc-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-doc-code.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-doc-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                              set_file                              
--------------------------------------------------------------------
 schema xml-doc-code.sql, module xml-doc-code, revision $Id, id 102
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-html-data.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-html-data.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-html-data.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-html-data.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                  set_file                                  
----------------------------------------------------------------------------
 schema xml-schema0-data.sql, module xml-schema0-data, revision $Id, id 103
(1 row)

 declare_name 
--------------
            3
(1 row)

         get_xml_char         |         get_xml_char         |         get_xml_char         
------------------------------+------------------------------+------------------------------
 xml_char_refs:xml_chars:1000 | xml_char_refs:xml_chars:1001 | xml_char_refs:xml_chars:1002
(1 row)

 declare_name 
--------------
            4
(1 row)

    declare_tagenv    
----------------------
 env_refs:env_rows:-3
(1 row)

    declare_tagenv    
----------------------
 env_refs:env_rows:-4
(1 row)

    declare_tagenv    
----------------------
 env_refs:env_rows:-5
(1 row)

    declare_tagenv    
----------------------
 env_refs:env_rows:-6
(1 row)

    declare_tagenv    
----------------------
 env_refs:env_rows:-7
(1 row)

    declare_tagenv    
----------------------
 env_refs:env_rows:-8
(1 row)

    declare_tagenv    
----------------------
 env_refs:env_rows:-9
(1 row)

    declare_tagenv     
-----------------------
 env_refs:env_rows:-10
(1 row)

    declare_tagenv     
-----------------------
 env_refs:env_rows:-11
(1 row)

    declare_tagenv     
-----------------------
 env_refs:env_rows:-12
(1 row)

    declare_tagenv     
-----------------------
 env_refs:env_rows:-13
(1 row)

    declare_tagenv     
-----------------------
 env_refs:env_rows:-14
(1 row)

      xml_env_tags      
------------------------
 {env_refs:env_rows:-4}
(1 row)

                xml_env_tags                 
---------------------------------------------
 {env_refs:env_rows:-5,env_refs:env_rows:-5}
(1 row)

                           xml_env_tags                           
------------------------------------------------------------------
 {env_refs:env_rows:-6,env_refs:env_rows:-6,env_refs:env_rows:-6}
(1 row)

                xml_env_tags                 
---------------------------------------------
 {env_refs:env_rows:-8,env_refs:env_rows:-8}
(1 row)

                                                                               xml_env_tags                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {env_refs:env_rows:-7,env_refs:env_rows:-7,env_refs:env_rows:-7,env_refs:env_rows:-7,env_refs:env_rows:-7,env_refs:env_rows:-7,env_refs:env_rows:-7,env_refs:env_rows:-7}
(1 row)

                           xml_env_tags                           
------------------------------------------------------------------
 {env_refs:env_rows:-9,env_refs:env_rows:-9,env_refs:env_rows:-9}
(1 row)

                                                          xml_env_tags                                                           
---------------------------------------------------------------------------------------------------------------------------------
 {env_refs:env_rows:-9,env_refs:env_rows:-9,env_refs:env_rows:-9,env_refs:env_rows:-9,env_refs:env_rows:-9,env_refs:env_rows:-9}
(1 row)

                           xml_env_tags                           
------------------------------------------------------------------
 {env_refs:env_rows:-9,env_refs:env_rows:-9,env_refs:env_rows:-9}
(1 row)

      xml_env_tags       
-------------------------
 {env_refs:env_rows:-12}
(1 row)

                 xml_env_tags                  
-----------------------------------------------
 {env_refs:env_rows:-11,env_refs:env_rows:-11}
(1 row)

      xml_env_tags      
------------------------
 {env_refs:env_rows:-9}
(1 row)

                                                                                              xml_env_tags                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {env_refs:env_rows:-13,env_refs:env_rows:-13,env_refs:env_rows:-13,env_refs:env_rows:-13,env_refs:env_rows:-13,env_refs:env_rows:-13,env_refs:env_rows:-13,env_refs:env_rows:-13,env_refs:env_rows:-13}
(1 row)

      xml_env_tags      
------------------------
 {env_refs:env_rows:-9}
(1 row)

                                                                                              xml_env_tags                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {env_refs:env_rows:-14,env_refs:env_rows:-14,env_refs:env_rows:-14,env_refs:env_rows:-14,env_refs:env_rows:-14,env_refs:env_rows:-14,env_refs:env_rows:-14,env_refs:env_rows:-14,env_refs:env_rows:-14}
(1 row)

                xml_env_tags                 
---------------------------------------------
 {env_refs:env_rows:-9,env_refs:env_rows:-9}
(1 row)

                                                                                                                    xml_env_tags                                                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10}
(1 row)

                                                                                                                                          xml_env_tags                                                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10,env_refs:env_rows:-10}
(1 row)

CREATE FUNCTION
DELETE 0
INSERT 0 7
DELETE 0
INSERT 0 2
               create_dynamic_kind                
--------------------------------------------------
 doc_node_kind_refs:dynamic_doc_node_kind_rows:16
(1 row)

psql:xml-html-data.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION html_head_extra_text(
_nil doc_node_kind_refs, _env env_refs, _crefs crefs, _chiln doc_node_refs[]
)
RETURNS text LANGUAGE SQL  AS
'
	SELECT $head$
		<link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />
		<style type="text/css">
			<!--
				.wi_hide { display: none; }
			-->
		</style>
	$head$::text
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-html-data.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION html_head_extra_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[]) IS
'html_head_extra_text(_nil, _env, _crefs, _chiln): nil ref, doc env, etc. --> special dynamic text value by create_dynamic_kind_text_method(text,text,regtype,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                     create_dynamic_kind_text_method                     
-------------------------------------------------------------------------
 html_head_extra_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

               create_dynamic_kind                
--------------------------------------------------
 doc_node_kind_refs:dynamic_doc_node_kind_rows:17
(1 row)

psql:xml-html-data.sql:237: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION html_body_top_text(
_nil doc_node_kind_refs, _env env_refs, _crefs crefs, _chiln doc_node_refs[]
)
RETURNS text LANGUAGE SQL  AS
'
	SELECT $body_top$
		<ul id="wi_panel" class="wi_menu wi wi_hide">
			<li id="wi_panel_home" class="wi_icon wi">
					<object class="wi_image wi" data="Theme/wicci-home.svg">
					</object>
			</li>
		</ul>
		<div id="wi_toggle_parent" class="wi wi_show">
			<object id="wi_toggle_image" class="wi_image wi"
							data="Theme/wicci-toggle.svg"
							type="image/svg+xml">
			</object> 
			<div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>
		</div>																										 <!-- wi_panel -->
	$body_top$::text
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-html-data.sql:237: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION html_body_top_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[]) IS
'html_body_top_text(_nil, _env, _crefs, _chiln): nil ref, doc env, etc. --> special dynamic text value by create_dynamic_kind_text_method(text,text,regtype,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                    create_dynamic_kind_text_method                    
-----------------------------------------------------------------------
 html_body_top_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

               create_dynamic_kind                
--------------------------------------------------
 doc_node_kind_refs:dynamic_doc_node_kind_rows:18
(1 row)

psql:xml-html-data.sql:270: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION html_body_extra_text(
_nil doc_node_kind_refs, _env env_refs, _crefs crefs, _chiln doc_node_refs[]
)
RETURNS text LANGUAGE SQL  AS
'
	SELECT $body_extra$
		<div id="wi_stash"  class="wi_hide">
			<h2> This section hidden in production version</h2>
			<dl>
				<dt> Wicci Inline Controls </dt>
				<dd id="wi_inline_controls_stash">
					<span id="wi_inline_controls" class="wi_controls wi">
						<span id="wi_inline_controls_0" class="wi_group wi">
							<span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>
							<span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>
							<span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>
						</span>
						<span id="wi_inline_controls_1" class="wi_group wi">
							<span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>
							<span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>
							<span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>
							<span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>
						</span>
					</span>
				</dd>
			</dl>
		</div>											<!-- wi_stash -->
		<script src="JS/jquery.js" type="text/javascript"></script>
		<script src="JS/tooltip.js" type="text/javascript"></script>
		<script src="JS/cci.js" type="text/javascript"></script>
		<script src="JS/wi.js" type="text/javascript"></script>
	$body_extra$::text
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:xml-html-data.sql:270: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION html_body_extra_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[]) IS
'html_body_extra_text(_nil, _env, _crefs, _chiln): nil ref, doc env, etc. --> special dynamic text value by create_dynamic_kind_text_method(text,text,regtype,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                     create_dynamic_kind_text_method                     
-------------------------------------------------------------------------
 html_body_extra_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-import-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-import-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-import-code.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-import-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                 set_file                                 
--------------------------------------------------------------------------
 schema xml-import-code.sql, module xml-import-code, revision $Id, id 104
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
 debug_on 
----------
 
(1 row)

COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-svg.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-svg.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-svg.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-svg.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                         set_file                         
----------------------------------------------------------
 schema xml-svg.sql, module xml-svg, revision $Id, id 105
(1 row)

       coalesce        
-----------------------
 env_refs:env_rows:-15
(1 row)

                        env_doc_lang                        
------------------------------------------------------------
 (env_refs:env_rows:-15,env_doc_lang,svg,"inserted status")
(1 row)

                                env_namespace_uri                                
---------------------------------------------------------------------------------
 (env_refs:env_rows:-15,env_namespace_uri,www.w3.org/2000/svg,"inserted status")
(1 row)

xml_env_tags                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

 {env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15,env_refs:env_rows:-15}
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f css-kind-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/css-kind-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/css-kind-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/css-kind-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                 set_file                                 
--------------------------------------------------------------------------
 schema css-kind-schema.sql, module css-kind-schema, revision $Id, id 106
(1 row)

psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE css_name_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: created shell type css_name_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION css_name_refs_in_op(cstring,oid,integer)
RETURNS css_name_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  42809: return type css_name_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:css-kind-schema.sql:17: NOTICE:  00000: CREATED css_name_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION css_name_refs_out_op(css_name_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  42809: argument type css_name_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:css-kind-schema.sql:17: NOTICE:  00000: CREATED css_name_refs_out_op(css_name_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE css_name_refs (
  INPUT = css_name_refs_in_op,
  OUTPUT = css_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: WARNING:  42P17: type input function css_name_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:css-kind-schema.sql:17: WARNING:  42P17: type output function css_name_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:css-kind-schema.sql:17: NOTICE:  00000: CREATE TYPE css_name_refs (
  INPUT = css_name_refs_in_op,
  OUTPUT = css_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS css_name_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS css_name_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (css_name_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (css_name_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (css_name_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (css_name_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_name_refs_cmp(css_name_refs, css_name_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_name_refs_cmp(css_name_refs,css_name_refs) IS
'css_name_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_name_refs_lt(css_name_refs, css_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_name_refs_lt(css_name_refs,css_name_refs) IS
'css_name_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = css_name_refs,
	 rightarg = css_name_refs,
	 procedure = css_name_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_name_refs_le(css_name_refs, css_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_name_refs_le(css_name_refs,css_name_refs) IS
'css_name_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = css_name_refs,
	 rightarg = css_name_refs,
	 procedure = css_name_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_name_refs_eq(css_name_refs, css_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_name_refs_eq(css_name_refs,css_name_refs) IS
'css_name_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = css_name_refs,
	 rightarg = css_name_refs,
	 procedure = css_name_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_name_refs_neq(css_name_refs, css_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_name_refs_neq(css_name_refs,css_name_refs) IS
'css_name_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = css_name_refs,
	 rightarg = css_name_refs,
	 procedure = css_name_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_name_refs_ge(css_name_refs, css_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_name_refs_ge(css_name_refs,css_name_refs) IS
'css_name_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = css_name_refs,
	 rightarg = css_name_refs,
	 procedure = css_name_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_name_refs_gt(css_name_refs, css_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_name_refs_gt(css_name_refs,css_name_refs) IS
'css_name_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = css_name_refs,
	 rightarg = css_name_refs,
	 procedure = css_name_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS css_name_refs_ops
		DEFAULT FOR TYPE css_name_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       css_name_refs_cmp(css_name_refs, css_name_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE css_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE css_name_rows (
	ref css_name_refs PRIMARY KEY,
	name_ citext NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE css_name_rows IS
' - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_name_rows_52_exists(_ref css_name_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM css_name_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_name_rows_52_exists(css_name_refs) IS
'css_name_rows_52_exists(_ref): referential integrity test method for row of css_name_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_css_name_from_id(ref_ids)
RETURNS css_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''css_name_refs'', ''css_name_rows'', $1
	)::css_name_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_css_name_from_id(ref_ids) IS
'unchecked_css_name_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_name_nil()
RETURNS css_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_css_name_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_name_nil() IS
'css_name_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_name_ref_schema(text,boolean,boolean,regtype,regprocedure,text)
INSERT INTO css_name_rows (ref, name_) VALUES( css_name_nil(), '')
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS css_name_rows_no_update_trigger ON css_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: trigger "css_name_rows_no_update_trigger" for relation "css_name_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER css_name_rows_no_update_trigger
  BEFORE UPDATE ON css_name_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_css_name(_ref refs)
RETURNS css_name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM css_name_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_css_name(refs) IS
'try_css_name(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_css_name_text(css_name_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM css_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_css_name_text(css_name_refs) IS
'try_css_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_name_text(css_name_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_css_name_text( $1),''css_name_text(css_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_name_text(css_name_refs) IS
'css_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_css_name_length(css_name_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM css_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_css_name_length(css_name_refs) IS
'try_css_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_name_length(css_name_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_css_name_length( $1),''css_name_length(css_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_name_length(css_name_refs) IS
'css_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_css_name(citext)
RETURNS css_name_refs LANGUAGE SQL  STRICT AS
'SELECT CASE
	WHEN $1 = '''' THEN css_name_nil()
	ELSE ( SELECT ref FROM css_name_rows WHERE name_ = $1 )
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_css_name(citext) IS
's5_xml.try_css_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_css_name(citext)
RETURNS css_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_css_name( $1),''find_css_name(citext)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_css_name(citext) IS
'find_css_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_css_name_in(citext)
RETURNS css_name_refs LANGUAGE SQL  AS
'SELECT COALESCE(s5_xml.try_css_name($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_css_name_in(citext) IS
'try_css_name_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE css_name_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE css_name_seq OWNED BY css_name_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_css_name_ref()
RETURNS css_name_refs LANGUAGE SQL  AS
'SELECT unchecked_css_name_from_id(nextval(''css_name_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_css_name_ref() IS
'next_css_name_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE css_name_rows ALTER COLUMN ref SET DEFAULT next_css_name_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_css_name(citext)
RETURNS css_name_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name citext := $1;
	maybe css_name_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_css_name(citext)'';
BEGIN
	 IF _name IS NULL THEN RETURN css_name_nil(); END IF;
	
	LOOP
		maybe := try_css_name(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO css_name_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_css_name(citext) IS
'try_get_css_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_css_name(citext)
RETURNS css_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_css_name( $1),''get_css_name(citext)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_css_name(citext) IS
'get_css_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_css_name(VARIADIC citext[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_css_name(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:17: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_css_name(citext[]) IS
'declare_css_name(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                create_name_ref_schema                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_css_name_from_id(ref_ids),css_name_nil(),try_css_name(refs),css_name_text(css_name_refs),css_name_length(css_name_refs),find_css_name(citext),try_css_name_in(citext),next_css_name_ref(),get_css_name(citext),declare_css_name(citext[])}
(1 row)

CREATE TABLE
COMMENT
CREATE TABLE
COMMENT
psql:css-kind-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_root_kind_rows_53_exists(_ref doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM css_root_kind_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_root_kind_rows_53_exists(doc_node_kind_refs) IS
'css_root_kind_rows_53_exists(_ref): referential integrity test method for row of css_root_kind_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:45: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS css_root_kind_rows_no_update_trigger ON css_root_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:45: NOTICE:  00000: trigger "css_root_kind_rows_no_update_trigger" for relation "css_root_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:css-kind-schema.sql:45: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER css_root_kind_rows_no_update_trigger
  BEFORE UPDATE ON css_root_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                  declare_ref_class                                  
-------------------------------------------------------------------------------------
 (53,css_root_kind_rows,doc_node_kind_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

 declare_doc_kind_lang_type 
----------------------------
 css_root_kind_rows
(1 row)

DO
CREATE TABLE
COMMENT
COMMENT
psql:css-kind-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_set_kind_rows_54_exists(_ref doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM css_set_kind_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:77: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_set_kind_rows_54_exists(doc_node_kind_refs) IS
'css_set_kind_rows_54_exists(_ref): referential integrity test method for row of css_set_kind_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:77: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS css_set_kind_rows_no_update_trigger ON css_set_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:77: NOTICE:  00000: trigger "css_set_kind_rows_no_update_trigger" for relation "css_set_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:css-kind-schema.sql:77: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER css_set_kind_rows_no_update_trigger
  BEFORE UPDATE ON css_set_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                 declare_ref_class                                  
------------------------------------------------------------------------------------
 (54,css_set_kind_rows,doc_node_kind_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

 declare_doc_kind_lang_type 
----------------------------
 css_set_kind_rows
(1 row)

ALTER TABLE
psql:css-kind-schema.sql:85: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS css_set_kind_rows_key_insert_trigger ON css_set_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:85: NOTICE:  00000: trigger "css_set_kind_rows_key_insert_trigger" for relation "css_set_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:css-kind-schema.sql:85: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER css_set_kind_rows_key_insert_trigger
  BEFORE INSERT ON css_set_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:85: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS css_set_kind_rows_key_delete_trigger ON css_set_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:85: NOTICE:  00000: trigger "css_set_kind_rows_key_delete_trigger" for relation "css_set_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:css-kind-schema.sql:85: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER css_set_kind_rows_key_delete_trigger
  BEFORE DELETE ON css_set_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 css_set_kind_rows
(1 row)

CREATE TABLE
COMMENT
psql:css-kind-schema.sql:103: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION css_property_kind_rows_55_exists(_ref doc_node_kind_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM css_property_kind_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:103: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION css_property_kind_rows_55_exists(doc_node_kind_refs) IS
'css_property_kind_rows_55_exists(_ref): referential integrity test method for row of css_property_kind_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:103: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS css_property_kind_rows_no_update_trigger ON css_property_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:103: NOTICE:  00000: trigger "css_property_kind_rows_no_update_trigger" for relation "css_property_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:css-kind-schema.sql:103: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER css_property_kind_rows_no_update_trigger
  BEFORE UPDATE ON css_property_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                    declare_ref_class                                    
-----------------------------------------------------------------------------------------
 (55,css_property_kind_rows,doc_node_kind_refs,"ref_textout(refs)","ref_textin(text)",t)
(1 row)

 declare_doc_kind_lang_type 
----------------------------
 css_property_kind_rows
(1 row)

ALTER TABLE
psql:css-kind-schema.sql:111: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS css_property_kind_rows_key_insert_trigger ON css_property_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:111: NOTICE:  00000: trigger "css_property_kind_rows_key_insert_trigger" for relation "css_property_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:css-kind-schema.sql:111: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER css_property_kind_rows_key_insert_trigger
  BEFORE INSERT ON css_property_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:111: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS css_property_kind_rows_key_delete_trigger ON css_property_kind_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:css-kind-schema.sql:111: NOTICE:  00000: trigger "css_property_kind_rows_key_delete_trigger" for relation "css_property_kind_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:css-kind-schema.sql:111: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER css_property_kind_rows_key_delete_trigger
  BEFORE DELETE ON css_property_kind_rows
  FOR EACH ROW EXECUTE PROCEDURE doc_node_kind_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_triggers_for 
-------------------------
 css_property_kind_rows
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f css-kind-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/css-kind-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/css-kind-code.sql-out-err /home/greg/.Wicci/Make/wicci1/css-kind-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                              set_file                               
---------------------------------------------------------------------
 schema xml-kind-code.sql, module xml-kind-code, revision $Id, id 98
(1 row)

CREATE FUNCTION
CREATE FUNCTION
                                                              type_class_op_method                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------
 (53,"ref_env_crefs_chiln_text_op(refs,env_refs,crefs,doc_node_refs[])","css_root_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
                                                              type_class_op_method                                                              
------------------------------------------------------------------------------------------------------------------------------------------------
 (54,"ref_env_crefs_chiln_text_op(refs,env_refs,crefs,doc_node_refs[])","css_set_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
                                                                type_class_op_method                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------
 (55,"ref_env_crefs_chiln_text_op(refs,env_refs,crefs,doc_node_refs[])","css_property_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
 declare_css_name 
------------------
               98
(1 row)

 declare_css_name 
------------------
               12
(1 row)

 declare_css_name 
------------------
               66
(1 row)

 declare_css_name 
------------------
               23
(1 row)

 declare_css_name 
------------------
                9
(1 row)

 declare_css_name 
------------------
               40
(1 row)

 declare_css_name 
------------------
               57
(1 row)

 declare_css_name 
------------------
               66
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-import-code-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-import-code-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-import-code-test.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-import-code-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                      set_file                                      
------------------------------------------------------------------------------------
 schema xml-import-code-test.sql, module xml-import-code-test, revision $Id, id 107
(1 row)

        show_xml_prefix_uri_pairs         
------------------------------------------
 prefix_uri_pairs:                       +
 =puuhonua.org                           +
 =user:touch@puuhonua.org                +
 index=user:touch@puuhonua.org/index.html+
 touch=touch@puuhonua.org                +
 bar=/foo/bar                            +
 foo=/foo/bar                            +
 puu=puuhonua.org
(1 row)

             xml_attr             
----------------------------------
 (xml_attr_refs:xml_attr_rows:4,)
(1 row)

        test_func         
--------------------------
 xml_attr(text,text,text)
(1 row)

                               xml_attr                                
-----------------------------------------------------------------------
 (xml_attr_refs:xml_attr_rows:5,"(xml,www.w3.org/XML/1998/namespace)")
(1 row)

        test_func         
--------------------------
 xml_attr(text,text,text)
(1 row)

                                                                          xml_root_kind                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 (doc_node_kind_refs:xml_root_element_kind_rows:20,"{""(\\""\\"",www.w3.org/2000/svg)"",""(xml,www.w3.org/XML/1998/namespace)""}",xml_tag_refs:xml_tag_rows:142)
(1 row)

                           test_func                            
----------------------------------------------------------------
 xml_root_kind(doc_lang_name_refs,text,text,xml_attr_returns[])
(1 row)

            xml_tag            
-------------------------------
 xml_tag_refs:xml_tag_rows:142
(1 row)

 ?column? 
----------
 ""
(1 row)

 xml_tag_text 
--------------
 rect
(1 row)

                                                                          xml_root_kind                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 (doc_node_kind_refs:xml_root_element_kind_rows:20,"{""(\\""\\"",www.w3.org/2000/svg)"",""(xml,www.w3.org/XML/1998/namespace)""}",xml_tag_refs:xml_tag_rows:142)
(1 row)

     u     |  t  
-----------+-----
 fubar.svg | svg
(1 row)

                                    xml_tree                                     
---------------------------------------------------------------------------------
 (doc_node_refs:tree_doc_node_rows:16,{},"{""(\\""\\"",www.w3.org/2000/svg)""}")
(1 row)

              show_ref               
-------------------------------------
 <rect id="main" space="preserve" />+
 
(1 row)

                                    xml_tree                                     
---------------------------------------------------------------------------------
 (doc_node_refs:tree_doc_node_rows:20,{},"{""(\\""\\"",www.w3.org/2000/svg)""}")
(1 row)

DELETE 0
psql:xml-import-code-test.sql:163: NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): fubar.svg =  svg xml_tree_return: <svg />
prefix_uri_pairs:
=www.w3.org/2000/svgid_node_pairs:

LOCATION:  exec_stmt_raise, pl_exec.c:3165
 doc_page_from_uri_lang_root 
-----------------------------
 fubar.svg
(1 row)

               test_func               
---------------------------------------
 try_xml_doc_namespaces_text(doc_refs)
(1 row)

CREATE FUNCTION
                               test_func_tokens                                
-------------------------------------------------------------------------------
 xml_root_element_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  simple.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/simple.html-out-err && mv /home/greg/.Wicci/Make/wicci1/simple.html-out-err /home/greg/.Wicci/Make/wicci1/simple.html-out
doc-to-sql: process_input simple.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): simple.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:
title--><title id="title" />
title.1-->Hello World!h1--><h1 class="title" id="h1" />
h1.1-->Hello World!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  coalesce   
-------------
 simple.html
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-doc-simple-data.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-doc-simple-data.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-doc-simple-data.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-doc-simple-data.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                     set_file                                     
----------------------------------------------------------------------------------
 schema xml-doc-simple-data.sql, module xml-doc-simple-data, revision $Id, id 108
(1 row)

   get_doc_page   
------------------
 wicci.org/simple
(1 row)

               coalesce               
--------------------------------------
 doc_node_refs:graft_doc_node_rows:62
(1 row)

           coalesce            
-------------------------------
 doc_refs:changeset_doc_rows:8
(1 row)

CREATE FUNCTION
CREATE FUNCTION
 ref_tag 
---------
      47
(1 row)

 tag_ |        class_         |       type_        |       out_        |       in_        | is_default 
------+-----------------------+--------------------+-------------------+------------------+------------
   47 | xml_element_kind_rows | doc_node_kind_refs | ref_textout(refs) | ref_textin(text) | t
(1 row)

 tag_ |                            operation_                            |                                 method_                                  
------+------------------------------------------------------------------+--------------------------------------------------------------------------
   47 | ref_exists_op(refs)                                              | xml_element_kind_rows_47_exists(doc_node_kind_refs)
   47 | ref_env_crefs_chiln_text_op(refs,env_refs,crefs,doc_node_refs[]) | xml_element_kind_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
   47 | ref_name_search_op(refs,name_refs)                               | xml_element_kind_search(doc_node_kind_refs,xml_attr_name_refs)
(3 rows)

 is_xml_name 
-------------
 t
(1 row)

 debug_assert 
--------------
 t
(1 row)

 xml_open | ?column? 
----------+----------
 <br      | f
(1 row)

 xml_tag_text | ?column? 
--------------+----------
 br           | f
(1 row)

 ?column? | ?column? | xml_close 
----------+----------+-----------
 f        | f        |  />
(1 row)

 ?column? 
----------
 f
(1 row)

 ?column? 
----------
 t
(1 row)

 xml_element_kind_text 
-----------------------
 <br />               +
 
(1 row)

                                                                                                                   tree_doc_text                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 <html>                                                                                                                                                                                                                                            +
 <head>                                                                                                                                                                                                                                            +
 <title id="title">                                                                                                                                                                                                                                +
 Hello World!                                                                                                                                                                                                                                      +
 </title>                                                                                                                                                                                                                                          +
                                                                                                                                                                                                                                                   +
                                                                                                                                                                                                                                                   +
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />                                                                                                                             +
                 <style type="text/css">                                                                                                                                                                                                           +
                         <!--                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }                                                                                                                                                                                       +
                         -->                                                                                                                                                                                                                       +
                 </style>                                                                                                                                                                                                                          +
                                                                                                                                                                                                                                                   +
 </head>                                                                                                                                                                                                                                           +
                                                                                                                                                                                                                                                   +
 <body>                                                                                                                                                                                                                                            +
                                                                                                                                                                                                                                                   +
                 <ul id="wi_panel" class="wi_menu wi wi_hide">                                                                                                                                                                                     +
                         <li id="wi_panel_home" class="wi_icon wi">                                                                                                                                                                                +
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">                                                                                                                                                  +
                                         </object>                                                                                                                                                                                                 +
                         </li>                                                                                                                                                                                                                     +
                 </ul>                                                                                                                                                                                                                             +
                 <div id="wi_toggle_parent" class="wi wi_show">                                                                                                                                                                                    +
                         <object id="wi_toggle_image" class="wi_image wi"                                                                                                                                                                          +
                                                         data="Theme/wicci-toggle.svg"                                                                                                                                                             +
                                                         type="image/svg+xml">                                                                                                                                                                     +
                         </object>                                                                                                                                                                                                                 +
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>                                                                                                                                                     +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->+
                                                                                                                                                                                                                                                   +
 <h1 class="title" id="h1">                                                                                                                                                                                                                        +
 Hello World!                                                                                                                                                                                                                                      +
 </h1>                                                                                                                                                                                                                                             +
                                                                                                                                                                                                                                                   +
 <p>                                                                                                                                                                                                                                               +
 Relax into alertness.                                                                                                                                                                                                                             +
 <br />                                                                                                                                                                                                                                            +
                                                                                                                                                                                                                                                   +
 Intention free of effort.                                                                                                                                                                                                                         +
 <br />                                                                                                                                                                                                                                            +
                                                                                                                                                                                                                                                   +
 Love and kisses - Greg                                                                                                                                                                                                                            +
 </p>                                                                                                                                                                                                                                              +
                                                                                                                                                                                                                                                   +
                                                                                                                                                                                                                                                   +
                 <div id="wi_stash"  class="wi_hide">                                                                                                                                                                                              +
                         <h2> This section hidden in production version</h2>                                                                                                                                                                       +
                         <dl>                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>                                                                                                                                                                                  +
                                 <dd id="wi_inline_controls_stash">                                                                                                                                                                                +
                                         <span id="wi_inline_controls" class="wi_controls wi">                                                                                                                                                     +
                                                 <span id="wi_inline_controls_0" class="wi_group wi">                                                                                                                                              +
                                                         <span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>                                                                                                 +
                                                         <span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>                                                                                               +
                                                         <span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>                                                                                                    +
                                                 </span>                                                                                                                                                                                           +
                                                 <span id="wi_inline_controls_1" class="wi_group wi">                                                                                                                                              +
                                                         <span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>                                                                                                    +
                                                         <span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>                                                                                             +
                                                         <span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>                                                                                             +
                                                         <span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>                                                                                                +
                                                 </span>                                                                                                                                                                                           +
                                         </span>                                                                                                                                                                                                   +
                                 </dd>                                                                                                                                                                                                             +
                         </dl>                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->                                                                                                                         +
                 <script src="JS/jquery.js" type="text/javascript"></script>                                                                                                                                                                       +
                 <script src="JS/tooltip.js" type="text/javascript"></script>                                                                                                                                                                      +
                 <script src="JS/cci.js" type="text/javascript"></script>                                                                                                                                                                          +
                 <script src="JS/wi.js" type="text/javascript"></script>                                                                                                                                                                           +
                                                                                                                                                                                                                                                   +
 </body>                                                                                                                                                                                                                                           +
                                                                                                                                                                                                                                                   +
 </html>                                                                                                                                                                                                                                           +
 
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  fancy.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/fancy.html-out-err && mv /home/greg/.Wicci/Make/wicci1/fancy.html-out-err /home/greg/.Wicci/Make/wicci1/fancy.html-out
doc-to-sql: process_input fancy.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): fancy.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:
title--><title id="title" />
header--><h1 class="title" id="header" />
header.1-->Love to All The World!list--><ol id="list" />
list.1--><li />
list.1.1-->Everyone needs love!list.2--><li />
list.2.1-->Anyone can give love!list.3--><li />
list.3.1-->Let's share love!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  coalesce  
------------
 fancy.html
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-doc-fancy-data.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-doc-fancy-data.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-doc-fancy-data.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-doc-fancy-data.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                    set_file                                    
--------------------------------------------------------------------------------
 schema xml-doc-fancy-data.sql, module xml-doc-fancy-data, revision $Id, id 109
(1 row)

  get_doc_page   
-----------------
 wicci.org/fancy
(1 row)

            coalesce            
--------------------------------
 doc_refs:changeset_doc_rows:10
(1 row)

            coalesce            
--------------------------------
 doc_refs:changeset_doc_rows:11
(1 row)

            coalesce            
--------------------------------
 doc_refs:changeset_doc_rows:12
(1 row)

            coalesce            
--------------------------------
 doc_refs:changeset_doc_rows:13
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f xml-doc-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/xml-doc-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/xml-doc-test.sql-out-err /home/greg/.Wicci/Make/wicci1/xml-doc-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                              set_file                              
--------------------------------------------------------------------
 schema xml-doc-test.sql, module xml-doc-test, revision $Id, id 110
(1 row)

-- SELECT refs_debug_on(), text_refs_debug_on(), xml_debug_on();
-- show simple and fancy docs
\x
Expanded display is on.
SELECT '***** ' || handle::text || '***** ' || E'\n' || key::text
FROM doc_keys_row_handles;
-[ RECORD 1 ]----------------------------
?column? | ***** doc-1*****              +
         | doc_refs:tree_doc_rows:1
-[ RECORD 2 ]----------------------------
?column? | ***** doc-1-root-graft*****   +
         | doc_refs:changeset_doc_rows:2
-[ RECORD 3 ]----------------------------
?column? | ***** doc-3*****              +
         | doc_refs:tree_doc_rows:3
-[ RECORD 4 ]----------------------------
?column? | ***** doc-3-root-graft*****   +
         | doc_refs:changeset_doc_rows:4
-[ RECORD 5 ]----------------------------
?column? | ***** doc-3-root-2grafts***** +
         | doc_refs:changeset_doc_rows:5
-[ RECORD 6 ]----------------------------
?column? | ***** simple-howdy*****       +
         | doc_refs:changeset_doc_rows:8
-[ RECORD 7 ]----------------------------
?column? | ***** fancy-send-love*****    +
         | doc_refs:changeset_doc_rows:10
-[ RECORD 8 ]----------------------------
?column? | ***** fancy-give-love*****    +
         | doc_refs:changeset_doc_rows:11
-[ RECORD 9 ]----------------------------
?column? | ***** fancy-less*****         +
         | doc_refs:changeset_doc_rows:12
-[ RECORD 10 ]---------------------------
?column? | ***** fancy-more*****         +
         | doc_refs:changeset_doc_rows:13

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f s5-xml.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/s5-xml.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/s5-xml.sql-out-err /home/greg/.Wicci/Make/wicci1/s5-xml.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                    set_schema_path                    
-------------------------------------------------------
 {s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                        set_file                        
--------------------------------------------------------
 schema s5-xml.sql, module s5-xml, revision $Id, id 111
(1 row)

make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S5_xml'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S6_http'
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f http-transfer-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/http-transfer-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/http-transfer-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/http-transfer-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
psql:settings.sql:8: NOTICE:  00000: 
---> META declare_system_schema(text)
CREATE SCHEMA s6_http
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                        set_schema_path                        
---------------------------------------------------------------
 {s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

psql:http-transfer-schema.sql:3: NOTICE:  00000: new_schema_name_id(schema_names) s6_http ->  18 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                      set_file                                      
------------------------------------------------------------------------------------
 schema http-transfer-schema.sql, module http-transfer-schema, revision $Id, id 112
(1 row)

psql:http-transfer-schema.sql:20: NOTICE:  00000: table "http_request_name_rows" does not exist, skipping
LOCATION:  DropErrorMsgNonExistent, tablecmds.c:763
DROP TABLE
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE http_request_name_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: created shell type http_request_name_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION http_request_name_refs_in_op(cstring,oid,integer)
RETURNS http_request_name_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  42809: return type http_request_name_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:http-transfer-schema.sql:23: NOTICE:  00000: CREATED http_request_name_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION http_request_name_refs_out_op(http_request_name_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  42809: argument type http_request_name_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:http-transfer-schema.sql:23: NOTICE:  00000: CREATED http_request_name_refs_out_op(http_request_name_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE http_request_name_refs (
  INPUT = http_request_name_refs_in_op,
  OUTPUT = http_request_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: WARNING:  42P17: type input function http_request_name_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:http-transfer-schema.sql:23: WARNING:  42P17: type output function http_request_name_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:http-transfer-schema.sql:23: NOTICE:  00000: CREATE TYPE http_request_name_refs (
  INPUT = http_request_name_refs_in_op,
  OUTPUT = http_request_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS http_request_name_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS http_request_name_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (http_request_name_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (http_request_name_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (http_request_name_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (http_request_name_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_refs_cmp(http_request_name_refs, http_request_name_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_refs_cmp(http_request_name_refs,http_request_name_refs) IS
'http_request_name_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_refs_lt(http_request_name_refs, http_request_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_refs_lt(http_request_name_refs,http_request_name_refs) IS
'http_request_name_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = http_request_name_refs,
	 rightarg = http_request_name_refs,
	 procedure = http_request_name_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_refs_le(http_request_name_refs, http_request_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_refs_le(http_request_name_refs,http_request_name_refs) IS
'http_request_name_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = http_request_name_refs,
	 rightarg = http_request_name_refs,
	 procedure = http_request_name_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_refs_eq(http_request_name_refs, http_request_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_refs_eq(http_request_name_refs,http_request_name_refs) IS
'http_request_name_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = http_request_name_refs,
	 rightarg = http_request_name_refs,
	 procedure = http_request_name_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_refs_neq(http_request_name_refs, http_request_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_refs_neq(http_request_name_refs,http_request_name_refs) IS
'http_request_name_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = http_request_name_refs,
	 rightarg = http_request_name_refs,
	 procedure = http_request_name_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_refs_ge(http_request_name_refs, http_request_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_refs_ge(http_request_name_refs,http_request_name_refs) IS
'http_request_name_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = http_request_name_refs,
	 rightarg = http_request_name_refs,
	 procedure = http_request_name_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_refs_gt(http_request_name_refs, http_request_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_refs_gt(http_request_name_refs,http_request_name_refs) IS
'http_request_name_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = http_request_name_refs,
	 rightarg = http_request_name_refs,
	 procedure = http_request_name_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS http_request_name_refs_ops
		DEFAULT FOR TYPE http_request_name_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       http_request_name_refs_cmp(http_request_name_refs, http_request_name_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE http_request_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE http_request_name_rows (
	ref http_request_name_refs PRIMARY KEY,
	name_ citext NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE http_request_name_rows IS
' - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_rows_56_exists(_ref http_request_name_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM http_request_name_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_rows_56_exists(http_request_name_refs) IS
'http_request_name_rows_56_exists(_ref): referential integrity test method for row of http_request_name_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_http_request_name_from_id(ref_ids)
RETURNS http_request_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''http_request_name_refs'', ''http_request_name_rows'', $1
	)::http_request_name_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_http_request_name_from_id(ref_ids) IS
'unchecked_http_request_name_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_nil()
RETURNS http_request_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_request_name_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_nil() IS
'http_request_name_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_name_ref_schema(text,boolean,boolean,regtype,regprocedure,text)
INSERT INTO http_request_name_rows (ref, name_) VALUES( http_request_name_nil(), '')
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS http_request_name_rows_no_update_trigger ON http_request_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: trigger "http_request_name_rows_no_update_trigger" for relation "http_request_name_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER http_request_name_rows_no_update_trigger
  BEFORE UPDATE ON http_request_name_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_request_name(_ref refs)
RETURNS http_request_name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM http_request_name_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_request_name(refs) IS
'try_http_request_name(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_request_name_text(http_request_name_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM http_request_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_request_name_text(http_request_name_refs) IS
'try_http_request_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_text(http_request_name_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_http_request_name_text( $1),''http_request_name_text(http_request_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_text(http_request_name_refs) IS
'http_request_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_request_name_length(http_request_name_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM http_request_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_request_name_length(http_request_name_refs) IS
'try_http_request_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_length(http_request_name_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_http_request_name_length( $1),''http_request_name_length(http_request_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_length(http_request_name_refs) IS
'http_request_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_request_name(citext)
RETURNS http_request_name_refs LANGUAGE SQL  STRICT AS
'SELECT CASE
	WHEN $1 = '''' THEN http_request_name_nil()
	ELSE ( SELECT ref FROM http_request_name_rows WHERE name_ = $1 )
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_request_name(citext) IS
's6_http.try_http_request_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_http_request_name(citext)
RETURNS http_request_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_http_request_name( $1),''find_http_request_name(citext)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_http_request_name(citext) IS
'find_http_request_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_request_name_in(citext)
RETURNS http_request_name_refs LANGUAGE SQL  AS
'SELECT COALESCE(s6_http.try_http_request_name($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_request_name_in(citext) IS
'try_http_request_name_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE http_request_name_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE http_request_name_seq OWNED BY http_request_name_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_http_request_name_ref()
RETURNS http_request_name_refs LANGUAGE SQL  AS
'SELECT unchecked_http_request_name_from_id(nextval(''http_request_name_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_http_request_name_ref() IS
'next_http_request_name_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE http_request_name_rows ALTER COLUMN ref SET DEFAULT next_http_request_name_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_http_request_name(citext)
RETURNS http_request_name_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name citext := $1;
	maybe http_request_name_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_http_request_name(citext)'';
BEGIN
	 IF _name IS NULL THEN RETURN http_request_name_nil(); END IF;
	
	LOOP
		maybe := try_http_request_name(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO http_request_name_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_http_request_name(citext) IS
'try_get_http_request_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_http_request_name(citext)
RETURNS http_request_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_http_request_name( $1),''get_http_request_name(citext)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_http_request_name(citext) IS
'get_http_request_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_http_request_name(VARIADIC citext[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_http_request_name(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:23: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_http_request_name(citext[]) IS
'declare_http_request_name(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                                                                      create_name_ref_schema                                                                                                                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_http_request_name_from_id(ref_ids),http_request_name_nil(),try_http_request_name(refs),http_request_name_text(http_request_name_refs),http_request_name_length(http_request_name_refs),find_http_request_name(citext),try_http_request_name_in(citext),next_http_request_name_ref(),get_http_request_name(citext),declare_http_request_name(citext[])}
(1 row)

COMMENT
psql:http-transfer-schema.sql:32: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_type()
RETURNS http_request_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_request_name_from_id(-4)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:32: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_type() IS
'http_request_name_type(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:32: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_url()
RETURNS http_request_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_request_name_from_id(-3)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:32: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_url() IS
'http_request_name_url(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:32: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_name_protocol()
RETURNS http_request_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_request_name_from_id(-2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:32: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_name_protocol() IS
'http_request_name_protocol(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  create_const_ref_func   |  create_const_ref_func  |    create_const_ref_func     
--------------------------+-------------------------+------------------------------
 http_request_name_type() | http_request_name_url() | http_request_name_protocol()
(1 row)

INSERT 0 3
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE http_response_name_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: created shell type http_response_name_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION http_response_name_refs_in_op(cstring,oid,integer)
RETURNS http_response_name_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  42809: return type http_response_name_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:http-transfer-schema.sql:46: NOTICE:  00000: CREATED http_response_name_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION http_response_name_refs_out_op(http_response_name_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  42809: argument type http_response_name_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:http-transfer-schema.sql:46: NOTICE:  00000: CREATED http_response_name_refs_out_op(http_response_name_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE http_response_name_refs (
  INPUT = http_response_name_refs_in_op,
  OUTPUT = http_response_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: WARNING:  42P17: type input function http_response_name_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:http-transfer-schema.sql:46: WARNING:  42P17: type output function http_response_name_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:http-transfer-schema.sql:46: NOTICE:  00000: CREATE TYPE http_response_name_refs (
  INPUT = http_response_name_refs_in_op,
  OUTPUT = http_response_name_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS http_response_name_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS http_response_name_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (http_response_name_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (http_response_name_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (http_response_name_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (http_response_name_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_refs_cmp(http_response_name_refs, http_response_name_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_refs_cmp(http_response_name_refs,http_response_name_refs) IS
'http_response_name_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_refs_lt(http_response_name_refs, http_response_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_refs_lt(http_response_name_refs,http_response_name_refs) IS
'http_response_name_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = http_response_name_refs,
	 rightarg = http_response_name_refs,
	 procedure = http_response_name_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_refs_le(http_response_name_refs, http_response_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_refs_le(http_response_name_refs,http_response_name_refs) IS
'http_response_name_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = http_response_name_refs,
	 rightarg = http_response_name_refs,
	 procedure = http_response_name_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_refs_eq(http_response_name_refs, http_response_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_refs_eq(http_response_name_refs,http_response_name_refs) IS
'http_response_name_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = http_response_name_refs,
	 rightarg = http_response_name_refs,
	 procedure = http_response_name_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_refs_neq(http_response_name_refs, http_response_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_refs_neq(http_response_name_refs,http_response_name_refs) IS
'http_response_name_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = http_response_name_refs,
	 rightarg = http_response_name_refs,
	 procedure = http_response_name_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_refs_ge(http_response_name_refs, http_response_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_refs_ge(http_response_name_refs,http_response_name_refs) IS
'http_response_name_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = http_response_name_refs,
	 rightarg = http_response_name_refs,
	 procedure = http_response_name_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_refs_gt(http_response_name_refs, http_response_name_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_refs_gt(http_response_name_refs,http_response_name_refs) IS
'http_response_name_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = http_response_name_refs,
	 rightarg = http_response_name_refs,
	 procedure = http_response_name_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS http_response_name_refs_ops
		DEFAULT FOR TYPE http_response_name_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       http_response_name_refs_cmp(http_response_name_refs, http_response_name_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE http_response_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE http_response_name_rows (
	ref http_response_name_refs PRIMARY KEY,
	name_ text NOT NULL UNIQUE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE http_response_name_rows IS
' - generated by try_create_ref_uniques_table(text,regtype,text,meta_columns[],text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_rows_57_exists(_ref http_response_name_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM http_response_name_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_rows_57_exists(http_response_name_refs) IS
'http_response_name_rows_57_exists(_ref): referential integrity test method for row of http_response_name_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_http_response_name_from_id(ref_ids)
RETURNS http_response_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''http_response_name_refs'', ''http_response_name_rows'', $1
	)::http_response_name_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_http_response_name_from_id(ref_ids) IS
'unchecked_http_response_name_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_nil()
RETURNS http_response_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_response_name_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_nil() IS
'http_response_name_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_name_ref_schema(text,boolean,boolean,regtype,regprocedure,text)
INSERT INTO http_response_name_rows (ref, name_) VALUES( http_response_name_nil(), '')
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS http_response_name_rows_no_update_trigger ON http_response_name_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: trigger "http_response_name_rows_no_update_trigger" for relation "http_response_name_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER http_response_name_rows_no_update_trigger
  BEFORE UPDATE ON http_response_name_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_response_name(_ref refs)
RETURNS http_response_name_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM http_response_name_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_response_name(refs) IS
'try_http_response_name(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_response_name_text(http_response_name_refs)
RETURNS text LANGUAGE SQL  STRICT AS
'SELECT name_ FROM http_response_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_response_name_text(http_response_name_refs) IS
'try_http_response_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_text(http_response_name_refs)
RETURNS text LANGUAGE SQL  AS
'SELECT non_null(try_http_response_name_text( $1),''http_response_name_text(http_response_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_text(http_response_name_refs) IS
'http_response_name_text(): return the text associated with the given reference by create_name_ref_text_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_response_name_length(http_response_name_refs)
RETURNS integer LANGUAGE SQL  STRICT AS
'SELECT octet_length(name_) FROM http_response_name_rows WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_response_name_length(http_response_name_refs) IS
'try_http_response_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_length(http_response_name_refs)
RETURNS integer LANGUAGE SQL  AS
'SELECT non_null(try_http_response_name_length( $1),''http_response_name_length(http_response_name_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_length(http_response_name_refs) IS
'http_response_name_length(): return length of text associated with given reference by create_name_ref_length_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_response_name(text)
RETURNS http_response_name_refs LANGUAGE SQL  STRICT AS
'SELECT CASE
	WHEN $1 = '''' THEN http_response_name_nil()
	ELSE ( SELECT ref FROM http_response_name_rows WHERE name_ = $1 )
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_response_name(text) IS
's6_http.try_http_response_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION find_http_response_name(text)
RETURNS http_response_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_http_response_name( $1),''find_http_response_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION find_http_response_name(text) IS
'find_http_response_name(): find reference to existing row by create_name_ref_find_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_response_name_in(text)
RETURNS http_response_name_refs LANGUAGE SQL  AS
'SELECT COALESCE(s6_http.try_http_response_name($1), ref_textin($1::text) )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_response_name_in(text) IS
'try_http_response_name_in(): try to parse input text as reference to existing row by try_create_name_ref_in_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE http_response_name_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE http_response_name_seq OWNED BY http_response_name_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_http_response_name_ref()
RETURNS http_response_name_refs LANGUAGE SQL  AS
'SELECT unchecked_http_response_name_from_id(nextval(''http_response_name_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_http_response_name_ref() IS
'next_http_response_name_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE http_response_name_rows ALTER COLUMN ref SET DEFAULT next_http_response_name_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_get_http_response_name(text)
RETURNS http_response_name_refs LANGUAGE PLPGSQL  STRICT AS
'DECLARE
	_name text := $1;
	maybe http_response_name_refs;
	kilroy_was_here boolean := false;
	this regprocedure := ''try_get_http_response_name(text)'';
BEGIN
	 IF _name IS NULL THEN RETURN http_response_name_nil(); END IF;
	
	LOOP
		maybe := try_http_response_name(_name);
		IF maybe IS NOT NULL THEN RETURN maybe; END IF;
		IF kilroy_was_here THEN
			RAISE EXCEPTION ''% looping with %'', this, $1;
		END IF;
		kilroy_was_here := true;
		BEGIN
			INSERT INTO http_response_name_rows(name_) VALUES (_name);
		EXCEPTION
			WHEN unique_violation THEN			-- another thread??
				RAISE NOTICE ''% % raised %!'', this, $1, ''unique_violation'';
		END;	
	END LOOP;
END';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_get_http_response_name(text) IS
'try_get_http_response_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION get_http_response_name(text)
RETURNS http_response_name_refs LANGUAGE SQL  AS
'SELECT non_null(try_get_http_response_name( $1),''get_http_response_name(text)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION get_http_response_name(text) IS
'get_http_response_name(): find or create row whose name = the normalized value by try_create_name_ref_get_func(text,regtype,regclass,text,regprocedure,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION declare_http_response_name(VARIADIC text[])
RETURNS integer LANGUAGE SQL  AS
'SELECT array_length( ARRAY(
				SELECT get_http_response_name(x) FROM unnest($1) x
			) )
		';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:46: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION declare_http_response_name(text[]) IS
'declare_http_response_name(): ensure rows exist with these values by create_name_ref_declare_func(text,regtype,regclass,text,regprocedure,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                                                                        create_name_ref_schema                                                                                                                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {unchecked_http_response_name_from_id(ref_ids),http_response_name_nil(),try_http_response_name(refs),http_response_name_text(http_response_name_refs),http_response_name_length(http_response_name_refs),find_http_response_name(text),try_http_response_name_in(text),next_http_response_name_ref(),get_http_response_name(text),declare_http_response_name(text[])}
(1 row)

COMMENT
psql:http-transfer-schema.sql:68: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_status()
RETURNS http_response_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_response_name_from_id(-6)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:68: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_status() IS
'http_response_name_status(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:68: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_doctype()
RETURNS http_response_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_response_name_from_id(-5)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:68: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_doctype() IS
'http_response_name_doctype(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:68: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_body_lo()
RETURNS http_response_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_response_name_from_id(-4)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:68: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_body_lo() IS
'http_response_name_body_lo(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:68: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_body_hex()
RETURNS http_response_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_response_name_from_id(-3)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:68: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_body_hex() IS
'http_response_name_body_hex(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:68: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_body_bin()
RETURNS http_response_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_response_name_from_id(-2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:68: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_body_bin() IS
'http_response_name_body_bin(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:68: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_name_body()
RETURNS http_response_name_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_response_name_from_id(-1)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:68: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_name_body() IS
'http_response_name_body(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
    create_const_ref_func    |    create_const_ref_func     |    create_const_ref_func     |     create_const_ref_func     |     create_const_ref_func     |   create_const_ref_func   
-----------------------------+------------------------------+------------------------------+-------------------------------+-------------------------------+---------------------------
 http_response_name_status() | http_response_name_doctype() | http_response_name_body_lo() | http_response_name_body_hex() | http_response_name_body_bin() | http_response_name_body()
(1 row)

INSERT 0 6
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE http_request_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: created shell type http_request_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION http_request_refs_in_op(cstring,oid,integer)
RETURNS http_request_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  42809: return type http_request_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:http-transfer-schema.sql:80: NOTICE:  00000: CREATED http_request_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION http_request_refs_out_op(http_request_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  42809: argument type http_request_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:http-transfer-schema.sql:80: NOTICE:  00000: CREATED http_request_refs_out_op(http_request_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE http_request_refs (
  INPUT = http_request_refs_in_op,
  OUTPUT = http_request_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: WARNING:  42P17: type input function http_request_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:http-transfer-schema.sql:80: WARNING:  42P17: type output function http_request_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:http-transfer-schema.sql:80: NOTICE:  00000: CREATE TYPE http_request_refs (
  INPUT = http_request_refs_in_op,
  OUTPUT = http_request_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS http_request_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS http_request_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (http_request_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (http_request_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (http_request_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (http_request_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_refs_cmp(http_request_refs, http_request_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_refs_cmp(http_request_refs,http_request_refs) IS
'http_request_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_refs_lt(http_request_refs, http_request_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_refs_lt(http_request_refs,http_request_refs) IS
'http_request_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = http_request_refs,
	 rightarg = http_request_refs,
	 procedure = http_request_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_refs_le(http_request_refs, http_request_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_refs_le(http_request_refs,http_request_refs) IS
'http_request_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = http_request_refs,
	 rightarg = http_request_refs,
	 procedure = http_request_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_refs_eq(http_request_refs, http_request_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_refs_eq(http_request_refs,http_request_refs) IS
'http_request_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = http_request_refs,
	 rightarg = http_request_refs,
	 procedure = http_request_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_refs_neq(http_request_refs, http_request_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_refs_neq(http_request_refs,http_request_refs) IS
'http_request_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = http_request_refs,
	 rightarg = http_request_refs,
	 procedure = http_request_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_refs_ge(http_request_refs, http_request_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_refs_ge(http_request_refs,http_request_refs) IS
'http_request_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = http_request_refs,
	 rightarg = http_request_refs,
	 procedure = http_request_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_refs_gt(http_request_refs, http_request_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_refs_gt(http_request_refs,http_request_refs) IS
'http_request_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = http_request_refs,
	 rightarg = http_request_refs,
	 procedure = http_request_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:80: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS http_request_refs_ops
		DEFAULT FOR TYPE http_request_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       http_request_refs_cmp(http_request_refs, http_request_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  create_ref_type  
-------------------
 http_request_refs
(1 row)

CREATE TABLE
psql:http-transfer-schema.sql:97: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_rows_58_exists(_ref http_request_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM http_request_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:97: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_rows_58_exists(http_request_refs) IS
'http_request_rows_58_exists(_ref): referential integrity test method for row of http_request_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:97: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS http_request_rows_no_update_trigger ON http_request_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:97: NOTICE:  00000: trigger "http_request_rows_no_update_trigger" for relation "http_request_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:97: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER http_request_rows_no_update_trigger
  BEFORE UPDATE ON http_request_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:97: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_http_request_from_id(ref_ids)
RETURNS http_request_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''http_request_refs'', ''http_request_rows'', $1
	)::http_request_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:97: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_http_request_from_id(ref_ids) IS
'unchecked_http_request_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:97: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_request_nil()
RETURNS http_request_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_request_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:97: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_request_nil() IS
'http_request_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:97: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_request(_ref refs)
RETURNS http_request_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM http_request_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:97: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_request(refs) IS
'try_http_request(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                            declare_ref_class_with_funcs                             
-------------------------------------------------------------------------------------
 {unchecked_http_request_from_id(ref_ids),http_request_nil(),try_http_request(refs)}
(1 row)

psql:http-transfer-schema.sql:98: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE http_request_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:98: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE http_request_seq OWNED BY http_request_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:98: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_http_request_ref()
RETURNS http_request_refs LANGUAGE SQL  AS
'SELECT unchecked_http_request_from_id(nextval(''http_request_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:98: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_http_request_ref() IS
'next_http_request_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:98: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE http_request_rows ALTER COLUMN ref SET DEFAULT next_http_request_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  create_simple_serial   
-------------------------
 next_http_request_ref()
(1 row)

psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE http_response_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: created shell type http_response_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION http_response_refs_in_op(cstring,oid,integer)
RETURNS http_response_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  42809: return type http_response_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:http-transfer-schema.sql:141: NOTICE:  00000: CREATED http_response_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION http_response_refs_out_op(http_response_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  42809: argument type http_response_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:http-transfer-schema.sql:141: NOTICE:  00000: CREATED http_response_refs_out_op(http_response_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE http_response_refs (
  INPUT = http_response_refs_in_op,
  OUTPUT = http_response_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: WARNING:  42P17: type input function http_response_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:http-transfer-schema.sql:141: WARNING:  42P17: type output function http_response_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:http-transfer-schema.sql:141: NOTICE:  00000: CREATE TYPE http_response_refs (
  INPUT = http_response_refs_in_op,
  OUTPUT = http_response_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS http_response_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS http_response_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (http_response_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (http_response_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (http_response_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (http_response_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_refs_cmp(http_response_refs, http_response_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_refs_cmp(http_response_refs,http_response_refs) IS
'http_response_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_refs_lt(http_response_refs, http_response_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_refs_lt(http_response_refs,http_response_refs) IS
'http_response_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = http_response_refs,
	 rightarg = http_response_refs,
	 procedure = http_response_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_refs_le(http_response_refs, http_response_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_refs_le(http_response_refs,http_response_refs) IS
'http_response_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = http_response_refs,
	 rightarg = http_response_refs,
	 procedure = http_response_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_refs_eq(http_response_refs, http_response_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_refs_eq(http_response_refs,http_response_refs) IS
'http_response_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = http_response_refs,
	 rightarg = http_response_refs,
	 procedure = http_response_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_refs_neq(http_response_refs, http_response_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_refs_neq(http_response_refs,http_response_refs) IS
'http_response_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = http_response_refs,
	 rightarg = http_response_refs,
	 procedure = http_response_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_refs_ge(http_response_refs, http_response_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_refs_ge(http_response_refs,http_response_refs) IS
'http_response_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = http_response_refs,
	 rightarg = http_response_refs,
	 procedure = http_response_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_refs_gt(http_response_refs, http_response_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_refs_gt(http_response_refs,http_response_refs) IS
'http_response_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = http_response_refs,
	 rightarg = http_response_refs,
	 procedure = http_response_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:141: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS http_response_refs_ops
		DEFAULT FOR TYPE http_response_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       http_response_refs_cmp(http_response_refs, http_response_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  create_ref_type   
--------------------
 http_response_refs
(1 row)

CREATE TABLE
psql:http-transfer-schema.sql:147: NOTICE:  00000: 
---> META create_key_insert_trigger_function_for(regclass,text)
CREATE OR REPLACE
FUNCTION http_response_keys_insert_trigger() RETURNS trigger
LANGUAGE plpgsql AS $body$ 
	BEGIN
		IF TG_OP = 'INSERT' THEN
			INSERT INTO http_response_keys VALUES ( NEW.ref );
			RETURN NEW;
		ELSE
			RAISE NOTICE 'Unexpected operation!';
			RETURN NULL;
		END IF;
	END
$body$
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:147: NOTICE:  00000: 
---> META create_key_delete_trigger_function_for(regclass,text)
CREATE OR REPLACE
FUNCTION http_response_keys_delete_trigger() RETURNS trigger
LANGUAGE plpgsql AS $body$ 
	BEGIN
		IF TG_OP = 'DELETE' THEN
			DELETE FROM http_response_keys WHERE key = OLD.ref;
		ELSE
			RAISE NOTICE 'Unexpected operation!';
		END IF;
		RETURN NULL;
	END
$body$
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_key_trigger_functions_for 
----------------------------------
 http_response_keys
(1 row)

CREATE TABLE
COMMENT
psql:http-transfer-schema.sql:167: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS http_response_rows_abstract_trigger ON http_response_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:167: NOTICE:  00000: trigger "http_response_rows_abstract_trigger" for relation "http_response_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:167: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER http_response_rows_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON http_response_rows
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  declare_abstract  
--------------------
 http_response_rows
(1 row)

CREATE TABLE
psql:http-transfer-schema.sql:173: NOTICE:  00000: 
---> META declare_abstract(regclass)
DROP TRIGGER IF EXISTS http_big_response_rows_abstract_trigger ON http_big_response_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:173: NOTICE:  00000: trigger "http_big_response_rows_abstract_trigger" for relation "http_big_response_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:173: NOTICE:  00000: 
---> META declare_abstract(regclass)
CREATE TRIGGER http_big_response_rows_abstract_trigger
  BEFORE INSERT OR UPDATE OR DELETE ON http_big_response_rows
  FOR EACH ROW EXECUTE PROCEDURE abstract_table_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
    declare_abstract    
------------------------
 http_big_response_rows
(1 row)

CREATE TABLE
psql:http-transfer-schema.sql:183: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_small_text_response_rows_59_exists(_ref http_response_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM http_small_text_response_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:183: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_small_text_response_rows_59_exists(http_response_refs) IS
'http_small_text_response_rows_59_exists(_ref): referential integrity test method for row of http_small_text_response_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:183: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS http_small_text_response_rows_no_update_trigger ON http_small_text_response_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:183: NOTICE:  00000: trigger "http_small_text_response_rows_no_update_trigger" for relation "http_small_text_response_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:183: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER http_small_text_response_rows_no_update_trigger
  BEFORE UPDATE ON http_small_text_response_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:183: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_http_small_text_response_from_id(ref_ids)
RETURNS http_response_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''http_response_refs'', ''http_small_text_response_rows'', $1
	)::http_response_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:183: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_http_small_text_response_from_id(ref_ids) IS
'unchecked_http_small_text_response_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:183: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_small_text_response_nil()
RETURNS http_response_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_small_text_response_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:183: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_small_text_response_nil() IS
'http_small_text_response_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:183: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_small_text_response(_ref refs)
RETURNS http_response_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM http_small_text_response_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:183: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_small_text_response(refs) IS
'try_http_small_text_response(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                              declare_ref_class_with_funcs                                               
-------------------------------------------------------------------------------------------------------------------------
 {unchecked_http_small_text_response_from_id(ref_ids),http_small_text_response_nil(),try_http_small_text_response(refs)}
(1 row)

psql:http-transfer-schema.sql:184: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE http_small_text_response_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:184: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE http_small_text_response_seq OWNED BY http_small_text_response_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:184: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_http_small_text_response_ref()
RETURNS http_response_refs LANGUAGE SQL  AS
'SELECT unchecked_http_small_text_response_from_id(nextval(''http_small_text_response_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:184: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_http_small_text_response_ref() IS
'next_http_small_text_response_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:184: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE http_small_text_response_rows ALTER COLUMN ref SET DEFAULT next_http_small_text_response_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
        create_simple_serial         
-------------------------------------
 next_http_small_text_response_ref()
(1 row)

psql:http-transfer-schema.sql:185: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS http_small_text_response_rows_key_insert_trigger ON http_small_text_response_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:185: NOTICE:  00000: trigger "http_small_text_response_rows_key_insert_trigger" for relation "http_small_text_response_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:185: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER http_small_text_response_rows_key_insert_trigger
  BEFORE INSERT ON http_small_text_response_rows
  FOR EACH ROW EXECUTE PROCEDURE http_response_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:185: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS http_small_text_response_rows_key_delete_trigger ON http_small_text_response_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:185: NOTICE:  00000: trigger "http_small_text_response_rows_key_delete_trigger" for relation "http_small_text_response_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:185: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER http_small_text_response_rows_key_delete_trigger
  BEFORE DELETE ON http_small_text_response_rows
  FOR EACH ROW EXECUTE PROCEDURE http_response_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
    create_key_triggers_for    
-------------------------------
 http_small_text_response_rows
(1 row)

psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE http_small_text_response_rows_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE http_small_text_response_rows_row_handles (
	handle handles NOT NULL UNIQUE,
	ref http_response_refs PRIMARY KEY  REFERENCES http_small_text_response_rows(ref)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE http_small_text_response_rows_row_handles IS
'row handles associated with http_small_text_response_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_small_text_response_rows_row_get_(handle handles, ref http_response_refs)
RETURNS http_small_text_response_rows LANGUAGE SQL  STRICT AS
'SELECT http_small_text_response_rows.*
 FROM http_small_text_response_rows,http_small_text_response_rows_row_handles
WHERE
http_small_text_response_rows_row_handles.handle=$1 AND http_small_text_response_rows_row_handles.ref=$2
AND
http_small_text_response_rows.ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_small_text_response_rows_row_get_(handles,http_response_refs) IS
'http_small_text_response_rows_row_get_(handle, ref): find existing handle for row of http_small_text_response_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_small_text_response_rows_row_set_(handle handles, ref http_response_refs)
RETURNS http_small_text_response_rows LANGUAGE SQL  STRICT AS
'
	INSERT INTO http_small_text_response_rows_row_handles VALUES ( $1, $2);
	SELECT http_small_text_response_rows_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_small_text_response_rows_row_set_(handles,http_response_refs) IS
'http_small_text_response_rows_row_set_(handle, ref): make new handle for row of http_small_text_response_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_small_text_response_rows_row(handle handles, ref http_response_refs)
RETURNS http_small_text_response_rows LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   http_small_text_response_rows_row_get_( $1, $2),
   http_small_text_response_rows_row_set_( $1, $2)
  )FROM debug_enter(
  ''http_small_text_response_rows_row(handles, http_response_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_small_text_response_rows_row(handles,http_response_refs) IS
'http_small_text_response_rows_row(handle, ref): ensure handle for row of http_small_text_response_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_small_text_response_rows_row(handle handles)
RETURNS http_small_text_response_rows LANGUAGE SQL  STRICT AS
'SELECT http_small_text_response_rows.*
  FROM http_small_text_response_rows, http_small_text_response_rows_row_handles
  WHERE $1 = http_small_text_response_rows_row_handles.handle
    AND http_small_text_response_rows.ref=http_small_text_response_rows_row_handles.ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_small_text_response_rows_row(handles) IS
's6_http.http_small_text_response_rows_row(handle): return a row given a handle for http_small_text_response_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_small_text_response_rows_ref(handle handles)
RETURNS http_response_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM http_small_text_response_rows_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_small_text_response_rows_ref(handles) IS
'http_small_text_response_rows_ref(handle): given a row handle for http_small_text_response_rows return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_small_text_response_rows_ref(handle handles, ref http_response_refs)
RETURNS http_response_refs LANGUAGE SQL  STRICT AS
'SELECT (http_small_text_response_rows_row( $1, $2)).ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:186: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_small_text_response_rows_ref(handles,http_response_refs) IS
's6_http.http_small_text_response_rows_ref(handle, ref): set handle for primary key of http_small_text_response_rows and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                             create_handles_for                                                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({http_small_text_response_rows_row_handles},"{""http_small_text_response_rows_row(handles,http_response_refs)"",http_small_text_response_rows_row(handles),http_small_text_response_rows_ref(handles),""http_small_text_response_rows_ref(handles,http_response_refs)""}")
(1 row)

CREATE TABLE
psql:http-transfer-schema.sql:196: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_big_text_response_rows_60_exists(_ref http_response_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM http_big_text_response_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:196: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_big_text_response_rows_60_exists(http_response_refs) IS
'http_big_text_response_rows_60_exists(_ref): referential integrity test method for row of http_big_text_response_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:196: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS http_big_text_response_rows_no_update_trigger ON http_big_text_response_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:196: NOTICE:  00000: trigger "http_big_text_response_rows_no_update_trigger" for relation "http_big_text_response_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:196: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER http_big_text_response_rows_no_update_trigger
  BEFORE UPDATE ON http_big_text_response_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:196: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_http_big_text_response_from_id(ref_ids)
RETURNS http_response_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''http_response_refs'', ''http_big_text_response_rows'', $1
	)::http_response_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:196: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_http_big_text_response_from_id(ref_ids) IS
'unchecked_http_big_text_response_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:196: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_big_text_response_nil()
RETURNS http_response_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_big_text_response_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:196: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_big_text_response_nil() IS
'http_big_text_response_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:196: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_big_text_response(_ref refs)
RETURNS http_response_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM http_big_text_response_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:196: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_big_text_response(refs) IS
'try_http_big_text_response(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                           declare_ref_class_with_funcs                                            
-------------------------------------------------------------------------------------------------------------------
 {unchecked_http_big_text_response_from_id(ref_ids),http_big_text_response_nil(),try_http_big_text_response(refs)}
(1 row)

psql:http-transfer-schema.sql:197: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE http_big_text_response_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:197: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE http_big_text_response_seq OWNED BY http_big_text_response_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:197: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_http_big_text_response_ref()
RETURNS http_response_refs LANGUAGE SQL  AS
'SELECT unchecked_http_big_text_response_from_id(nextval(''http_big_text_response_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:197: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_http_big_text_response_ref() IS
'next_http_big_text_response_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:197: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE http_big_text_response_rows ALTER COLUMN ref SET DEFAULT next_http_big_text_response_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
       create_simple_serial        
-----------------------------------
 next_http_big_text_response_ref()
(1 row)

psql:http-transfer-schema.sql:198: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS http_big_text_response_rows_key_insert_trigger ON http_big_text_response_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:198: NOTICE:  00000: trigger "http_big_text_response_rows_key_insert_trigger" for relation "http_big_text_response_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:198: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER http_big_text_response_rows_key_insert_trigger
  BEFORE INSERT ON http_big_text_response_rows
  FOR EACH ROW EXECUTE PROCEDURE http_response_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:198: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS http_big_text_response_rows_key_delete_trigger ON http_big_text_response_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:198: NOTICE:  00000: trigger "http_big_text_response_rows_key_delete_trigger" for relation "http_big_text_response_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:198: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER http_big_text_response_rows_key_delete_trigger
  BEFORE DELETE ON http_big_text_response_rows
  FOR EACH ROW EXECUTE PROCEDURE http_response_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   create_key_triggers_for   
-----------------------------
 http_big_text_response_rows
(1 row)

CREATE TABLE
COMMENT
psql:http-transfer-schema.sql:210: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_binary_response_rows_61_exists(_ref http_response_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM http_binary_response_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:210: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_binary_response_rows_61_exists(http_response_refs) IS
'http_binary_response_rows_61_exists(_ref): referential integrity test method for row of http_binary_response_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:210: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS http_binary_response_rows_no_update_trigger ON http_binary_response_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:210: NOTICE:  00000: trigger "http_binary_response_rows_no_update_trigger" for relation "http_binary_response_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:210: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER http_binary_response_rows_no_update_trigger
  BEFORE UPDATE ON http_binary_response_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:210: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_http_binary_response_from_id(ref_ids)
RETURNS http_response_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''http_response_refs'', ''http_binary_response_rows'', $1
	)::http_response_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:210: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_http_binary_response_from_id(ref_ids) IS
'unchecked_http_binary_response_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:210: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_binary_response_nil()
RETURNS http_response_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_binary_response_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:210: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_binary_response_nil() IS
'http_binary_response_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:210: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_binary_response(_ref refs)
RETURNS http_response_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM http_binary_response_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:210: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_binary_response(refs) IS
'try_http_binary_response(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                        declare_ref_class_with_funcs                                         
-------------------------------------------------------------------------------------------------------------
 {unchecked_http_binary_response_from_id(ref_ids),http_binary_response_nil(),try_http_binary_response(refs)}
(1 row)

psql:http-transfer-schema.sql:211: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE http_binary_response_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:211: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE http_binary_response_seq OWNED BY http_binary_response_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:211: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_http_binary_response_ref()
RETURNS http_response_refs LANGUAGE SQL  AS
'SELECT unchecked_http_binary_response_from_id(nextval(''http_binary_response_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:211: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_http_binary_response_ref() IS
'next_http_binary_response_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:211: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE http_binary_response_rows ALTER COLUMN ref SET DEFAULT next_http_binary_response_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
      create_simple_serial       
---------------------------------
 next_http_binary_response_ref()
(1 row)

psql:http-transfer-schema.sql:212: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS http_binary_response_rows_key_insert_trigger ON http_binary_response_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:212: NOTICE:  00000: trigger "http_binary_response_rows_key_insert_trigger" for relation "http_binary_response_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:212: NOTICE:  00000: 
---> META create_key_insert_trigger_for(regclass,regclass)
CREATE TRIGGER http_binary_response_rows_key_insert_trigger
  BEFORE INSERT ON http_binary_response_rows
  FOR EACH ROW EXECUTE PROCEDURE http_response_keys_insert_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:212: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
DROP TRIGGER IF EXISTS http_binary_response_rows_key_delete_trigger ON http_binary_response_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:212: NOTICE:  00000: trigger "http_binary_response_rows_key_delete_trigger" for relation "http_binary_response_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:212: NOTICE:  00000: 
---> META create_key_delete_trigger_for(regclass,regclass)
CREATE TRIGGER http_binary_response_rows_key_delete_trigger
  BEFORE DELETE ON http_binary_response_rows
  FOR EACH ROW EXECUTE PROCEDURE http_response_keys_delete_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  create_key_triggers_for  
---------------------------
 http_binary_response_rows
(1 row)

DELETE 0
CREATE FUNCTION
CREATE FUNCTION
psql:http-transfer-schema.sql:231: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_rows_62_exists(_ref http_response_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM http_response_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:231: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_rows_62_exists(http_response_refs) IS
'http_response_rows_62_exists(_ref): referential integrity test method for row of http_response_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:231: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS http_response_rows_no_update_trigger ON http_response_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:231: NOTICE:  00000: trigger "http_response_rows_no_update_trigger" for relation "http_response_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:http-transfer-schema.sql:231: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER http_response_rows_no_update_trigger
  BEFORE UPDATE ON http_response_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:231: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_http_response_from_id(ref_ids)
RETURNS http_response_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''http_response_refs'', ''http_response_rows'', $1
	)::http_response_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:231: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_http_response_from_id(ref_ids) IS
'unchecked_http_response_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:231: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_response_nil()
RETURNS http_response_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_response_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:231: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_response_nil() IS
'http_response_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:231: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_response(_ref refs)
RETURNS http_response_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM http_response_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:231: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_response(refs) IS
'try_http_response(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                              declare_ref_class_with_funcs                              
----------------------------------------------------------------------------------------
 {unchecked_http_response_from_id(ref_ids),http_response_nil(),try_http_response(refs)}
(1 row)

psql:http-transfer-schema.sql:232: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE http_response_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:232: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE http_response_seq OWNED BY http_response_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:232: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_http_response_ref()
RETURNS http_response_refs LANGUAGE SQL  AS
'SELECT unchecked_http_response_from_id(nextval(''http_response_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:232: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_http_response_ref() IS
'next_http_response_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:232: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE http_response_rows ALTER COLUMN ref SET DEFAULT next_http_response_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   create_simple_serial   
--------------------------
 next_http_response_ref()
(1 row)

INSERT 0 1
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE http_transfer_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: created shell type http_transfer_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION http_transfer_refs_in_op(cstring,oid,integer)
RETURNS http_transfer_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  42809: return type http_transfer_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:http-transfer-schema.sql:241: NOTICE:  00000: CREATED http_transfer_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION http_transfer_refs_out_op(http_transfer_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  42809: argument type http_transfer_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:http-transfer-schema.sql:241: NOTICE:  00000: CREATED http_transfer_refs_out_op(http_transfer_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE http_transfer_refs (
  INPUT = http_transfer_refs_in_op,
  OUTPUT = http_transfer_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: WARNING:  42P17: type input function http_transfer_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:http-transfer-schema.sql:241: WARNING:  42P17: type output function http_transfer_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:http-transfer-schema.sql:241: NOTICE:  00000: CREATE TYPE http_transfer_refs (
  INPUT = http_transfer_refs_in_op,
  OUTPUT = http_transfer_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS http_transfer_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS http_transfer_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (http_transfer_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (http_transfer_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (http_transfer_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (http_transfer_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_refs_cmp(http_transfer_refs, http_transfer_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_refs_cmp(http_transfer_refs,http_transfer_refs) IS
'http_transfer_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_refs_lt(http_transfer_refs, http_transfer_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_refs_lt(http_transfer_refs,http_transfer_refs) IS
'http_transfer_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = http_transfer_refs,
	 rightarg = http_transfer_refs,
	 procedure = http_transfer_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_refs_le(http_transfer_refs, http_transfer_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_refs_le(http_transfer_refs,http_transfer_refs) IS
'http_transfer_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = http_transfer_refs,
	 rightarg = http_transfer_refs,
	 procedure = http_transfer_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_refs_eq(http_transfer_refs, http_transfer_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_refs_eq(http_transfer_refs,http_transfer_refs) IS
'http_transfer_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = http_transfer_refs,
	 rightarg = http_transfer_refs,
	 procedure = http_transfer_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_refs_neq(http_transfer_refs, http_transfer_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_refs_neq(http_transfer_refs,http_transfer_refs) IS
'http_transfer_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = http_transfer_refs,
	 rightarg = http_transfer_refs,
	 procedure = http_transfer_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_refs_ge(http_transfer_refs, http_transfer_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_refs_ge(http_transfer_refs,http_transfer_refs) IS
'http_transfer_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = http_transfer_refs,
	 rightarg = http_transfer_refs,
	 procedure = http_transfer_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_refs_gt(http_transfer_refs, http_transfer_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_refs_gt(http_transfer_refs,http_transfer_refs) IS
'http_transfer_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = http_transfer_refs,
	 rightarg = http_transfer_refs,
	 procedure = http_transfer_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:241: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS http_transfer_refs_ops
		DEFAULT FOR TYPE http_transfer_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       http_transfer_refs_cmp(http_transfer_refs, http_transfer_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  create_ref_type   
--------------------
 http_transfer_refs
(1 row)

CREATE TABLE
COMMENT
COMMENT
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE http_transfer_rows_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE http_transfer_rows_row_handles (
	handle handles NOT NULL UNIQUE,
	ref http_transfer_refs PRIMARY KEY  REFERENCES http_transfer_rows(ref)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE http_transfer_rows_row_handles IS
'row handles associated with http_transfer_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_rows_row_get_(handle handles, ref http_transfer_refs)
RETURNS http_transfer_rows LANGUAGE SQL  STRICT AS
'SELECT http_transfer_rows.*
 FROM http_transfer_rows,http_transfer_rows_row_handles
WHERE
http_transfer_rows_row_handles.handle=$1 AND http_transfer_rows_row_handles.ref=$2
AND
http_transfer_rows.ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_rows_row_get_(handles,http_transfer_refs) IS
'http_transfer_rows_row_get_(handle, ref): find existing handle for row of http_transfer_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_rows_row_set_(handle handles, ref http_transfer_refs)
RETURNS http_transfer_rows LANGUAGE SQL  STRICT AS
'
	INSERT INTO http_transfer_rows_row_handles VALUES ( $1, $2);
	SELECT http_transfer_rows_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_rows_row_set_(handles,http_transfer_refs) IS
'http_transfer_rows_row_set_(handle, ref): make new handle for row of http_transfer_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_rows_row(handle handles, ref http_transfer_refs)
RETURNS http_transfer_rows LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   http_transfer_rows_row_get_( $1, $2),
   http_transfer_rows_row_set_( $1, $2)
  )FROM debug_enter(
  ''http_transfer_rows_row(handles, http_transfer_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_rows_row(handles,http_transfer_refs) IS
'http_transfer_rows_row(handle, ref): ensure handle for row of http_transfer_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_rows_row(handle handles)
RETURNS http_transfer_rows LANGUAGE SQL  STRICT AS
'SELECT http_transfer_rows.*
  FROM http_transfer_rows, http_transfer_rows_row_handles
  WHERE $1 = http_transfer_rows_row_handles.handle
    AND http_transfer_rows.ref=http_transfer_rows_row_handles.ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_rows_row(handles) IS
's6_http.http_transfer_rows_row(handle): return a row given a handle for http_transfer_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_rows_ref(handle handles)
RETURNS http_transfer_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM http_transfer_rows_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_rows_ref(handles) IS
'http_transfer_rows_ref(handle): given a row handle for http_transfer_rows return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_rows_ref(handle handles, ref http_transfer_refs)
RETURNS http_transfer_refs LANGUAGE SQL  STRICT AS
'SELECT (http_transfer_rows_row( $1, $2)).ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:269: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_rows_ref(handles,http_transfer_refs) IS
's6_http.http_transfer_rows_ref(handle, ref): set handle for primary key of http_transfer_rows and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                  create_handles_for                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({http_transfer_rows_row_handles},"{""http_transfer_rows_row(handles,http_transfer_refs)"",http_transfer_rows_row(handles),http_transfer_rows_ref(handles),""http_transfer_rows_ref(handles,http_transfer_refs)""}")
(1 row)

psql:http-transfer-schema.sql:273: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_rows_63_exists(_ref http_transfer_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM http_transfer_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:273: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_rows_63_exists(http_transfer_refs) IS
'http_transfer_rows_63_exists(_ref): referential integrity test method for row of http_transfer_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:273: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_http_transfer_from_id(ref_ids)
RETURNS http_transfer_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''http_transfer_refs'', ''http_transfer_rows'', $1
	)::http_transfer_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:273: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_http_transfer_from_id(ref_ids) IS
'unchecked_http_transfer_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:273: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION http_transfer_nil()
RETURNS http_transfer_refs LANGUAGE SQL  AS
'	SELECT unchecked_http_transfer_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:273: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION http_transfer_nil() IS
'http_transfer_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:273: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_http_transfer(_ref refs)
RETURNS http_transfer_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM http_transfer_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:273: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_http_transfer(refs) IS
'try_http_transfer(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                              declare_ref_class_with_funcs                              
----------------------------------------------------------------------------------------
 {unchecked_http_transfer_from_id(ref_ids),http_transfer_nil(),try_http_transfer(refs)}
(1 row)

psql:http-transfer-schema.sql:275: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE http_transfer_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:275: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE http_transfer_seq OWNED BY http_transfer_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:275: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_http_transfer_ref()
RETURNS http_transfer_refs LANGUAGE SQL  AS
'SELECT unchecked_http_transfer_from_id(nextval(''http_transfer_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:275: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_http_transfer_ref() IS
'next_http_transfer_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:http-transfer-schema.sql:275: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE http_transfer_rows ALTER COLUMN ref SET DEFAULT next_http_transfer_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   create_simple_serial   
--------------------------
 next_http_transfer_ref()
(1 row)

CREATE TABLE
 declare_http_request_name 
---------------------------
                        13
(1 row)

 declare_http_response_name 
----------------------------
                         13
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f http-transfer-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/http-transfer-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/http-transfer-code.sql-out-err /home/greg/.Wicci/Make/wicci1/http-transfer-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                        set_schema_path                        
---------------------------------------------------------------
 {s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                    set_file                                    
--------------------------------------------------------------------------------
 schema http-transfer-code.sql, module http-transfer-code, revision $Id, id 113
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
psql:http-transfer-code.sql:58: NOTICE:  00000: operator ^ does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP OPERATOR
CREATE OPERATOR
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
                      type_class_op_method                       
-----------------------------------------------------------------
 (58,"ref_text_op(refs)","http_request_text(http_request_refs)")
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
psql:http-transfer-code.sql:419: NOTICE:  00000: operator ^ does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP OPERATOR
CREATE OPERATOR
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE VIEW
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
                          type_class_op_method                           
-------------------------------------------------------------------------
 (59,"ref_text_op(refs)","http_small_response_text(http_response_refs)")
(1 row)

                         type_class_op_method                          
-----------------------------------------------------------------------
 (60,"ref_text_op(refs)","http_big_response_text(http_response_refs)")
(1 row)

                           type_class_op_method                           
--------------------------------------------------------------------------
 (61,"ref_text_op(refs)","http_binary_response_text(http_response_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
                       type_class_op_method                        
-------------------------------------------------------------------
 (63,"ref_text_op(refs)","http_transfer_text(http_transfer_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
psql:http-transfer-code.sql:867: NOTICE:  00000: operator ^ does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:450
DROP OPERATOR
CREATE OPERATOR
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f http-transfer-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/http-transfer-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/http-transfer-test.sql-out-err /home/greg/.Wicci/Make/wicci1/http-transfer-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                        set_schema_path                        
---------------------------------------------------------------
 {s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                    set_file                                    
--------------------------------------------------------------------------------
 schema http-transfer-test.sql, module http-transfer-test, revision $Id, id 114
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
           test_func            
--------------------------------
 find_http_request_name(citext)
(1 row)

                    test_func                     
--------------------------------------------------
 http_request_name_length(http_request_name_refs)
(1 row)

                    test_func                     
--------------------------------------------------
 http_request_name_length(http_request_name_refs)
(1 row)

CREATE FUNCTION
         test_func         
---------------------------
 first_http_requests(text)
(1 row)

         test_func         
---------------------------
 first_http_requests(text)
(1 row)

         test_func         
---------------------------
 first_http_requests(text)
(1 row)

         test_func         
---------------------------
 first_http_requests(text)
(1 row)

       test_func        
------------------------
 get_http_request(text)
(1 row)

         test_func         
---------------------------
 first_http_requests(text)
(1 row)

     test_func      
--------------------
 http_headers(text)
(1 row)

     test_func      
--------------------
 http_headers(text)
(1 row)

                coalesce                 
-----------------------------------------
 http_transfer_refs:http_transfer_rows:1
(1 row)

                   test_func                   
-----------------------------------------------
 http_transfer_header_text_(http_request_refs)
(1 row)

                               test_func                                
------------------------------------------------------------------------
 http_transfer_header_values(http_transfer_refs,http_request_name_refs)
(1 row)

                               test_func                                
------------------------------------------------------------------------
 http_transfer_header_values(http_transfer_refs,http_request_name_refs)
(1 row)

                coalesce                 
-----------------------------------------
 http_transfer_refs:http_transfer_rows:2
(1 row)

                coalesce                 
-----------------------------------------
 http_transfer_refs:http_transfer_rows:3
(1 row)

                               test_func                                
------------------------------------------------------------------------
 http_transfer_header_values(http_transfer_refs,http_request_name_refs)
(1 row)

                               test_func                                
------------------------------------------------------------------------
 http_transfer_header_values(http_transfer_refs,http_request_name_refs)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f s6-http.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/s6-http.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/s6-http.sql-out-err /home/greg/.Wicci/Make/wicci1/s6-http.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                        set_schema_path                        
---------------------------------------------------------------
 {s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                         set_file                         
----------------------------------------------------------
 schema s6-http.sql, module s6-http, revision $Id, id 115
(1 row)

make[1]: Leaving directory '/home/greg/Projects/Wicci/Core/S6_http'
make[1]: Entering directory '/home/greg/Projects/Wicci/Core/S7_wicci'
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
psql:settings.sql:9: NOTICE:  00000: 
---> META declare_system_schema(text)
CREATE SCHEMA s7_wicci
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

psql:wicci-schema.sql:3: NOTICE:  00000: new_schema_name_id(schema_names) s7_wicci ->  19 NEW!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                              set_file                              
--------------------------------------------------------------------
 schema wicci-schema.sql, module wicci-schema, revision $Id, id 116
(1 row)

psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE wicci_login_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: created shell type wicci_login_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION wicci_login_refs_in_op(cstring,oid,integer)
RETURNS wicci_login_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  42809: return type wicci_login_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:wicci-schema.sql:43: NOTICE:  00000: CREATED wicci_login_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION wicci_login_refs_out_op(wicci_login_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  42809: argument type wicci_login_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:wicci-schema.sql:43: NOTICE:  00000: CREATED wicci_login_refs_out_op(wicci_login_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE wicci_login_refs (
  INPUT = wicci_login_refs_in_op,
  OUTPUT = wicci_login_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: WARNING:  42P17: type input function wicci_login_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:wicci-schema.sql:43: WARNING:  42P17: type output function wicci_login_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:wicci-schema.sql:43: NOTICE:  00000: CREATE TYPE wicci_login_refs (
  INPUT = wicci_login_refs_in_op,
  OUTPUT = wicci_login_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS wicci_login_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS wicci_login_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (wicci_login_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (wicci_login_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (wicci_login_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (wicci_login_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_login_refs_cmp(wicci_login_refs, wicci_login_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_login_refs_cmp(wicci_login_refs,wicci_login_refs) IS
'wicci_login_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_login_refs_lt(wicci_login_refs, wicci_login_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_login_refs_lt(wicci_login_refs,wicci_login_refs) IS
'wicci_login_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = wicci_login_refs,
	 rightarg = wicci_login_refs,
	 procedure = wicci_login_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_login_refs_le(wicci_login_refs, wicci_login_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_login_refs_le(wicci_login_refs,wicci_login_refs) IS
'wicci_login_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = wicci_login_refs,
	 rightarg = wicci_login_refs,
	 procedure = wicci_login_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_login_refs_eq(wicci_login_refs, wicci_login_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_login_refs_eq(wicci_login_refs,wicci_login_refs) IS
'wicci_login_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = wicci_login_refs,
	 rightarg = wicci_login_refs,
	 procedure = wicci_login_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_login_refs_neq(wicci_login_refs, wicci_login_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_login_refs_neq(wicci_login_refs,wicci_login_refs) IS
'wicci_login_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = wicci_login_refs,
	 rightarg = wicci_login_refs,
	 procedure = wicci_login_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_login_refs_ge(wicci_login_refs, wicci_login_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_login_refs_ge(wicci_login_refs,wicci_login_refs) IS
'wicci_login_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = wicci_login_refs,
	 rightarg = wicci_login_refs,
	 procedure = wicci_login_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_login_refs_gt(wicci_login_refs, wicci_login_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_login_refs_gt(wicci_login_refs,wicci_login_refs) IS
'wicci_login_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = wicci_login_refs,
	 rightarg = wicci_login_refs,
	 procedure = wicci_login_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:43: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS wicci_login_refs_ops
		DEFAULT FOR TYPE wicci_login_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       wicci_login_refs_cmp(wicci_login_refs, wicci_login_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type  
------------------
 wicci_login_refs
(1 row)

psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE wicci_user_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: created shell type wicci_user_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION wicci_user_refs_in_op(cstring,oid,integer)
RETURNS wicci_user_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  42809: return type wicci_user_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:wicci-schema.sql:44: NOTICE:  00000: CREATED wicci_user_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION wicci_user_refs_out_op(wicci_user_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  42809: argument type wicci_user_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:wicci-schema.sql:44: NOTICE:  00000: CREATED wicci_user_refs_out_op(wicci_user_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE wicci_user_refs (
  INPUT = wicci_user_refs_in_op,
  OUTPUT = wicci_user_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: WARNING:  42P17: type input function wicci_user_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:wicci-schema.sql:44: WARNING:  42P17: type output function wicci_user_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:wicci-schema.sql:44: NOTICE:  00000: CREATE TYPE wicci_user_refs (
  INPUT = wicci_user_refs_in_op,
  OUTPUT = wicci_user_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS wicci_user_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS wicci_user_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (wicci_user_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (wicci_user_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (wicci_user_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (wicci_user_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_user_refs_cmp(wicci_user_refs, wicci_user_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_user_refs_cmp(wicci_user_refs,wicci_user_refs) IS
'wicci_user_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_user_refs_lt(wicci_user_refs, wicci_user_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_user_refs_lt(wicci_user_refs,wicci_user_refs) IS
'wicci_user_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = wicci_user_refs,
	 rightarg = wicci_user_refs,
	 procedure = wicci_user_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_user_refs_le(wicci_user_refs, wicci_user_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_user_refs_le(wicci_user_refs,wicci_user_refs) IS
'wicci_user_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = wicci_user_refs,
	 rightarg = wicci_user_refs,
	 procedure = wicci_user_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_user_refs_eq(wicci_user_refs, wicci_user_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_user_refs_eq(wicci_user_refs,wicci_user_refs) IS
'wicci_user_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = wicci_user_refs,
	 rightarg = wicci_user_refs,
	 procedure = wicci_user_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_user_refs_neq(wicci_user_refs, wicci_user_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_user_refs_neq(wicci_user_refs,wicci_user_refs) IS
'wicci_user_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = wicci_user_refs,
	 rightarg = wicci_user_refs,
	 procedure = wicci_user_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_user_refs_ge(wicci_user_refs, wicci_user_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_user_refs_ge(wicci_user_refs,wicci_user_refs) IS
'wicci_user_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = wicci_user_refs,
	 rightarg = wicci_user_refs,
	 procedure = wicci_user_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_user_refs_gt(wicci_user_refs, wicci_user_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_user_refs_gt(wicci_user_refs,wicci_user_refs) IS
'wicci_user_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = wicci_user_refs,
	 rightarg = wicci_user_refs,
	 procedure = wicci_user_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:44: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS wicci_user_refs_ops
		DEFAULT FOR TYPE wicci_user_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       wicci_user_refs_cmp(wicci_user_refs, wicci_user_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type 
-----------------
 wicci_user_refs
(1 row)

psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE wicci_group_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: created shell type wicci_group_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION wicci_group_refs_in_op(cstring,oid,integer)
RETURNS wicci_group_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  42809: return type wicci_group_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:wicci-schema.sql:45: NOTICE:  00000: CREATED wicci_group_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION wicci_group_refs_out_op(wicci_group_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  42809: argument type wicci_group_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:wicci-schema.sql:45: NOTICE:  00000: CREATED wicci_group_refs_out_op(wicci_group_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE wicci_group_refs (
  INPUT = wicci_group_refs_in_op,
  OUTPUT = wicci_group_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: WARNING:  42P17: type input function wicci_group_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:wicci-schema.sql:45: WARNING:  42P17: type output function wicci_group_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:wicci-schema.sql:45: NOTICE:  00000: CREATE TYPE wicci_group_refs (
  INPUT = wicci_group_refs_in_op,
  OUTPUT = wicci_group_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS wicci_group_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS wicci_group_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (wicci_group_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (wicci_group_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (wicci_group_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (wicci_group_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_group_refs_cmp(wicci_group_refs, wicci_group_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_group_refs_cmp(wicci_group_refs,wicci_group_refs) IS
'wicci_group_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_group_refs_lt(wicci_group_refs, wicci_group_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_group_refs_lt(wicci_group_refs,wicci_group_refs) IS
'wicci_group_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = wicci_group_refs,
	 rightarg = wicci_group_refs,
	 procedure = wicci_group_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_group_refs_le(wicci_group_refs, wicci_group_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_group_refs_le(wicci_group_refs,wicci_group_refs) IS
'wicci_group_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = wicci_group_refs,
	 rightarg = wicci_group_refs,
	 procedure = wicci_group_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_group_refs_eq(wicci_group_refs, wicci_group_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_group_refs_eq(wicci_group_refs,wicci_group_refs) IS
'wicci_group_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = wicci_group_refs,
	 rightarg = wicci_group_refs,
	 procedure = wicci_group_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_group_refs_neq(wicci_group_refs, wicci_group_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_group_refs_neq(wicci_group_refs,wicci_group_refs) IS
'wicci_group_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = wicci_group_refs,
	 rightarg = wicci_group_refs,
	 procedure = wicci_group_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_group_refs_ge(wicci_group_refs, wicci_group_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_group_refs_ge(wicci_group_refs,wicci_group_refs) IS
'wicci_group_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = wicci_group_refs,
	 rightarg = wicci_group_refs,
	 procedure = wicci_group_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_group_refs_gt(wicci_group_refs, wicci_group_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_group_refs_gt(wicci_group_refs,wicci_group_refs) IS
'wicci_group_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = wicci_group_refs,
	 rightarg = wicci_group_refs,
	 procedure = wicci_group_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:45: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS wicci_group_refs_ops
		DEFAULT FOR TYPE wicci_group_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       wicci_group_refs_cmp(wicci_group_refs, wicci_group_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 create_ref_type  
------------------
 wicci_group_refs
(1 row)

CREATE TABLE
COMMENT
COMMENT
psql:wicci-schema.sql:66: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE wicci_login_rows_row_notes CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:66: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE wicci_login_rows_row_notes (
	note_id attributed_note_ids,
	ref wicci_login_refs  REFERENCES wicci_login_rows(ref)ON DELETE CASCADE,
	 UNIQUE(note_id, ref)
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:66: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE wicci_login_rows_row_notes IS
'note ids associated with wicci_login_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:66: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:66: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:66: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION add_wicci_login_rows_note(note_id attributed_note_ids, ref wicci_login_refs)
RETURNS attributed_note_ids LANGUAGE SQL  STRICT AS
'INSERT INTO wicci_login_rows_row_notes VALUES ( $1, $2) RETURNING note_id';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:66: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION add_wicci_login_rows_note(attributed_note_ids,wicci_login_refs) IS
'add_wicci_login_rows_note(note_id, ref): create note for row of wicci_login_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:66: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION del_wicci_login_rows_note(note_id attributed_note_ids, ref wicci_login_refs)
RETURNS void LANGUAGE SQL  STRICT AS
'DELETE FROM wicci_login_rows_row_notes WHERE note_id=$1 AND ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:66: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION del_wicci_login_rows_note(attributed_note_ids,wicci_login_refs) IS
'del_wicci_login_rows_note(note_id, ref): delete note for row of wicci_login_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:66: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_login_rows_notes_set(ref wicci_login_refs)
RETURNS attributed_note_ids LANGUAGE SQL  STRICT AS
'SELECT note_id FROM wicci_login_rows_row_notes
WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:66: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_login_rows_notes_set(wicci_login_refs) IS
'wicci_login_rows_notes_set(ref): return SETOF notes for a row of wicci_login_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:66: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_login_rows_notes_array(ref wicci_login_refs)
RETURNS attributed_note_id_arrays LANGUAGE SQL  AS
'SELECT sort_notes_by_time( ARRAY(
  SELECT id::integer FROM wicci_login_rows_notes_set( $1) id
)::attributed_note_id_arrays )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:66: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_login_rows_notes_array(wicci_login_refs) IS
'wicci_login_rows_notes_array(ref): return array of notes for a row of wicci_login_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                            create_notes_for                                                                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({wicci_login_rows_row_notes},"{""add_wicci_login_rows_note(attributed_note_ids,wicci_login_refs)"",""del_wicci_login_rows_note(attributed_note_ids,wicci_login_refs)"",wicci_login_rows_notes_set(wicci_login_refs),wicci_login_rows_notes_array(wicci_login_refs)}")
(1 row)

psql:wicci-schema.sql:70: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_login_rows_64_exists(_ref wicci_login_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM wicci_login_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:70: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_login_rows_64_exists(wicci_login_refs) IS
'wicci_login_rows_64_exists(_ref): referential integrity test method for row of wicci_login_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:70: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_wicci_login_from_id(ref_ids)
RETURNS wicci_login_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''wicci_login_refs'', ''wicci_login_rows'', $1
	)::wicci_login_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:70: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_wicci_login_from_id(ref_ids) IS
'unchecked_wicci_login_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:70: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_login_nil()
RETURNS wicci_login_refs LANGUAGE SQL  AS
'	SELECT unchecked_wicci_login_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:70: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_login_nil() IS
'wicci_login_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:70: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_wicci_login(_ref refs)
RETURNS wicci_login_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM wicci_login_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:70: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_wicci_login(refs) IS
'try_wicci_login(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                           declare_ref_class_with_funcs                           
----------------------------------------------------------------------------------
 {unchecked_wicci_login_from_id(ref_ids),wicci_login_nil(),try_wicci_login(refs)}
(1 row)

INSERT 0 1
CREATE TABLE
COMMENT
COMMENT
COMMENT
psql:wicci-schema.sql:100: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE wicci_user_rows_row_notes CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:100: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE wicci_user_rows_row_notes (
	note_id attributed_note_ids,
	ref wicci_user_refs  REFERENCES wicci_user_rows(ref)ON DELETE CASCADE,
	 UNIQUE(note_id, ref)
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:100: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE wicci_user_rows_row_notes IS
'note ids associated with wicci_user_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:100: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:100: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION add_wicci_user_rows_note(note_id attributed_note_ids, ref wicci_user_refs)
RETURNS attributed_note_ids LANGUAGE SQL  STRICT AS
'INSERT INTO wicci_user_rows_row_notes VALUES ( $1, $2) RETURNING note_id';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION add_wicci_user_rows_note(attributed_note_ids,wicci_user_refs) IS
'add_wicci_user_rows_note(note_id, ref): create note for row of wicci_user_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION del_wicci_user_rows_note(note_id attributed_note_ids, ref wicci_user_refs)
RETURNS void LANGUAGE SQL  STRICT AS
'DELETE FROM wicci_user_rows_row_notes WHERE note_id=$1 AND ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION del_wicci_user_rows_note(attributed_note_ids,wicci_user_refs) IS
'del_wicci_user_rows_note(note_id, ref): delete note for row of wicci_user_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_user_rows_notes_set(ref wicci_user_refs)
RETURNS attributed_note_ids LANGUAGE SQL  STRICT AS
'SELECT note_id FROM wicci_user_rows_row_notes
WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_user_rows_notes_set(wicci_user_refs) IS
'wicci_user_rows_notes_set(ref): return SETOF notes for a row of wicci_user_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_user_rows_notes_array(ref wicci_user_refs)
RETURNS attributed_note_id_arrays LANGUAGE SQL  AS
'SELECT sort_notes_by_time( ARRAY(
  SELECT id::integer FROM wicci_user_rows_notes_set( $1) id
)::attributed_note_id_arrays )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:100: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_user_rows_notes_array(wicci_user_refs) IS
'wicci_user_rows_notes_array(ref): return array of notes for a row of wicci_user_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                       create_notes_for                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({wicci_user_rows_row_notes},"{""add_wicci_user_rows_note(attributed_note_ids,wicci_user_refs)"",""del_wicci_user_rows_note(attributed_note_ids,wicci_user_refs)"",wicci_user_rows_notes_set(wicci_user_refs),wicci_user_rows_notes_array(wicci_user_refs)}")
(1 row)

psql:wicci-schema.sql:103: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_user_rows_65_exists(_ref wicci_user_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM wicci_user_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:103: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_user_rows_65_exists(wicci_user_refs) IS
'wicci_user_rows_65_exists(_ref): referential integrity test method for row of wicci_user_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:103: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_wicci_user_from_id(ref_ids)
RETURNS wicci_user_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''wicci_user_refs'', ''wicci_user_rows'', $1
	)::wicci_user_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:103: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_wicci_user_from_id(ref_ids) IS
'unchecked_wicci_user_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:103: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_user_nil()
RETURNS wicci_user_refs LANGUAGE SQL  AS
'	SELECT unchecked_wicci_user_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:103: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_user_nil() IS
'wicci_user_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:103: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_wicci_user(_ref refs)
RETURNS wicci_user_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM wicci_user_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:103: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_wicci_user(refs) IS
'try_wicci_user(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                         declare_ref_class_with_funcs                          
-------------------------------------------------------------------------------
 {unchecked_wicci_user_from_id(ref_ids),wicci_user_nil(),try_wicci_user(refs)}
(1 row)

INSERT 0 1
CREATE TABLE
COMMENT
COMMENT
COMMENT
psql:wicci-schema.sql:140: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_group_rows_66_exists(_ref wicci_group_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM wicci_group_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:140: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_group_rows_66_exists(wicci_group_refs) IS
'wicci_group_rows_66_exists(_ref): referential integrity test method for row of wicci_group_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:140: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS wicci_group_rows_no_update_trigger ON wicci_group_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:140: NOTICE:  00000: trigger "wicci_group_rows_no_update_trigger" for relation "wicci_group_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:wicci-schema.sql:140: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER wicci_group_rows_no_update_trigger
  BEFORE UPDATE ON wicci_group_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:140: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_wicci_group_from_id(ref_ids)
RETURNS wicci_group_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''wicci_group_refs'', ''wicci_group_rows'', $1
	)::wicci_group_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:140: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_wicci_group_from_id(ref_ids) IS
'unchecked_wicci_group_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:140: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_group_nil()
RETURNS wicci_group_refs LANGUAGE SQL  AS
'	SELECT unchecked_wicci_group_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:140: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_group_nil() IS
'wicci_group_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:140: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_wicci_group(_ref refs)
RETURNS wicci_group_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM wicci_group_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:140: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_wicci_group(refs) IS
'try_wicci_group(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                           declare_ref_class_with_funcs                           
----------------------------------------------------------------------------------
 {unchecked_wicci_group_from_id(ref_ids),wicci_group_nil(),try_wicci_group(refs)}
(1 row)

psql:wicci-schema.sql:141: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE wicci_group_rows_row_notes CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:141: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE wicci_group_rows_row_notes (
	note_id attributed_note_ids,
	ref wicci_group_refs  REFERENCES wicci_group_rows(ref)ON DELETE CASCADE,
	 UNIQUE(note_id, ref)
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:141: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE wicci_group_rows_row_notes IS
'note ids associated with wicci_group_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:141: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:141: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION add_wicci_group_rows_note(note_id attributed_note_ids, ref wicci_group_refs)
RETURNS attributed_note_ids LANGUAGE SQL  STRICT AS
'INSERT INTO wicci_group_rows_row_notes VALUES ( $1, $2) RETURNING note_id';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION add_wicci_group_rows_note(attributed_note_ids,wicci_group_refs) IS
'add_wicci_group_rows_note(note_id, ref): create note for row of wicci_group_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION del_wicci_group_rows_note(note_id attributed_note_ids, ref wicci_group_refs)
RETURNS void LANGUAGE SQL  STRICT AS
'DELETE FROM wicci_group_rows_row_notes WHERE note_id=$1 AND ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION del_wicci_group_rows_note(attributed_note_ids,wicci_group_refs) IS
'del_wicci_group_rows_note(note_id, ref): delete note for row of wicci_group_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_group_rows_notes_set(ref wicci_group_refs)
RETURNS attributed_note_ids LANGUAGE SQL  STRICT AS
'SELECT note_id FROM wicci_group_rows_row_notes
WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_group_rows_notes_set(wicci_group_refs) IS
'wicci_group_rows_notes_set(ref): return SETOF notes for a row of wicci_group_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_group_rows_notes_array(ref wicci_group_refs)
RETURNS attributed_note_id_arrays LANGUAGE SQL  AS
'SELECT sort_notes_by_time( ARRAY(
  SELECT id::integer FROM wicci_group_rows_notes_set( $1) id
)::attributed_note_id_arrays )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:141: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_group_rows_notes_array(wicci_group_refs) IS
'wicci_group_rows_notes_array(ref): return array of notes for a row of wicci_group_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                            create_notes_for                                                                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({wicci_group_rows_row_notes},"{""add_wicci_group_rows_note(attributed_note_ids,wicci_group_refs)"",""del_wicci_group_rows_note(attributed_note_ids,wicci_group_refs)"",wicci_group_rows_notes_set(wicci_group_refs),wicci_group_rows_notes_array(wicci_group_refs)}")
(1 row)

INSERT 0 1
UPDATE 1
CREATE TABLE
COMMENT
COMMENT
INSERT 0 1
CREATE TABLE
COMMENT
CREATE TABLE
COMMENT
COMMENT
COMMENT
psql:wicci-schema.sql:197: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE wicci_site_rows_row_notes CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:197: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE wicci_site_rows_row_notes (
	note_id attributed_note_ids,
	ref doc_page_refs  REFERENCES wicci_site_rows(ref)ON DELETE CASCADE,
	 UNIQUE(note_id, ref)
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:197: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE wicci_site_rows_row_notes IS
'note ids associated with wicci_site_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:197: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:197: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:197: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION add_wicci_site_rows_note(note_id attributed_note_ids, ref doc_page_refs)
RETURNS attributed_note_ids LANGUAGE SQL  STRICT AS
'INSERT INTO wicci_site_rows_row_notes VALUES ( $1, $2) RETURNING note_id';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:197: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION add_wicci_site_rows_note(attributed_note_ids,doc_page_refs) IS
'add_wicci_site_rows_note(note_id, ref): create note for row of wicci_site_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:197: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION del_wicci_site_rows_note(note_id attributed_note_ids, ref doc_page_refs)
RETURNS void LANGUAGE SQL  STRICT AS
'DELETE FROM wicci_site_rows_row_notes WHERE note_id=$1 AND ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:197: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION del_wicci_site_rows_note(attributed_note_ids,doc_page_refs) IS
'del_wicci_site_rows_note(note_id, ref): delete note for row of wicci_site_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:197: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_site_rows_notes_set(ref doc_page_refs)
RETURNS attributed_note_ids LANGUAGE SQL  STRICT AS
'SELECT note_id FROM wicci_site_rows_row_notes
WHERE ref=$1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:197: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_site_rows_notes_set(doc_page_refs) IS
'wicci_site_rows_notes_set(ref): return SETOF notes for a row of wicci_site_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:197: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_site_rows_notes_array(ref doc_page_refs)
RETURNS attributed_note_id_arrays LANGUAGE SQL  AS
'SELECT sort_notes_by_time( ARRAY(
  SELECT id::integer FROM wicci_site_rows_notes_set( $1) id
)::attributed_note_id_arrays )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:197: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_site_rows_notes_array(doc_page_refs) IS
'wicci_site_rows_notes_array(ref): return array of notes for a row of wicci_site_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                   create_notes_for                                                                                                                    
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({wicci_site_rows_row_notes},"{""add_wicci_site_rows_note(attributed_note_ids,doc_page_refs)"",""del_wicci_site_rows_note(attributed_note_ids,doc_page_refs)"",wicci_site_rows_notes_set(doc_page_refs),wicci_site_rows_notes_array(doc_page_refs)}")
(1 row)

CREATE TABLE
COMMENT
COMMENT
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_shell_type(text)
CREATE TYPE wicci_transaction_refs
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: created shell type wicci_transaction_refs
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION wicci_transaction_refs_in_op(cstring,oid,integer)
RETURNS wicci_transaction_refs
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_in_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  42809: return type wicci_transaction_refs is only a shell
LOCATION:  compute_return_type, functioncmds.c:105
psql:wicci-schema.sql:216: NOTICE:  00000: CREATED wicci_transaction_refs_in_op(cstring,oid,integer)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_c_function(regtype,text,regtype[],text,text,text)
CREATE OR REPLACE 
FUNCTION wicci_transaction_refs_out_op(wicci_transaction_refs)
RETURNS cstring
LANGUAGE 'c' STRICT VOLATILE
AS 'spx.so', 'call_out_method';
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  42809: argument type wicci_transaction_refs is only a shell
LOCATION:  interpret_function_parameter_list, functioncmds.c:251
psql:wicci-schema.sql:216: NOTICE:  00000: CREATED wicci_transaction_refs_out_op(wicci_transaction_refs)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_ref_type(regtype,regprocedure,regprocedure)
CREATE TYPE wicci_transaction_refs (
  INPUT = wicci_transaction_refs_in_op,
  OUTPUT = wicci_transaction_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: WARNING:  42P17: type input function wicci_transaction_refs_in_op should not be volatile
LOCATION:  DefineType, typecmds.c:561
psql:wicci-schema.sql:216: WARNING:  42P17: type output function wicci_transaction_refs_out_op should not be volatile
LOCATION:  DefineType, typecmds.c:566
psql:wicci-schema.sql:216: NOTICE:  00000: CREATE TYPE wicci_transaction_refs (
  INPUT = wicci_transaction_refs_in_op,
  OUTPUT = wicci_transaction_refs_out_op,
  LIKE = refs,
  CATEGORY = 't'
)
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (unchecked_refs AS wicci_transaction_refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (unchecked_refs AS wicci_transaction_refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (wicci_transaction_refs AS refs) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (wicci_transaction_refs AS refs) WITHOUT FUNCTION AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP CAST (wicci_transaction_refs[] AS refs[]) CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_cast(regtype,regtype,regprocedure,boolean)
CREATE CAST (wicci_transaction_refs[] AS refs[]) WITH FUNCTION to_array_ref(anyarray) AS IMPLICIT
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_refs_cmp(wicci_transaction_refs, wicci_transaction_refs)
RETURNS integer LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_cmp($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_refs_cmp(wicci_transaction_refs,wicci_transaction_refs) IS
'wicci_transaction_refs_cmp(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_refs_lt(wicci_transaction_refs, wicci_transaction_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_lt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_refs_lt(wicci_transaction_refs,wicci_transaction_refs) IS
'wicci_transaction_refs_lt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR < (
	 leftarg = wicci_transaction_refs,
	 rightarg = wicci_transaction_refs,
	 procedure = wicci_transaction_refs_lt,
	 commutator = >,
	 negator = >=,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_refs_le(wicci_transaction_refs, wicci_transaction_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_le($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_refs_le(wicci_transaction_refs,wicci_transaction_refs) IS
'wicci_transaction_refs_le(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <= (
	 leftarg = wicci_transaction_refs,
	 rightarg = wicci_transaction_refs,
	 procedure = wicci_transaction_refs_le,
	 commutator = >=,
	 negator = >,
	 restrict = scalarltsel,
	 join = scalarltjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_refs_eq(wicci_transaction_refs, wicci_transaction_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_eq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_refs_eq(wicci_transaction_refs,wicci_transaction_refs) IS
'wicci_transaction_refs_eq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR = (
	 leftarg = wicci_transaction_refs,
	 rightarg = wicci_transaction_refs,
	 procedure = wicci_transaction_refs_eq,
	 commutator = =,
	 negator = <>,
	 restrict = eqsel,
	 join = eqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_refs_neq(wicci_transaction_refs, wicci_transaction_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_neq($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_refs_neq(wicci_transaction_refs,wicci_transaction_refs) IS
'wicci_transaction_refs_neq(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR <> (
	 leftarg = wicci_transaction_refs,
	 rightarg = wicci_transaction_refs,
	 procedure = wicci_transaction_refs_neq,
	 commutator = <>,
	 negator = =,
	 restrict = neqsel,
	 join = neqjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_refs_ge(wicci_transaction_refs, wicci_transaction_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_ge($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_refs_ge(wicci_transaction_refs,wicci_transaction_refs) IS
'wicci_transaction_refs_ge(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR >= (
	 leftarg = wicci_transaction_refs,
	 rightarg = wicci_transaction_refs,
	 procedure = wicci_transaction_refs_ge,
	 commutator = <=,
	 negator = <,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_refs_gt(wicci_transaction_refs, wicci_transaction_refs)
RETURNS boolean LANGUAGE SQL IMMUTABLE STRICT AS
'SELECT ref_gt($1::s1_refs.refs, $2::s1_refs.refs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_refs_gt(wicci_transaction_refs,wicci_transaction_refs) IS
'wicci_transaction_refs_gt(): gen_ref_op_func';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_ref_op(regtype,text,text,text,text,text)
CREATE OPERATOR > (
	 leftarg = wicci_transaction_refs,
	 rightarg = wicci_transaction_refs,
	 procedure = wicci_transaction_refs_gt,
	 commutator = <,
	 negator = <=,
	 restrict = scalargtsel,
	 join = scalargtjoinsel
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:216: NOTICE:  00000: 
---> META create_ref_op_class(regtype)
 CREATE OPERATOR CLASS wicci_transaction_refs_ops
		DEFAULT FOR TYPE wicci_transaction_refs USING btree AS
				OPERATOR        1       < ,
				OPERATOR        2       <= ,
				OPERATOR        3       = ,
				OPERATOR        4       >= ,
				OPERATOR        5       > ,
				FUNCTION        1       wicci_transaction_refs_cmp(wicci_transaction_refs, wicci_transaction_refs);
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
    create_ref_type     
------------------------
 wicci_transaction_refs
(1 row)

CREATE TABLE
COMMENT
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP TABLE wicci_transaction_rows_row_handles CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_table(meta_tables)
CREATE TABLE wicci_transaction_rows_row_handles (
	handle handles NOT NULL UNIQUE,
	ref wicci_transaction_refs PRIMARY KEY  REFERENCES wicci_transaction_rows(ref)ON DELETE CASCADE
);

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

COMMENT ON TABLE wicci_transaction_rows_row_handles IS
'row handles associated with wicci_transaction_rows rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_comment(meta_entities,text,text)

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_rows_row_get_(handle handles, ref wicci_transaction_refs)
RETURNS wicci_transaction_rows LANGUAGE SQL  STRICT AS
'SELECT wicci_transaction_rows.*
 FROM wicci_transaction_rows,wicci_transaction_rows_row_handles
WHERE
wicci_transaction_rows_row_handles.handle=$1 AND wicci_transaction_rows_row_handles.ref=$2
AND
wicci_transaction_rows.ref=$2';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_rows_row_get_(handles,wicci_transaction_refs) IS
'wicci_transaction_rows_row_get_(handle, ref): find existing handle for row of wicci_transaction_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_rows_row_set_(handle handles, ref wicci_transaction_refs)
RETURNS wicci_transaction_rows LANGUAGE SQL  STRICT AS
'
	INSERT INTO wicci_transaction_rows_row_handles VALUES ( $1, $2);
	SELECT wicci_transaction_rows_row_get_( $1, $2)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_rows_row_set_(handles,wicci_transaction_refs) IS
'wicci_transaction_rows_row_set_(handle, ref): make new handle for row of wicci_transaction_rows; do not call directly';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_rows_row(handle handles, ref wicci_transaction_refs)
RETURNS wicci_transaction_rows LANGUAGE SQL  STRICT AS
'SELECT COALESCE(
   wicci_transaction_rows_row_get_( $1, $2),
   wicci_transaction_rows_row_set_( $1, $2)
  )FROM debug_enter(
  ''wicci_transaction_rows_row(handles, wicci_transaction_refs)''::regprocedure,
  $2,
  $1
 )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_rows_row(handles,wicci_transaction_refs) IS
'wicci_transaction_rows_row(handle, ref): ensure handle for row of wicci_transaction_rows given the primary field values';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_rows_row(handle handles)
RETURNS wicci_transaction_rows LANGUAGE SQL  STRICT AS
'SELECT wicci_transaction_rows.*
  FROM wicci_transaction_rows, wicci_transaction_rows_row_handles
  WHERE $1 = wicci_transaction_rows_row_handles.handle
    AND wicci_transaction_rows.ref=wicci_transaction_rows_row_handles.ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_rows_row(handles) IS
's7_wicci.wicci_transaction_rows_row(handle): return a row given a handle for wicci_transaction_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_rows_ref(handle handles)
RETURNS wicci_transaction_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM wicci_transaction_rows_row_handles WHERE handle = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_rows_ref(handles) IS
'wicci_transaction_rows_ref(handle): given a row handle for wicci_transaction_rows return primary key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_rows_ref(handle handles, ref wicci_transaction_refs)
RETURNS wicci_transaction_refs LANGUAGE SQL  STRICT AS
'SELECT (wicci_transaction_rows_row( $1, $2)).ref';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:227: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_rows_ref(handles,wicci_transaction_refs) IS
's7_wicci.wicci_transaction_rows_ref(handle, ref): set handle for primary key of wicci_transaction_rows and return key';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                create_handles_for                                                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ({wicci_transaction_rows_row_handles},"{""wicci_transaction_rows_row(handles,wicci_transaction_refs)"",wicci_transaction_rows_row(handles),wicci_transaction_rows_ref(handles),""wicci_transaction_rows_ref(handles,wicci_transaction_refs)""}")
(1 row)

psql:wicci-schema.sql:228: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_rows_67_exists(_ref wicci_transaction_refs)
RETURNS boolean LANGUAGE SQL  STRICT AS
'SELECT EXISTS( SELECT ref FROM wicci_transaction_rows
WHERE $1 = ref )';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:228: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_rows_67_exists(wicci_transaction_refs) IS
'wicci_transaction_rows_67_exists(_ref): referential integrity test method for row of wicci_transaction_rows';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:228: NOTICE:  00000: 
---> META declare_monotonic(regclass)
DROP TRIGGER IF EXISTS wicci_transaction_rows_no_update_trigger ON wicci_transaction_rows CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:228: NOTICE:  00000: trigger "wicci_transaction_rows_no_update_trigger" for relation "wicci_transaction_rows" does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
psql:wicci-schema.sql:228: NOTICE:  00000: 
---> META declare_monotonic(regclass)
CREATE TRIGGER wicci_transaction_rows_no_update_trigger
  BEFORE UPDATE ON wicci_transaction_rows
  FOR EACH ROW EXECUTE PROCEDURE prohibition_trigger()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:228: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION unchecked_wicci_transaction_from_id(ref_ids)
RETURNS wicci_transaction_refs LANGUAGE SQL  AS
'	SELECT unchecked_ref(
		''wicci_transaction_refs'', ''wicci_transaction_rows'', $1
	)::wicci_transaction_refs';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:228: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION unchecked_wicci_transaction_from_id(ref_ids) IS
'unchecked_wicci_transaction_from_id(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:228: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_transaction_nil()
RETURNS wicci_transaction_refs LANGUAGE SQL  AS
'	SELECT unchecked_wicci_transaction_from_id(0)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:228: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_transaction_nil() IS
'wicci_transaction_nil(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:228: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_wicci_transaction(_ref refs)
RETURNS wicci_transaction_refs LANGUAGE SQL  STRICT AS
'SELECT ref FROM wicci_transaction_rows WHERE ref::refs = $1';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:228: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_wicci_transaction(refs) IS
'try_wicci_transaction(_ref): by try_create_ref_downcast_func(text,regtype,regclass,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                    declare_ref_class_with_funcs                                    
----------------------------------------------------------------------------------------------------
 {unchecked_wicci_transaction_from_id(ref_ids),wicci_transaction_nil(),try_wicci_transaction(refs)}
(1 row)

psql:wicci-schema.sql:229: NOTICE:  00000: 
---> META drop_entity(meta_entities,text)
DROP SEQUENCE wicci_transaction_seq CASCADE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:229: NOTICE:  00000: 
---> META create_sequence(text,regclass,text,bigint,bigint,integer,bigint,boolean)
CREATE SEQUENCE wicci_transaction_seq OWNED BY wicci_transaction_rows.ref MINVALUE 1 MAXVALUE 140737488355327 CYCLE
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:229: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION next_wicci_transaction_ref()
RETURNS wicci_transaction_refs LANGUAGE SQL  AS
'SELECT unchecked_wicci_transaction_from_id(nextval(''wicci_transaction_seq'')::ref_ids)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:229: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION next_wicci_transaction_ref() IS
'next_wicci_transaction_ref(): by create_func(meta_funcs)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:229: NOTICE:  00000: 
---> META create_simple_serial(regclass,text,bigint,bigint)
ALTER TABLE wicci_transaction_rows ALTER COLUMN ref SET DEFAULT next_wicci_transaction_ref()
<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
     create_simple_serial     
------------------------------
 next_wicci_transaction_ref()
(1 row)

CREATE TABLE
COMMENT
CREATE TABLE
COMMENT
CREATE TABLE
COMMENT
CREATE TYPE
CREATE TABLE
COMMENT
COMMENT
CREATE TABLE
COMMENT
psql:wicci-schema.sql:308: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env_wicci_login(env_refs)
RETURNS wicci_login_refs LANGUAGE SQL STABLE STRICT AS
'SELECT try_wicci_login( env_name_value( $1, ''env_wicci_login''))';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:308: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env_wicci_login(env_refs) IS
'try_env_wicci_login(): lookup value associated with name env_wicci_login in given environment and return as value of type wicci_login_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:308: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_wicci_login(env_refs)
RETURNS wicci_login_refs LANGUAGE SQL STABLE AS
'SELECT non_null(try_env_wicci_login( $1),''env_wicci_login(env_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:308: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_wicci_login(env_refs) IS
'env_wicci_login(): lookup value associated with name env_wicci_login in given environment and return as value of type wicci_login_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:308: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_wicci_login(env_refs, wicci_login_refs)
RETURNS env_pair_stati LANGUAGE SQL  AS
'	SELECT env_add_binding( $1, ''env_wicci_login''::name_refs, $2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:308: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_wicci_login(env_refs,wicci_login_refs) IS
's7_wicci.env_wicci_login(): associate name env_wicci_login in given environment with value of type wicci_login_refs and return the status by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
         create_env_name_type_func          
--------------------------------------------
 env_wicci_login(env_refs,wicci_login_refs)
(1 row)

psql:wicci-schema.sql:311: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env_wicci_user(env_refs)
RETURNS wicci_user_refs LANGUAGE SQL STABLE STRICT AS
'SELECT try_wicci_user( env_name_value( $1, ''env_wicci_user''))';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:311: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env_wicci_user(env_refs) IS
'try_env_wicci_user(): lookup value associated with name env_wicci_user in given environment and return as value of type wicci_user_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:311: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_wicci_user(env_refs)
RETURNS wicci_user_refs LANGUAGE SQL STABLE AS
'SELECT non_null(try_env_wicci_user( $1),''env_wicci_user(env_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:311: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_wicci_user(env_refs) IS
'env_wicci_user(): lookup value associated with name env_wicci_user in given environment and return as value of type wicci_user_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:311: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_wicci_user(env_refs, wicci_user_refs)
RETURNS env_pair_stati LANGUAGE SQL  AS
'	SELECT env_add_binding( $1, ''env_wicci_user''::name_refs, $2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:311: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_wicci_user(env_refs,wicci_user_refs) IS
's7_wicci.env_wicci_user(): associate name env_wicci_user in given environment with value of type wicci_user_refs and return the status by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
        create_env_name_type_func         
------------------------------------------
 env_wicci_user(env_refs,wicci_user_refs)
(1 row)

psql:wicci-schema.sql:314: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env_http_transfer(env_refs)
RETURNS http_transfer_refs LANGUAGE SQL STABLE STRICT AS
'SELECT try_http_transfer( env_name_value( $1, ''env_http_transfer''))';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:314: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env_http_transfer(env_refs) IS
'try_env_http_transfer(): lookup value associated with name env_http_transfer in given environment and return as value of type http_transfer_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:314: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_http_transfer(env_refs)
RETURNS http_transfer_refs LANGUAGE SQL STABLE AS
'SELECT non_null(try_env_http_transfer( $1),''env_http_transfer(env_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:314: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_http_transfer(env_refs) IS
'env_http_transfer(): lookup value associated with name env_http_transfer in given environment and return as value of type http_transfer_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:314: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_http_transfer(env_refs, http_transfer_refs)
RETURNS env_pair_stati LANGUAGE SQL  AS
'	SELECT env_add_binding( $1, ''env_http_transfer''::name_refs, $2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:314: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_http_transfer(env_refs,http_transfer_refs) IS
's7_wicci.env_http_transfer(): associate name env_http_transfer in given environment with value of type http_transfer_refs and return the status by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
           create_env_name_type_func            
------------------------------------------------
 env_http_transfer(env_refs,http_transfer_refs)
(1 row)

psql:wicci-schema.sql:317: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env_http_url(env_refs)
RETURNS uri_refs LANGUAGE SQL STABLE STRICT AS
'SELECT try_uri( env_name_value( $1, ''env_http_url''))';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:317: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env_http_url(env_refs) IS
'try_env_http_url(): lookup value associated with name env_http_url in given environment and return as value of type uri_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:317: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_http_url(env_refs)
RETURNS uri_refs LANGUAGE SQL STABLE AS
'SELECT non_null(try_env_http_url( $1),''env_http_url(env_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:317: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_http_url(env_refs) IS
'env_http_url(): lookup value associated with name env_http_url in given environment and return as value of type uri_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:317: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_http_url(env_refs, uri_refs)
RETURNS env_pair_stati LANGUAGE SQL  AS
'	SELECT env_add_binding( $1, ''env_http_url''::name_refs, $2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:317: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_http_url(env_refs,uri_refs) IS
's7_wicci.env_http_url(): associate name env_http_url in given environment with value of type uri_refs and return the status by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
    create_env_name_type_func    
---------------------------------
 env_http_url(env_refs,uri_refs)
(1 row)

psql:wicci-schema.sql:320: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env_page_url(env_refs)
RETURNS page_uri_refs LANGUAGE SQL STABLE STRICT AS
'SELECT try_page_uri( env_name_value( $1, ''env_page_url''))';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:320: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env_page_url(env_refs) IS
'try_env_page_url(): lookup value associated with name env_page_url in given environment and return as value of type page_uri_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:320: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_page_url(env_refs)
RETURNS page_uri_refs LANGUAGE SQL STABLE AS
'SELECT non_null(try_env_page_url( $1),''env_page_url(env_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:320: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_page_url(env_refs) IS
'env_page_url(): lookup value associated with name env_page_url in given environment and return as value of type page_uri_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:320: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_page_url(env_refs, page_uri_refs)
RETURNS env_pair_stati LANGUAGE SQL  AS
'	SELECT env_add_binding( $1, ''env_page_url''::name_refs, $2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:320: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_page_url(env_refs,page_uri_refs) IS
's7_wicci.env_page_url(): associate name env_page_url in given environment with value of type page_uri_refs and return the status by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
      create_env_name_type_func       
--------------------------------------
 env_page_url(env_refs,page_uri_refs)
(1 row)

psql:wicci-schema.sql:323: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env_doc_page(env_refs)
RETURNS doc_page_refs LANGUAGE SQL STABLE STRICT AS
'SELECT try_doc_page( env_name_value( $1, ''env_doc_page''))';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:323: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env_doc_page(env_refs) IS
'try_env_doc_page(): lookup value associated with name env_doc_page in given environment and return as value of type doc_page_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:323: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_doc_page(env_refs)
RETURNS doc_page_refs LANGUAGE SQL STABLE AS
'SELECT non_null(try_env_doc_page( $1),''env_doc_page(env_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:323: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_doc_page(env_refs) IS
'env_doc_page(): lookup value associated with name env_doc_page in given environment and return as value of type doc_page_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:323: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_doc_page(env_refs, doc_page_refs)
RETURNS env_pair_stati LANGUAGE SQL  AS
'	SELECT env_add_binding( $1, ''env_doc_page''::name_refs, $2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:323: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_doc_page(env_refs,doc_page_refs) IS
's7_wicci.env_doc_page(): associate name env_doc_page in given environment with value of type doc_page_refs and return the status by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
      create_env_name_type_func       
--------------------------------------
 env_doc_page(env_refs,doc_page_refs)
(1 row)

psql:wicci-schema.sql:326: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION try_env_cookies(env_refs)
RETURNS uri_query_refs LANGUAGE SQL STABLE STRICT AS
'SELECT try_uri_query( env_name_value( $1, ''env_cookies''))';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:326: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION try_env_cookies(env_refs) IS
'try_env_cookies(): lookup value associated with name env_cookies in given environment and return as value of type uri_query_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:326: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_cookies(env_refs)
RETURNS uri_query_refs LANGUAGE SQL STABLE AS
'SELECT non_null(try_env_cookies( $1),''env_cookies(env_refs)'')';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:326: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_cookies(env_refs) IS
'env_cookies(): lookup value associated with name env_cookies in given environment and return as value of type uri_query_refs by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:326: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION env_cookies(env_refs, uri_query_refs)
RETURNS env_pair_stati LANGUAGE SQL  AS
'	SELECT env_add_binding( $1, ''env_cookies''::name_refs, $2)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-schema.sql:326: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION env_cookies(env_refs,uri_query_refs) IS
's7_wicci.env_cookies(): associate name env_cookies in given environment with value of type uri_query_refs and return the status by create_env_name_type_func(text,regtype)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
      create_env_name_type_func       
--------------------------------------
 env_cookies(env_refs,uri_query_refs)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-code.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                            set_file                            
----------------------------------------------------------------
 schema wicci-code.sql, module wicci-code, revision $Id, id 117
(1 row)

CREATE FUNCTION
COMMENT
psql:wicci-code.sql:30: NOTICE:  00000: cast from type wicci_login_refs to type entity_uri_refs does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP CAST
CREATE CAST
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
     type_class_in     
-----------------------
 try_wicci_login(text)
(1 row)

           type_class_out           
------------------------------------
 wicci_login_text(wicci_login_refs)
(1 row)

                     type_class_op_method                      
---------------------------------------------------------------
 (64,"ref_text_op(refs)","wicci_login_text(wicci_login_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
psql:wicci-code.sql:211: NOTICE:  00000: cast from type wicci_user_refs to type entity_uri_refs does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP CAST
CREATE CAST
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
    type_class_in     
----------------------
 try_wicci_user(text)
(1 row)

          type_class_out          
----------------------------------
 wicci_user_text(wicci_user_refs)
(1 row)

                    type_class_op_method                     
-------------------------------------------------------------
 (65,"ref_text_op(refs)","wicci_user_text(wicci_user_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
psql:wicci-code.sql:379: NOTICE:  00000: cast from type wicci_group_refs to type entity_uri_refs does not exist, skipping
LOCATION:  does_not_exist_skipping, dropcmds.c:452
DROP CAST
CREATE CAST
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
     type_class_in     
-----------------------
 try_wicci_group(text)
(1 row)

           type_class_out           
------------------------------------
 wicci_group_text(wicci_group_refs)
(1 row)

                     type_class_op_method                      
---------------------------------------------------------------
 (66,"ref_text_op(refs)","wicci_group_text(wicci_group_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE VIEW
CREATE VIEW
CREATE VIEW
CREATE VIEW
CREATE VIEW
CREATE VIEW
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
                        type_class_op_method                         
---------------------------------------------------------------------
 (67,"ref_text_op(refs)","wicci_trans_text(wicci_transaction_refs)")
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE VIEW
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
               create_dynamic_kind                
--------------------------------------------------
 doc_node_kind_refs:dynamic_doc_node_kind_rows:50
(1 row)

psql:wicci-code.sql:1229: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_user_status_text(
_nil doc_node_kind_refs, _env env_refs, _crefs crefs, _chiln doc_node_refs[]
)
RETURNS text LANGUAGE SQL  AS
'
	SELECT xml_tag_attrs_body(
		''em'', ARRAY[''style'', ''color:red''], ''user status'', xml_nl($2, $3)
	)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-code.sql:1229: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_user_status_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[]) IS
'wicci_user_status_text(_nil, _env, _crefs, _chiln): nil ref, doc env, etc. --> special dynamic text value by create_dynamic_kind_text_method(text,text,regtype,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                      create_dynamic_kind_text_method                      
---------------------------------------------------------------------------
 wicci_user_status_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

               create_dynamic_kind                
--------------------------------------------------
 doc_node_kind_refs:dynamic_doc_node_kind_rows:51
(1 row)

psql:wicci-code.sql:1243: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_user_name_text(
_nil doc_node_kind_refs, _env env_refs, _crefs crefs, _chiln doc_node_refs[]
)
RETURNS text LANGUAGE SQL  AS
'
	SELECT wicci_user_text(try_env_wicci_user($2))
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-code.sql:1243: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_user_name_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[]) IS
'wicci_user_name_text(_nil, _env, _crefs, _chiln): nil ref, doc env, etc. --> special dynamic text value by create_dynamic_kind_text_method(text,text,regtype,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                     create_dynamic_kind_text_method                     
-------------------------------------------------------------------------
 wicci_user_name_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

               create_dynamic_kind                
--------------------------------------------------
 doc_node_kind_refs:dynamic_doc_node_kind_rows:52
(1 row)

psql:wicci-code.sql:1249: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_login_name_text(
_nil doc_node_kind_refs, _env env_refs, _crefs crefs, _chiln doc_node_refs[]
)
RETURNS text LANGUAGE SQL  AS
'
	SELECT wicci_login_text(try_env_wicci_login($2))
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-code.sql:1249: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_login_name_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[]) IS
'wicci_login_name_text(_nil, _env, _crefs, _chiln): nil ref, doc env, etc. --> special dynamic text value by create_dynamic_kind_text_method(text,text,regtype,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                     create_dynamic_kind_text_method                      
--------------------------------------------------------------------------
 wicci_login_name_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

               create_dynamic_kind                
--------------------------------------------------
 doc_node_kind_refs:dynamic_doc_node_kind_rows:53
(1 row)

psql:wicci-code.sql:1257: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_group_list_text(
_nil doc_node_kind_refs, _env env_refs, _crefs crefs, _chiln doc_node_refs[]
)
RETURNS text LANGUAGE SQL  AS
'
	SELECT wicci_grouplist_text(
		try_env_wicci_user($2), $2, $3
	)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-code.sql:1257: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_group_list_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[]) IS
'wicci_group_list_text(_nil, _env, _crefs, _chiln): nil ref, doc env, etc. --> special dynamic text value by create_dynamic_kind_text_method(text,text,regtype,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                     create_dynamic_kind_text_method                      
--------------------------------------------------------------------------
 wicci_group_list_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

               create_dynamic_kind                
--------------------------------------------------
 doc_node_kind_refs:dynamic_doc_node_kind_rows:54
(1 row)

psql:wicci-code.sql:1265: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_changes_list_text(
_nil doc_node_kind_refs, _env env_refs, _crefs crefs, _chiln doc_node_refs[]
)
RETURNS text LANGUAGE SQL  AS
'
	SELECT wicci_changelist_text(
		try_env_wicci_user($2), $2, $3
	)
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-code.sql:1265: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_changes_list_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[]) IS
'wicci_changes_list_text(_nil, _env, _crefs, _chiln): nil ref, doc env, etc. --> special dynamic text value by create_dynamic_kind_text_method(text,text,regtype,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                      create_dynamic_kind_text_method                       
----------------------------------------------------------------------------
 wicci_changes_list_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

               create_dynamic_kind                
--------------------------------------------------
 doc_node_kind_refs:dynamic_doc_node_kind_rows:55
(1 row)

psql:wicci-code.sql:1273: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_this_domain_text(
_nil doc_node_kind_refs, _env env_refs, _crefs crefs, _chiln doc_node_refs[]
)
RETURNS text LANGUAGE SQL  AS
'
	SELECT uri_domain_name_text(domain_) FROM page_uri_rows
	WHERE ref IS NOT DISTINCT FROM
  try_page_uri(try_env_http_url($2))
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-code.sql:1273: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_this_domain_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[]) IS
'wicci_this_domain_text(_nil, _env, _crefs, _chiln): nil ref, doc env, etc. --> special dynamic text value by create_dynamic_kind_text_method(text,text,regtype,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                      create_dynamic_kind_text_method                      
---------------------------------------------------------------------------
 wicci_this_domain_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

               create_dynamic_kind                
--------------------------------------------------
 doc_node_kind_refs:dynamic_doc_node_kind_rows:56
(1 row)

psql:wicci-code.sql:1281: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_this_path_text(
_nil doc_node_kind_refs, _env env_refs, _crefs crefs, _chiln doc_node_refs[]
)
RETURNS text LANGUAGE SQL  AS
'
	SELECT uri_path_name_text(path_) FROM page_uri_rows
	WHERE ref IS NOT DISTINCT FROM
  try_page_uri(try_env_http_url($2))
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-code.sql:1281: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_this_path_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[]) IS
'wicci_this_path_text(_nil, _env, _crefs, _chiln): nil ref, doc env, etc. --> special dynamic text value by create_dynamic_kind_text_method(text,text,regtype,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                     create_dynamic_kind_text_method                     
-------------------------------------------------------------------------
 wicci_this_path_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

               create_dynamic_kind                
--------------------------------------------------
 doc_node_kind_refs:dynamic_doc_node_kind_rows:57
(1 row)

psql:wicci-code.sql:1296: NOTICE:  00000: 
---> META create_func_(meta_funcs)
CREATE  OR REPLACE
FUNCTION wicci_js_library_text(
_nil doc_node_kind_refs, _env env_refs, _crefs crefs, _chiln doc_node_refs[]
)
RETURNS text LANGUAGE SQL  AS
'
	SELECT E''<script type="text/javascript"
 src="//ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js"></script>
<script type="text/javascript">
  $(document).ready(function() {
    // This is more like it!
  });
</script>
''::text
';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-code.sql:1296: NOTICE:  00000: 
---> META create_func_(meta_funcs)

COMMENT ON FUNCTION wicci_js_library_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[]) IS
'wicci_js_library_text(_nil, _env, _crefs, _chiln): nil ref, doc env, etc. --> special dynamic text value by create_dynamic_kind_text_method(text,text,regtype,text)';

<--- META
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                     create_dynamic_kind_text_method                      
--------------------------------------------------------------------------
 wicci_js_library_text(doc_node_kind_refs,env_refs,crefs,doc_node_refs[])
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
cd /home/greg/.Wicci/XFiles; make all && touch /home/greg/.Wicci/Make/wicci1/xfiles
make[2]: Entering directory '/home/greg/Projects/Wicci/XFiles'
(cd HTML && make all)
make[3]: Entering directory '/home/greg/Projects/Wicci/XFiles/HTML'
set -o pipefail ; doc-to-sql -d wicci1  hello.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/hello.html-out-err && mv /home/greg/.Wicci/Make/wicci1/hello.html-out-err /home/greg/.Wicci/Make/wicci1/hello.html-out
doc-to-sql: process_input hello.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): hello.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:
title--><title id="title" />
title.1-->Hello World!h1--><h1 class="title" id="h1" />
h1.1-->Hello World!
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  coalesce  
------------
 hello.html
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  index.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/index.html-out-err && mv /home/greg/.Wicci/Make/wicci1/index.html-out-err /home/greg/.Wicci/Make/wicci1/index.html-out
doc-to-sql: process_input index.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): index.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:
title--><title />
title.1-->Welcome to the Wicci System!welcome--><h1 id="welcome" class="title" />
welcome.1-->Welcome to the Wicci System!features--><ol id="features" />
features.1--><li />
features.1.1-->Users can edit web pages to create new views!features.2--><li />
features.2.1-->Views can be shared with friends, groups and sites.features.3--><li />
features.3.1-->Group moderators can merge contributions into group views.features.4--><li />
features.4.1-->Content owners and their delegates can merge contributions into official views.
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  coalesce  
------------
 index.html
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  test.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/test.html-out-err && mv /home/greg/.Wicci/Make/wicci1/test.html-out-err /home/greg/.Wicci/Make/wicci1/test.html-out
doc-to-sql: process_input test.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): test.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:
title--><title id="title" />
h1--><h1 id="h1" class="title" />
h1-text-->Welcome to the Wicci System!ol--><ol />
li-1--><li />
li-1-text-->Users can edit web pages to create new views!li-2--><li />
li-2-text-->Views can be shared with friends, groups and sites.li-3--><li />
li-3-text-->Group moderators can merge contributions into group views.li-4--><li />
li-4-text-->Content owners and their delegates can merge contributions into official views.
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 coalesce  
-----------
 test.html
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.html-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.html-out-err /home/greg/.Wicci/Make/wicci1/wicci.html-out
doc-to-sql: process_input wicci.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): wicci.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:

LOCATION:  exec_stmt_raise, pl_exec.c:3165
  coalesce  
------------
 wicci.html
(1 row)

make[3]: Leaving directory '/home/greg/Projects/Wicci/XFiles/HTML'
(cd Domain; make all)
make[3]: Entering directory '/home/greg/Projects/Wicci/XFiles/Domain'
set -o pipefail ; doc-to-sql -d wicci1  wicci.org/index.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+index.html-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+index.html-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+index.html-out
doc-to-sql: process_input wicci.org/index.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): wicci.org/index.html =  html xml_tree_return: <html xmlns="http://www.w3.org/1999/xhtml" />
prefix_uri_pairs:
id_node_pairs:
wi_panel--><div id="wi_panel" class="Wi" style="display: none" />
wi_home--><div id="wi_home" class="Wi_jigger Wi" title="My Account" />
wi_view_1--><div id="wi_view_1" class="Wi_jigger Wi" title="Default Vew" />
wi_view_2--><div id="wi_view_2" class="Wi_jigger Wi" title="Sher" />
wi_view_3--><div id="wi_view_3" class="Wi_jigger Wi" title="Lynn" />
wi_view_4--><div id="wi_view_4" class="Wi_jigger Wi" title="Burning Man" />
wi_toggle_parent--><div id="wi_toggle_parent" class="Wi" style="width:54px;height:50px;" />
wi_toggle--><div id="wi_toggle" class="Wi_jigger Wi" title="Wicci Toggle" />
upper--><div id="upper" />
middle--><div id="middle" />
middle_left--><div id="middle_left" />
middle_right--><div id="middle_right" />
shy1--><dl id="shy1" class="shy" />
wi_stash--><div id="wi_stash" class="Wi_hide Wi" />
wi_inline_controls_stash--><dd id="wi_inline_controls_stash" />
wi_inline_controls--><span id="wi_inline_controls" class="Wi_controls Wi" />
wi_inline_controls_0--><span id="wi_inline_controls_0" class="Wi_group Wi" />
wi_inline_move_up--><span id="wi_inline_move_up" class="Wi_move Wi_control Wi" title="move up" />
wi_inline_move_dn--><span id="wi_inline_move_dn" class="Wi_move Wi_control Wi" title="move down" />
wi_inline_more_0--><span id="wi_inline_more_0" class="Wi_next Wi_control Wi" title="more" />
wi_inline_controls_1--><span id="wi_inline_controls_1" class="Wi_group Wi" />
wi_inline_back_1--><span id="wi_inline_back_1" class="Wi_prev Wi_control Wi" title="back" />
wi_inline_add_above--><span id="wi_inline_add_above" class="Wi_add Wi_control Wi" title="add above" />
wi_inline_add_below--><span id="wi_inline_add_below" class="Wi_add Wi_control Wi" title="add below" />
wi_inline_delete--><span id="wi_inline_delete" class="Wi_delete Wi_control Wi" title="delete" />

LOCATION:  exec_stmt_raise, pl_exec.c:3165
       coalesce       
----------------------
 wicci.org/index.html
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Entity-Icon/friend-kas.jpg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-kas.jpg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-kas.jpg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-kas.jpg-out
doc-to-sql: process_input wicci.org/Entity-Icon/friend-kas.jpg jpeg wicci1
SELECT get_uri_path_name('wicci.org/Entity-Icon/friend-kas.jpg');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

          get_uri_path_name           
--------------------------------------
 wicci.org/Entity-Icon/friend-kas.jpg
(1 row)

doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Entity-Icon/friend-kas.jpg', 'jpeg', '/home/greg/.Wicci/XFiles/Domain', '2251');
WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Entity-Icon/friend-kas.jpg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
        get_static_xfiles_page        
--------------------------------------
 wicci.org/Entity-Icon/friend-kas.jpg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Entity-Icon/friend-camber.jpg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-camber.jpg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-camber.jpg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-camber.jpg-out
doc-to-sql: process_input wicci.org/Entity-Icon/friend-camber.jpg jpeg wicci1
SELECT get_uri_path_name('wicci.org/Entity-Icon/friend-camber.jpg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Entity-Icon/friend-camber.jpg', 'jpeg', '/home/greg/.Wicci/XFiles/Domain', '2612');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

            get_uri_path_name            
-----------------------------------------
 wicci.org/Entity-Icon/friend-camber.jpg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Entity-Icon/friend-camber.jpg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
         get_static_xfiles_page          
-----------------------------------------
 wicci.org/Entity-Icon/friend-camber.jpg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Entity-Icon/friend-helen.jpg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-helen.jpg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-helen.jpg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-helen.jpg-out
doc-to-sql: process_input wicci.org/Entity-Icon/friend-helen.jpg jpeg wicci1
SELECT get_uri_path_name('wicci.org/Entity-Icon/friend-helen.jpg');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Entity-Icon/friend-helen.jpg', 'jpeg', '/home/greg/.Wicci/XFiles/Domain', '2782');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

           get_uri_path_name            
----------------------------------------
 wicci.org/Entity-Icon/friend-helen.jpg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Entity-Icon/friend-helen.jpg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
         get_static_xfiles_page         
----------------------------------------
 wicci.org/Entity-Icon/friend-helen.jpg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Entity-Icon/friend-kennita.jpg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-kennita.jpg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-kennita.jpg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-kennita.jpg-out
doc-to-sql: process_input wicci.org/Entity-Icon/friend-kennita.jpg jpeg wicci1
SELECT get_uri_path_name('wicci.org/Entity-Icon/friend-kennita.jpg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Entity-Icon/friend-kennita.jpg', 'jpeg', '/home/greg/.Wicci/XFiles/Domain', '2407');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

            get_uri_path_name             
------------------------------------------
 wicci.org/Entity-Icon/friend-kennita.jpg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Entity-Icon/friend-kennita.jpg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
          get_static_xfiles_page          
------------------------------------------
 wicci.org/Entity-Icon/friend-kennita.jpg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Entity-Icon/friend-lynn.jpg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-lynn.jpg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-lynn.jpg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-lynn.jpg-out
doc-to-sql: process_input wicci.org/Entity-Icon/friend-lynn.jpg jpeg wicci1
SELECT get_uri_path_name('wicci.org/Entity-Icon/friend-lynn.jpg');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Entity-Icon/friend-lynn.jpg', 'jpeg', '/home/greg/.Wicci/XFiles/Domain', '2517');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

           get_uri_path_name           
---------------------------------------
 wicci.org/Entity-Icon/friend-lynn.jpg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Entity-Icon/friend-lynn.jpg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
        get_static_xfiles_page         
---------------------------------------
 wicci.org/Entity-Icon/friend-lynn.jpg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Entity-Icon/friend-halcyon.jpg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-halcyon.jpg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-halcyon.jpg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-halcyon.jpg-out
doc-to-sql: process_input wicci.org/Entity-Icon/friend-halcyon.jpg jpeg wicci1
SELECT get_uri_path_name('wicci.org/Entity-Icon/friend-halcyon.jpg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Entity-Icon/friend-halcyon.jpg', 'jpeg', '/home/greg/.Wicci/XFiles/Domain', '2940');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

            get_uri_path_name             
------------------------------------------
 wicci.org/Entity-Icon/friend-halcyon.jpg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Entity-Icon/friend-halcyon.jpg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
          get_static_xfiles_page          
------------------------------------------
 wicci.org/Entity-Icon/friend-halcyon.jpg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Entity-Icon/group-bm.jpg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+group-bm.jpg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+group-bm.jpg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+group-bm.jpg-out
doc-to-sql: process_input wicci.org/Entity-Icon/group-bm.jpg jpeg wicci1
SELECT get_uri_path_name('wicci.org/Entity-Icon/group-bm.jpg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Entity-Icon/group-bm.jpg', 'jpeg', '/home/greg/.Wicci/XFiles/Domain', '2592');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

         get_uri_path_name          
------------------------------------
 wicci.org/Entity-Icon/group-bm.jpg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Entity-Icon/group-bm.jpg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
       get_static_xfiles_page       
------------------------------------
 wicci.org/Entity-Icon/group-bm.jpg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Entity-Icon/friend-rubah.jpg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-rubah.jpg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-rubah.jpg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-rubah.jpg-out
doc-to-sql: process_input wicci.org/Entity-Icon/friend-rubah.jpg jpeg wicci1
SELECT get_uri_path_name('wicci.org/Entity-Icon/friend-rubah.jpg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Entity-Icon/friend-rubah.jpg', 'jpeg', '/home/greg/.Wicci/XFiles/Domain', '2317');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

           get_uri_path_name            
----------------------------------------
 wicci.org/Entity-Icon/friend-rubah.jpg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Entity-Icon/friend-rubah.jpg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
         get_static_xfiles_page         
----------------------------------------
 wicci.org/Entity-Icon/friend-rubah.jpg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Entity-Icon/friend-ed.jpg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-ed.jpg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-ed.jpg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-ed.jpg-out
doc-to-sql: process_input wicci.org/Entity-Icon/friend-ed.jpg jpeg wicci1
SELECT get_uri_path_name('wicci.org/Entity-Icon/friend-ed.jpg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Entity-Icon/friend-ed.jpg', 'jpeg', '/home/greg/.Wicci/XFiles/Domain', '2598');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

          get_uri_path_name          
-------------------------------------
 wicci.org/Entity-Icon/friend-ed.jpg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Entity-Icon/friend-ed.jpg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
       get_static_xfiles_page        
-------------------------------------
 wicci.org/Entity-Icon/friend-ed.jpg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Entity-Icon/friend-sher.jpg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-sher.jpg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-sher.jpg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-sher.jpg-out
doc-to-sql: process_input wicci.org/Entity-Icon/friend-sher.jpg jpeg wicci1
SELECT get_uri_path_name('wicci.org/Entity-Icon/friend-sher.jpg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Entity-Icon/friend-sher.jpg', 'jpeg', '/home/greg/.Wicci/XFiles/Domain', '2225');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

           get_uri_path_name           
---------------------------------------
 wicci.org/Entity-Icon/friend-sher.jpg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Entity-Icon/friend-sher.jpg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
        get_static_xfiles_page         
---------------------------------------
 wicci.org/Entity-Icon/friend-sher.jpg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Entity-Icon/deadbeef.jpg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+deadbeef.jpg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+deadbeef.jpg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+deadbeef.jpg-out
doc-to-sql: process_input wicci.org/Entity-Icon/deadbeef.jpg jpeg wicci1
SELECT get_uri_path_name('wicci.org/Entity-Icon/deadbeef.jpg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Entity-Icon/deadbeef.jpg', 'jpeg', '/home/greg/.Wicci/XFiles/Domain', '4');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

         get_uri_path_name          
------------------------------------
 wicci.org/Entity-Icon/deadbeef.jpg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Entity-Icon/deadbeef.jpg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
       get_static_xfiles_page       
------------------------------------
 wicci.org/Entity-Icon/deadbeef.jpg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Entity-Icon/friend-zhahai.jpg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-zhahai.jpg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-zhahai.jpg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Entity-Icon+friend-zhahai.jpg-out
doc-to-sql: process_input wicci.org/Entity-Icon/friend-zhahai.jpg jpeg wicci1
SELECT get_uri_path_name('wicci.org/Entity-Icon/friend-zhahai.jpg');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Entity-Icon/friend-zhahai.jpg', 'jpeg', '/home/greg/.Wicci/XFiles/Domain', '2388');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

            get_uri_path_name            
-----------------------------------------
 wicci.org/Entity-Icon/friend-zhahai.jpg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Entity-Icon/friend-zhahai.jpg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
         get_static_xfiles_page          
-----------------------------------------
 wicci.org/Entity-Icon/friend-zhahai.jpg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/hello-jpg.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+hello-jpg.html-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+hello-jpg.html-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+hello-jpg.html-out
doc-to-sql: process_input wicci.org/hello-jpg.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): wicci.org/hello-jpg.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:

LOCATION:  exec_stmt_raise, pl_exec.c:3165
         coalesce         
--------------------------
 wicci.org/hello-jpg.html
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/CSS/wicci4screen.css 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+CSS+wicci4screen.css-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+CSS+wicci4screen.css-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+CSS+wicci4screen.css-out
doc-to-sql: process_input wicci.org/CSS/wicci4screen.css css wicci1
SELECT get_uri_path_name('wicci.org/CSS/wicci4screen.css');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/CSS/wicci4screen.css', 'css', '/home/greg/.Wicci/XFiles/Domain', '3665');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

       get_uri_path_name        
--------------------------------
 wicci.org/CSS/wicci4screen.css
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/CSS/wicci4screen.css file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
     get_static_xfiles_page     
--------------------------------
 wicci.org/CSS/wicci4screen.css
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/CSS/wicci.css 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+CSS+wicci.css-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+CSS+wicci.css-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+CSS+wicci.css-out
doc-to-sql: process_input wicci.org/CSS/wicci.css css wicci1
SELECT get_uri_path_name('wicci.org/CSS/wicci.css');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/CSS/wicci.css', 'css', '/home/greg/.Wicci/XFiles/Domain', '1462');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

    get_uri_path_name    
-------------------------
 wicci.org/CSS/wicci.css
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/CSS/wicci.css file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 get_static_xfiles_page  
-------------------------
 wicci.org/CSS/wicci.css
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/CSS/own-name.css 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+CSS+own-name.css-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+CSS+own-name.css-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+CSS+own-name.css-out
doc-to-sql: process_input wicci.org/CSS/own-name.css css wicci1
SELECT get_uri_path_name('wicci.org/CSS/own-name.css');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

doc-to-sql: SELECT get_static_xfiles_page('wicci.org/CSS/own-name.css', 'css', '/home/greg/.Wicci/XFiles/Domain', '13');
 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

     get_uri_path_name      
----------------------------
 wicci.org/CSS/own-name.css
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/CSS/own-name.css file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page   
----------------------------
 wicci.org/CSS/own-name.css
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/CSS/hello.css 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+CSS+hello.css-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+CSS+hello.css-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+CSS+hello.css-out
doc-to-sql: process_input wicci.org/CSS/hello.css css wicci1
SELECT get_uri_path_name('wicci.org/CSS/hello.css');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/CSS/hello.css', 'css', '/home/greg/.Wicci/XFiles/Domain', '39');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

    get_uri_path_name    
-------------------------
 wicci.org/CSS/hello.css
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/CSS/hello.css file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 get_static_xfiles_page  
-------------------------
 wicci.org/CSS/hello.css
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/hello-svg.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+hello-svg.html-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+hello-svg.html-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+hello-svg.html-out
doc-to-sql: process_input wicci.org/hello-svg.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): wicci.org/hello-svg.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:
wi_home--><div id="wi_home" class="Wi_Jigger Wi" title="My Account" />

LOCATION:  exec_stmt_raise, pl_exec.c:3165
         coalesce         
--------------------------
 wicci.org/hello-svg.html
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/JS/jquery.js 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+JS+jquery.js-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+JS+jquery.js-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+JS+jquery.js-out
doc-to-sql: process_input wicci.org/JS/jquery.js javascript wicci1
SELECT get_uri_path_name('wicci.org/JS/jquery.js');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/JS/jquery.js', 'javascript', '/home/greg/.Wicci/XFiles/Domain', '252881');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

   get_uri_path_name    
------------------------
 wicci.org/JS/jquery.js
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/JS/jquery.js file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 get_static_xfiles_page 
------------------------
 wicci.org/JS/jquery.js
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/JS/joose.js 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+JS+joose.js-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+JS+joose.js-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+JS+joose.js-out
doc-to-sql: process_input wicci.org/JS/joose.js javascript wicci1
SELECT get_uri_path_name('wicci.org/JS/joose.js');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/JS/joose.js', 'javascript', '/home/greg/.Wicci/XFiles/Domain', '115747');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

   get_uri_path_name   
-----------------------
 wicci.org/JS/joose.js
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/JS/joose.js file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 get_static_xfiles_page 
------------------------
 wicci.org/JS/joose.js
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/JS/underscore.js 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+JS+underscore.js-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+JS+underscore.js-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+JS+underscore.js-out
doc-to-sql: process_input wicci.org/JS/underscore.js javascript wicci1
SELECT get_uri_path_name('wicci.org/JS/underscore.js');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/JS/underscore.js', 'javascript', '/home/greg/.Wicci/XFiles/Domain', '35168');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

     get_uri_path_name      
----------------------------
 wicci.org/JS/underscore.js
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/JS/underscore.js file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page   
----------------------------
 wicci.org/JS/underscore.js
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/JS/hello-cljs.js 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+JS+hello-cljs.js-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+JS+hello-cljs.js-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+JS+hello-cljs.js-out
doc-to-sql: process_input wicci.org/JS/hello-cljs.js javascript wicci1
SELECT get_uri_path_name('wicci.org/JS/hello-cljs.js');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/JS/hello-cljs.js', 'javascript', '/home/greg/.Wicci/XFiles/Domain', '839586');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

     get_uri_path_name      
----------------------------
 wicci.org/JS/hello-cljs.js
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/JS/hello-cljs.js file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page   
----------------------------
 wicci.org/JS/hello-cljs.js
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/JS/cci.js 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+JS+cci.js-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+JS+cci.js-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+JS+cci.js-out
doc-to-sql: process_input wicci.org/JS/cci.js javascript wicci1
SELECT get_uri_path_name('wicci.org/JS/cci.js');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/JS/cci.js', 'javascript', '/home/greg/.Wicci/XFiles/Domain', '24534');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

  get_uri_path_name  
---------------------
 wicci.org/JS/cci.js
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/JS/cci.js file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 get_static_xfiles_page 
------------------------
 wicci.org/JS/cci.js
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/JS/tooltip.js 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+JS+tooltip.js-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+JS+tooltip.js-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+JS+tooltip.js-out
doc-to-sql: process_input wicci.org/JS/tooltip.js javascript wicci1
SELECT get_uri_path_name('wicci.org/JS/tooltip.js');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/JS/tooltip.js', 'javascript', '/home/greg/.Wicci/XFiles/Domain', '5820');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

    get_uri_path_name    
-------------------------
 wicci.org/JS/tooltip.js
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/JS/tooltip.js file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 get_static_xfiles_page  
-------------------------
 wicci.org/JS/tooltip.js
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/JS/backbone.js 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+JS+backbone.js-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+JS+backbone.js-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+JS+backbone.js-out
doc-to-sql: process_input wicci.org/JS/backbone.js javascript wicci1
SELECT get_uri_path_name('wicci.org/JS/backbone.js');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/JS/backbone.js', 'javascript', '/home/greg/.Wicci/XFiles/Domain', '53155');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

    get_uri_path_name     
--------------------------
 wicci.org/JS/backbone.js
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/JS/backbone.js file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  get_static_xfiles_page  
--------------------------
 wicci.org/JS/backbone.js
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/JS/wi.js 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+JS+wi.js-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+JS+wi.js-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+JS+wi.js-out
doc-to-sql: process_input wicci.org/JS/wi.js javascript wicci1
SELECT get_uri_path_name('wicci.org/JS/wi.js');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/JS/wi.js', 'javascript', '/home/greg/.Wicci/XFiles/Domain', '21247');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

 get_uri_path_name  
--------------------
 wicci.org/JS/wi.js
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/JS/wi.js file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 get_static_xfiles_page 
------------------------
 wicci.org/JS/wi.js
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/hello.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+hello.html-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+hello.html-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+hello.html-out
doc-to-sql: process_input wicci.org/hello.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): wicci.org/hello.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:

LOCATION:  exec_stmt_raise, pl_exec.c:3165
       coalesce       
----------------------
 wicci.org/hello.html
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/hello-css.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+hello-css.html-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+hello-css.html-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+hello-css.html-out
doc-to-sql: process_input wicci.org/hello-css.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): wicci.org/hello-css.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:

LOCATION:  exec_stmt_raise, pl_exec.c:3165
         coalesce         
--------------------------
 wicci.org/hello-css.html
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/hello-css-jpg-js.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+hello-css-jpg-js.html-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+hello-css-jpg-js.html-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+hello-css-jpg-js.html-out
doc-to-sql: process_input wicci.org/hello-css-jpg-js.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): wicci.org/hello-css-jpg-js.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:

LOCATION:  exec_stmt_raise, pl_exec.c:3165
            coalesce             
---------------------------------
 wicci.org/hello-css-jpg-js.html
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/view-12.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-12.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-12.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-12.svg-out
doc-to-sql: process_input wicci.org/Theme/view-12.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/view-12.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/view-12.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '52912');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

      get_uri_path_name      
-----------------------------
 wicci.org/Theme/view-12.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/view-12.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page    
-----------------------------
 wicci.org/Theme/view-12.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/block-edit-next.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+block-edit-next.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+block-edit-next.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+block-edit-next.svg-out
doc-to-sql: process_input wicci.org/Theme/block-edit-next.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/block-edit-next.svg');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/block-edit-next.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '4600');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

          get_uri_path_name          
-------------------------------------
 wicci.org/Theme/block-edit-next.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/block-edit-next.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
       get_static_xfiles_page        
-------------------------------------
 wicci.org/Theme/block-edit-next.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/view-6.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-6.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-6.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-6.svg-out
doc-to-sql: process_input wicci.org/Theme/view-6.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/view-6.svg');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/view-6.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '52928');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

     get_uri_path_name      
----------------------------
 wicci.org/Theme/view-6.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/view-6.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page   
----------------------------
 wicci.org/Theme/view-6.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/inline-move-up.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-move-up.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-move-up.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-move-up.svg-out
doc-to-sql: process_input wicci.org/Theme/inline-move-up.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/inline-move-up.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/inline-move-up.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '3556');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

         get_uri_path_name          
------------------------------------
 wicci.org/Theme/inline-move-up.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/inline-move-up.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
       get_static_xfiles_page       
------------------------------------
 wicci.org/Theme/inline-move-up.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/inline-add-below.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-add-below.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-add-below.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-add-below.svg-out
doc-to-sql: process_input wicci.org/Theme/inline-add-below.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/inline-add-below.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/inline-add-below.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '14851');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

          get_uri_path_name           
--------------------------------------
 wicci.org/Theme/inline-add-below.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/inline-add-below.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
        get_static_xfiles_page        
--------------------------------------
 wicci.org/Theme/inline-add-below.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/fubar-version.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+fubar-version.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+fubar-version.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+fubar-version.svg-out
doc-to-sql: process_input wicci.org/Theme/fubar-version.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/fubar-version.svg');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/fubar-version.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '329');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

         get_uri_path_name         
-----------------------------------
 wicci.org/Theme/fubar-version.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/fubar-version.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
      get_static_xfiles_page       
-----------------------------------
 wicci.org/Theme/fubar-version.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/inline-move-dn.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-move-dn.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-move-dn.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-move-dn.svg-out
doc-to-sql: process_input wicci.org/Theme/inline-move-dn.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/inline-move-dn.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/inline-move-dn.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '3563');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

         get_uri_path_name          
------------------------------------
 wicci.org/Theme/inline-move-dn.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/inline-move-dn.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
       get_static_xfiles_page       
------------------------------------
 wicci.org/Theme/inline-move-dn.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/view-1.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-1.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-1.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-1.svg-out
doc-to-sql: process_input wicci.org/Theme/view-1.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/view-1.svg');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/view-1.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '35837');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

     get_uri_path_name      
----------------------------
 wicci.org/Theme/view-1.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/view-1.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page   
----------------------------
 wicci.org/Theme/view-1.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/wicci-home-equiv.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+wicci-home-equiv.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+wicci-home-equiv.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+wicci-home-equiv.svg-out
doc-to-sql: process_input wicci.org/Theme/wicci-home-equiv.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/wicci-home-equiv.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/wicci-home-equiv.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '9811');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

          get_uri_path_name           
--------------------------------------
 wicci.org/Theme/wicci-home-equiv.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/wicci-home-equiv.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
        get_static_xfiles_page        
--------------------------------------
 wicci.org/Theme/wicci-home-equiv.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/view-4.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-4.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-4.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-4.svg-out
doc-to-sql: process_input wicci.org/Theme/view-4.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/view-4.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/view-4.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '34831');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

     get_uri_path_name      
----------------------------
 wicci.org/Theme/view-4.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/view-4.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page   
----------------------------
 wicci.org/Theme/view-4.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/fubar-served.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+fubar-served.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+fubar-served.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+fubar-served.svg-out
doc-to-sql: process_input wicci.org/Theme/fubar-served.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/fubar-served.svg');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/fubar-served.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '322');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

        get_uri_path_name         
----------------------------------
 wicci.org/Theme/fubar-served.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/fubar-served.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
      get_static_xfiles_page      
----------------------------------
 wicci.org/Theme/fubar-served.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/inline-kill.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-kill.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-kill.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-kill.svg-out
doc-to-sql: process_input wicci.org/Theme/inline-kill.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/inline-kill.svg');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/inline-kill.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '8621');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

        get_uri_path_name        
---------------------------------
 wicci.org/Theme/inline-kill.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/inline-kill.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
     get_static_xfiles_page      
---------------------------------
 wicci.org/Theme/inline-kill.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/view-11.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-11.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-11.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-11.svg-out
doc-to-sql: process_input wicci.org/Theme/view-11.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/view-11.svg');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/view-11.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '53586');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

      get_uri_path_name      
-----------------------------
 wicci.org/Theme/view-11.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/view-11.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page    
-----------------------------
 wicci.org/Theme/view-11.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/inline-add-above.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-add-above.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-add-above.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+inline-add-above.svg-out
doc-to-sql: process_input wicci.org/Theme/inline-add-above.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/inline-add-above.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/inline-add-above.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '4438');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

          get_uri_path_name           
--------------------------------------
 wicci.org/Theme/inline-add-above.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/inline-add-above.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
        get_static_xfiles_page        
--------------------------------------
 wicci.org/Theme/inline-add-above.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/view-5.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-5.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-5.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-5.svg-out
doc-to-sql: process_input wicci.org/Theme/view-5.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/view-5.svg');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/view-5.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '35844');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

     get_uri_path_name      
----------------------------
 wicci.org/Theme/view-5.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/view-5.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page   
----------------------------
 wicci.org/Theme/view-5.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/view-2.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-2.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-2.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-2.svg-out
doc-to-sql: process_input wicci.org/Theme/view-2.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/view-2.svg');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/view-2.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '52931');
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

     get_uri_path_name      
----------------------------
 wicci.org/Theme/view-2.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/view-2.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page   
----------------------------
 wicci.org/Theme/view-2.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/wicci-home.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+wicci-home.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+wicci-home.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+wicci-home.svg-out
doc-to-sql: process_input wicci.org/Theme/wicci-home.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/wicci-home.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/wicci-home.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '11031');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

       get_uri_path_name        
--------------------------------
 wicci.org/Theme/wicci-home.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/wicci-home.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
     get_static_xfiles_page     
--------------------------------
 wicci.org/Theme/wicci-home.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/view-8.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-8.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-8.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-8.svg-out
doc-to-sql: process_input wicci.org/Theme/view-8.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/view-8.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/view-8.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '35839');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

     get_uri_path_name      
----------------------------
 wicci.org/Theme/view-8.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/view-8.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page   
----------------------------
 wicci.org/Theme/view-8.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/wicci-home-sent.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+wicci-home-sent.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+wicci-home-sent.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+wicci-home-sent.svg-out
doc-to-sql: process_input wicci.org/Theme/wicci-home-sent.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/wicci-home-sent.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/wicci-home-sent.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '8069');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

          get_uri_path_name          
-------------------------------------
 wicci.org/Theme/wicci-home-sent.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/wicci-home-sent.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
       get_static_xfiles_page        
-------------------------------------
 wicci.org/Theme/wicci-home-sent.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/wicci-toggle.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+wicci-toggle.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+wicci-toggle.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+wicci-toggle.svg-out
doc-to-sql: process_input wicci.org/Theme/wicci-toggle.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/wicci-toggle.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/wicci-toggle.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '8174');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

        get_uri_path_name         
----------------------------------
 wicci.org/Theme/wicci-toggle.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/wicci-toggle.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
      get_static_xfiles_page      
----------------------------------
 wicci.org/Theme/wicci-toggle.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/view-3.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-3.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-3.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-3.svg-out
doc-to-sql: process_input wicci.org/Theme/view-3.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/view-3.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/view-3.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '53129');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

     get_uri_path_name      
----------------------------
 wicci.org/Theme/view-3.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/view-3.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page   
----------------------------
 wicci.org/Theme/view-3.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/view-10.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-10.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-10.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-10.svg-out
doc-to-sql: process_input wicci.org/Theme/view-10.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/view-10.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/view-10.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '53581');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

      get_uri_path_name      
-----------------------------
 wicci.org/Theme/view-10.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/view-10.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page    
-----------------------------
 wicci.org/Theme/view-10.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/view-7.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-7.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-7.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-7.svg-out
doc-to-sql: process_input wicci.org/Theme/view-7.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/view-7.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/view-7.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '53564');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

     get_uri_path_name      
----------------------------
 wicci.org/Theme/view-7.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/view-7.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page   
----------------------------
 wicci.org/Theme/view-7.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/fubar.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+fubar.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+fubar.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+fubar.svg-out
doc-to-sql: process_input wicci.org/Theme/fubar.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/fubar.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/fubar.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '432');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

     get_uri_path_name     
---------------------------
 wicci.org/Theme/fubar.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/fubar.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
  get_static_xfiles_page   
---------------------------
 wicci.org/Theme/fubar.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/Theme/view-9.svg 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-9.svg-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-9.svg-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+Theme+view-9.svg-out
doc-to-sql: process_input wicci.org/Theme/view-9.svg svg wicci1
SELECT get_uri_path_name('wicci.org/Theme/view-9.svg');
doc-to-sql: SELECT get_static_xfiles_page('wicci.org/Theme/view-9.svg', 'svg', '/home/greg/.Wicci/XFiles/Domain', '52914');
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

     get_uri_path_name      
----------------------------
 wicci.org/Theme/view-9.svg
(1 row)

WARNING:  01000: page_uri_xfiles_path(page_uri_refs): XFiles/Domain/wicci.org/Theme/view-9.svg file not found
LOCATION:  exec_stmt_raise, pl_exec.c:3165
   get_static_xfiles_page   
----------------------------
 wicci.org/Theme/view-9.svg
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/hello-cljs.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+hello-cljs.html-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+hello-cljs.html-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+hello-cljs.html-out
doc-to-sql: process_input wicci.org/hello-cljs.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): wicci.org/hello-cljs.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:

LOCATION:  exec_stmt_raise, pl_exec.c:3165
         coalesce          
---------------------------
 wicci.org/hello-cljs.html
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  wicci.org/hello-css-jpg.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci.org+hello-css-jpg.html-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci.org+hello-css-jpg.html-out-err /home/greg/.Wicci/Make/wicci1/wicci.org+hello-css-jpg.html-out
doc-to-sql: process_input wicci.org/hello-css-jpg.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): wicci.org/hello-css-jpg.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:

LOCATION:  exec_stmt_raise, pl_exec.c:3165
           coalesce           
------------------------------
 wicci.org/hello-css-jpg.html
(1 row)

make[3]: Leaving directory '/home/greg/Projects/Wicci/XFiles/Domain'
make[2]: Leaving directory '/home/greg/Projects/Wicci/XFiles'
set -o pipefail ; doc-to-sql -d wicci1  404.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/404.html-out-err && mv /home/greg/.Wicci/Make/wicci1/404.html-out-err /home/greg/.Wicci/Make/wicci1/404.html-out
doc-to-sql: process_input 404.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): 404.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:
title--><title id="title" />
title-text-->CODE 404: Wicci Page Not Found!h1-text-->CODE 404: Wicci Page Not Found!sorry-->We're awfully sorry,user-to-path-->:not-found-->does not exist on sitefull-stop--><span />

LOCATION:  exec_stmt_raise, pl_exec.c:3165
 coalesce 
----------
 404.html
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-account-data.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-account-data.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-account-data.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-account-data.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                    set_file                                    
--------------------------------------------------------------------------------
 schema wicci-account-data.sql, module wicci-account-data, revision $Id, id 118
(1 row)

 get_wicci_user_login 
----------------------
 user:greg@wicci.org
(1 row)

 get_wicci_user_login 
----------------------
 user:sher@wicci.org
(1 row)

 get_wicci_user_login 
----------------------
 user:bill@wicci.org
(1 row)

 get_wicci_user_login 
----------------------
 user:lynn@wicci.org
(1 row)

 get_wicci_user_login  
-----------------------
 user:stacey@wicci.org
(1 row)

 get_wicci_user_login  
-----------------------
 user:batman@wicci.org
(1 row)

  get_wicci_user_login  
------------------------
 user:priused@wicci.org
(1 row)

         login         | password |     user identities      
-----------------------+----------+--------------------------
                       | x        | {""}
 greg@ngender.net      | sheveky  | {user:greg@wicci.org}
 sher@well.com         | sherluvy | {user:sher@wicci.org}
 bilpal@gmail.com      | thingy13 | {user:bill@wicci.org}
 lynn@bethechange.net  | stay-c   | {user:lynn@wicci.org}
 stacey@creditlink.com | 4thekids | {user:stacey@wicci.org}
 jsa169@gmail.com      | letmein  | {user:batman@wicci.org}
 priuscd@yahoo.com     | letmein  | {user:priused@wicci.org}
(8 rows)

          user          |          groups           |        view_groups        | notes 
------------------------+---------------------------+---------------------------+-------
                        | {""}                      | {""}                      | 
 user:greg@wicci.org    | {group:greg@wicci.org}    | {group:greg@wicci.org}    | 
 user:sher@wicci.org    | {group:sher@wicci.org}    | {group:sher@wicci.org}    | 
 user:bill@wicci.org    | {group:bill@wicci.org}    | {group:bill@wicci.org}    | 
 user:lynn@wicci.org    | {group:lynn@wicci.org}    | {group:lynn@wicci.org}    | 
 user:stacey@wicci.org  | {group:stacey@wicci.org}  | {group:stacey@wicci.org}  | 
 user:batman@wicci.org  | {group:batman@wicci.org}  | {group:batman@wicci.org}  | 
 user:priused@wicci.org | {group:priused@wicci.org} | {group:priused@wicci.org} | 
(8 rows)

          group          |         owner          | leaders | notes 
-------------------------+------------------------+---------+-------
                         |                        | {}      | 
 group:greg@wicci.org    | user:greg@wicci.org    | {}      | 
 group:sher@wicci.org    | user:sher@wicci.org    | {}      | 
 group:bill@wicci.org    | user:bill@wicci.org    | {}      | 
 group:lynn@wicci.org    | user:lynn@wicci.org    | {}      | 
 group:stacey@wicci.org  | user:stacey@wicci.org  | {}      | 
 group:batman@wicci.org  | user:batman@wicci.org  | {}      | 
 group:priused@wicci.org | user:priused@wicci.org | {}      | 
(8 rows)

 new_wicci_user_group 
----------------------
 user:greg@wicci.org
(1 row)

 new_wicci_user_group | new_wicci_user_group | new_wicci_user_group 
----------------------+----------------------+----------------------
 user:greg@wicci.org  | user:sher@wicci.org  | user:bill@wicci.org
(1 row)

 new_wicci_user_group | new_wicci_user_group  
----------------------+-----------------------
 user:lynn@wicci.org  | user:stacey@wicci.org
(1 row)

          group           |         owner          | leaders | notes 
--------------------------+------------------------+---------+-------
                          |                        | {}      | 
 group:greg@wicci.org     | user:greg@wicci.org    | {}      | 
 group:sher@wicci.org     | user:sher@wicci.org    | {}      | 
 group:bill@wicci.org     | user:bill@wicci.org    | {}      | 
 group:lynn@wicci.org     | user:lynn@wicci.org    | {}      | 
 group:stacey@wicci.org   | user:stacey@wicci.org  | {}      | 
 group:batman@wicci.org   | user:batman@wicci.org  | {}      | 
 group:priused@wicci.org  | user:priused@wicci.org | {}      | 
 group:puuhonua@wicci.org | user:greg@wicci.org    | {}      | 
 group:home@blackacre.org | user:stacey@wicci.org  | {}      | 
(10 rows)

  wicci_group_add_leader  
--------------------------
 group:puuhonua@wicci.org
(1 row)

  wicci_group_add_leader  
--------------------------
 group:home@blackacre.org
(1 row)

CREATE FUNCTION
 get_wicci_site  
-----------------
 wicci.net/error
(1 row)

    get_site_    
-----------------
 wicci.net/error
(1 row)

 get_site_ 
-----------
 wicci.com
(1 row)

 get_site_ 
-----------
 wicci.org
(1 row)

 get_site_ 
-----------
 wicci.net
(1 row)

 get_site_  
------------
 ifsrad.org
(1 row)

   get_site_   
---------------
 blackacre.org
(1 row)

 get_site_  
------------
 moffit.com
(1 row)

      site       |         owner         | notes 
-----------------+-----------------------+-------
 wicci.net/error |                       | 
 wicci.com       | user:greg@wicci.org   | 
 wicci.org       | user:greg@wicci.org   | 
 wicci.net       | user:greg@wicci.org   | 
 ifsrad.org      | user:greg@wicci.org   | 
 blackacre.org   | user:stacey@wicci.org | 
 moffit.com      | user:stacey@wicci.org | 
(7 rows)

 get_page_uri 
--------------
 wicci.com
(1 row)

  get_page_uri  
----------------
 wicci.org/love
(1 row)

 get_page_uri 
--------------
 wicci.net
(1 row)

 get_page_uri 
--------------
 ifsrad.org
(1 row)

 get_page_uri  
---------------
 blackacre.org
(1 row)

 get_page_uri 
--------------
 moffit.com
(1 row)

 wicci_page_add_delegate 
-------------------------
 inserted status
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-core-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-core-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-core-test.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-core-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                 set_file                                 
--------------------------------------------------------------------------
 schema wicci-core-test.sql, module wicci-core-test, revision $Id, id 119
(1 row)

      test_func      
---------------------
 find_page_uri(text)
(1 row)

      test_func      
---------------------
 find_doc_page(text)
(1 row)

          test_func           
------------------------------
 find_doc_page(page_uri_refs)
(1 row)

          test_func           
------------------------------
 find_page_doc(page_uri_refs)
(1 row)

         login         | password |     user identities      
-----------------------+----------+--------------------------
                       | x        | {""}
 greg@ngender.net      | sheveky  | {user:greg@wicci.org}
 sher@well.com         | sherluvy | {user:sher@wicci.org}
 bilpal@gmail.com      | thingy13 | {user:bill@wicci.org}
 lynn@bethechange.net  | stay-c   | {user:lynn@wicci.org}
 stacey@creditlink.com | 4thekids | {user:stacey@wicci.org}
 jsa169@gmail.com      | letmein  | {user:batman@wicci.org}
 priuscd@yahoo.com     | letmein  | {user:priused@wicci.org}
(8 rows)

       test_func        
------------------------
 find_wicci_login(text)
(1 row)

             test_func             
-----------------------------------
 find_wicci_login(entity_uri_refs)
(1 row)

          user          |                      groups                       |                             view_groups                              | notes 
------------------------+---------------------------------------------------+----------------------------------------------------------------------+-------
                        | {""}                                              | {""}                                                                 | 
 user:batman@wicci.org  | {group:batman@wicci.org}                          | {group:batman@wicci.org}                                             | 
 user:priused@wicci.org | {group:priused@wicci.org}                         | {group:priused@wicci.org}                                            | 
 user:greg@wicci.org    | {group:greg@wicci.org,group:puuhonua@wicci.org}   | {group:greg@wicci.org,group:sher@wicci.org,group:puuhonua@wicci.org} | 
 user:sher@wicci.org    | {group:sher@wicci.org}                            | {group:sher@wicci.org,group:puuhonua@wicci.org}                      | 
 user:bill@wicci.org    | {group:bill@wicci.org}                            | {group:bill@wicci.org,group:puuhonua@wicci.org}                      | 
 user:lynn@wicci.org    | {group:lynn@wicci.org}                            | {group:lynn@wicci.org,group:home@blackacre.org}                      | 
 user:stacey@wicci.org  | {group:stacey@wicci.org,group:home@blackacre.org} | {group:stacey@wicci.org,group:home@blackacre.org}                    | 
(8 rows)

          test_func           
------------------------------
 find_wicci_user_or_nil(text)
(1 row)

                test_func                
-----------------------------------------
 find_wicci_user_or_nil(entity_uri_refs)
(1 row)

          group           |         owner          |        leaders        | notes 
--------------------------+------------------------+-----------------------+-------
                          |                        | {}                    | 
 group:greg@wicci.org     | user:greg@wicci.org    | {}                    | 
 group:sher@wicci.org     | user:sher@wicci.org    | {}                    | 
 group:bill@wicci.org     | user:bill@wicci.org    | {}                    | 
 group:lynn@wicci.org     | user:lynn@wicci.org    | {}                    | 
 group:stacey@wicci.org   | user:stacey@wicci.org  | {}                    | 
 group:batman@wicci.org   | user:batman@wicci.org  | {}                    | 
 group:priused@wicci.org  | user:priused@wicci.org | {}                    | 
 group:puuhonua@wicci.org | user:greg@wicci.org    | {user:sher@wicci.org} | 
 group:home@blackacre.org | user:stacey@wicci.org  | {user:lynn@wicci.org} | 
(10 rows)

       test_func        
------------------------
 find_wicci_group(text)
(1 row)

             test_func             
-----------------------------------
 find_wicci_group(entity_uri_refs)
(1 row)

        find_xml_tag         
-----------------------------
 xml_tag_refs:xml_tag_rows:7
(1 row)

             get_xml_element_kind             
----------------------------------------------
 doc_node_kind_refs:xml_element_kind_rows:234
(1 row)

                  coalesce                   
---------------------------------------------
 (env_refs:env_rows:9,{env_refs:env_rows:1})
(1 row)

                               env_wicci_user                               
----------------------------------------------------------------------------
 (env_refs:env_rows:9,env_wicci_user,user:greg@wicci.org,"inserted status")
(1 row)

          test_func           
------------------------------
 try_env_wicci_user(env_refs)
(1 row)

 wicci_user_name_text 
----------------------
 user:greg@wicci.org
(1 row)

psql:wicci-core-test.sql:132: WARNING:  01000: RefEtcToValue:
	No method for op ref_env_text_op(refs,env_refs),  ref tag=47 id=234, 2 args!
LOCATION:  TomDebug, refs.c:292
 ref_env_text_op 
-----------------
 
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-page-schema.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-page-schema.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-page-schema.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-page-schema.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                   set_file                                   
------------------------------------------------------------------------------
 schema wicci-page-schema.sql, module wicci-page-schema, revision $Id, id 120
(1 row)

CREATE VIEW
psql:wicci-page-schema.sql:23: NOTICE:  00000: table "wicci_responses" does not exist, skipping
LOCATION:  DropErrorMsgNonExistent, tablecmds.c:763
DROP TABLE
CREATE TABLE
COMMENT
COMMENT
INSERT 0 3
    http_small_text_response_rows_ref    
-----------------------------------------
 http_response_refs:http_response_rows:4
(1 row)

CREATE FUNCTION
CREATE TABLE
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
DELETE 0
INSERT 0 10
CREATE FUNCTION
CREATE TABLE
INSERT 0 5
CREATE TYPE
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-page-code.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-page-code.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-page-code.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-page-code.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                 set_file                                 
--------------------------------------------------------------------------
 schema wicci-page-code.sql, module wicci-page-code, revision $Id, id 121
(1 row)

CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
COMMENT
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-page-serve.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-page-serve.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-page-serve.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-page-serve.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                  set_file                                  
----------------------------------------------------------------------------
 schema wicci-page-serve.sql, module wicci-page-serve, revision $Id, id 122
(1 row)

CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
CREATE FUNCTION
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
COMMENT
CREATE FUNCTION
             test_func              |             test_func              |             test_func              
------------------------------------+------------------------------------+------------------------------------
 wicci_serve_echo(bytea,bytea,text) | wicci_serve_echo(bytea,bytea,text) | wicci_serve_echo(bytea,bytea,text)
(1 row)

CREATE FUNCTION
CREATE FUNCTION
          test_func          |          test_func          |          test_func          
-----------------------------+-----------------------------+-----------------------------
 wicci_echo_body(bytea,text) | wicci_echo_body(bytea,text) | wicci_echo_body(bytea,text)
(1 row)

CREATE FUNCTION
CREATE FUNCTION
set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-page-simple-data.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-page-simple-data.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-page-simple-data.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-page-simple-data.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                        set_file                                        
----------------------------------------------------------------------------------------
 schema wicci-page-simple-data.sql, module wicci-page-simple-data, revision $Id, id 123
(1 row)

                    coalesce                     
-------------------------------------------------
 wicci_transaction_refs:wicci_transaction_rows:1
(1 row)

               set_wicci_page_transaction_grafts               
---------------------------------------------------------------
 (simple.html,wicci_transaction_refs:wicci_transaction_rows:1)
(1 row)

              wicci_group_add_trans              
-------------------------------------------------
 wicci_transaction_refs:wicci_transaction_rows:1
(1 row)

                  test_func                  
---------------------------------------------
 wicci_grafts(doc_page_refs,wicci_user_refs)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-page-simple-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-page-simple-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-page-simple-test.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-page-simple-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                        set_file                                        
----------------------------------------------------------------------------------------
 schema wicci-page-simple-test.sql, module wicci-page-simple-test, revision $Id, id 124
(1 row)

CREATE FUNCTION
COMMENT
 http_requests_text  
---------------------
 _type: GET         +
 _url: simple.html  +
 _protocol: HTTP/1.1+
 Host: wicci.org    +
 
(1 row)

 debug_on 
----------
 
(1 row)

 debug_on 
----------
 
(1 row)

               test_func                
----------------------------------------
 drop_http_response(http_transfer_refs)
(1 row)

       test_func        
------------------------
 blob_length(blob_refs)
(1 row)

       test_func       
-----------------------
 blob_bytes(blob_refs)
(1 row)

                   test_func                    
------------------------------------------------
 try_get_http_requests_url(http_request_refs[])
(1 row)

                   test_func                    
------------------------------------------------
 get_http_requests_cookies(http_request_refs[])
(1 row)

                 test_func                  
--------------------------------------------
 get_http_requests_url(http_request_refs[])
(1 row)

                test_func                
-----------------------------------------
 try_wicci_user(uri_refs,uri_query_refs)
(1 row)

                 test_func                  
--------------------------------------------
 get_http_requests_url(http_request_refs[])
(1 row)

                   test_func                    
------------------------------------------------
 get_http_requests_cookies(http_request_refs[])
(1 row)

                 test_func                  
--------------------------------------------
 wicci_user_or_nil(uri_refs,uri_query_refs)
(1 row)

                 test_func                  
--------------------------------------------
 wicci_user_or_nil(uri_refs,uri_query_refs)
(1 row)

                                                     drop_env_give_value                                                     
-----------------------------------------------------------------------------------------------------------------------------
 wicci_serve_body(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,page_uri_refs,http_response_name_refs)
(1 row)

                                                                                                                 drop_env_give_value                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 _body: <html>\r                                                                                                                                                                                                                                     +
 <head>\r                                                                                                                                                                                                                                            +
 <title id="title">\r                                                                                                                                                                                                                                +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />\r                                                                                                                             +
                 <style type="text/css">\r                                                                                                                                                                                                           +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id="wi_panel" class="wi_menu wi wi_hide">\r                                                                                                                                                                                     +
                         <li id="wi_panel_home" class="wi_icon wi">\r                                                                                                                                                                                +
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">\r                                                                                                                                                  +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id="wi_toggle_parent" class="wi wi_show">\r                                                                                                                                                                                    +
                         <object id="wi_toggle_image" class="wi_image wi"\r                                                                                                                                                                          +
                                                         data="Theme/wicci-toggle.svg"\r                                                                                                                                                             +
                                                         type="image/svg+xml">\r                                                                                                                                                                     +
                         </object> \r                                                                                                                                                                                                                +
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>\r                                                                                                                                                     +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 handle="h1">\r                                                                                                                                                                                                                                  +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 We're awfully sorry,\r                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 <span>\r                                                                                                                                                                                                                                            +
 :\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 simple.html\r                                                                                                                                                                                                                                       +
 <span>\r                                                                                                                                                                                                                                            +
 does not exist on site\r                                                                                                                                                                                                                            +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 wicci.org\r                                                                                                                                                                                                                                         +
 <span>\r                                                                                                                                                                                                                                            +
 .\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id="wi_stash"  class="wi_hide">\r                                                                                                                                                                                              +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id="wi_inline_controls_stash">\r                                                                                                                                                                                +
                                         <span id="wi_inline_controls" class="wi_controls wi">\r                                                                                                                                                     +
                                                 <span id="wi_inline_controls_0" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>\r                                                                                                 +
                                                         <span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>\r                                                                                               +
                                                         <span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>\r                                                                                                    +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id="wi_inline_controls_1" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>\r                                                                                                    +
                                                         <span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>\r                                                                                             +
                                                         <span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>\r                                                                                             +
                                                         <span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>\r                                                                                                +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src="JS/jquery.js" type="text/javascript"></script>\r                                                                                                                                                                       +
                 <script src="JS/tooltip.js" type="text/javascript"></script>\r                                                                                                                                                                      +
                 <script src="JS/cci.js" type="text/javascript"></script>\r                                                                                                                                                                          +
                 <script src="JS/wi.js" type="text/javascript"></script>\r                                                                                                                                                                           +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 
(1 row)

psql:wicci-page-simple-test.sql:159: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:1
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-simple-test.sql:159: NOTICE:  00000: DEBUG Entered wicci_serve(http_transfer_refs,uri_refs,uri_query_refs,http_response_name_refs): 
env_http_url: wicci.org/simple.html	env_cookies: 
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                  http_transfer_text                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 http_transfer_refs:http_transfer_rows:1                                                                                                                                                                                                             +
 when: 2016-07-25 15:59:03.342011                                                                                                                                                                                                                    +
 requests:                                                                                                                                                                                                                                           +
 GET simple.html HTTP/1.1                                                                                                                                                                                                                            +
 Host: wicci.org                                                                                                                                                                                                                                     +
 requests body length: 14 bytes                                                                                                                                                                                                                      +
 responses:                                                                                                                                                                                                                                          +
 _status: HTTP/1.1 404 Not Found                                                                                                                                                                                                                     +
 Date: Mon, 25-Jul-2016 23:00:38 GMT                                                                                                                                                                                                                 +
 Server: Wicci/0.2                                                                                                                                                                                                                                   +
 Content-Length: 2448                                                                                                                                                                                                                                +
 Content-Type: text/html; charset=UTF-8                                                                                                                                                                                                              +
 _body: <html>\r                                                                                                                                                                                                                                     +
 <head>\r                                                                                                                                                                                                                                            +
 <title id="title">\r                                                                                                                                                                                                                                +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />\r                                                                                                                             +
                 <style type="text/css">\r                                                                                                                                                                                                           +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id="wi_panel" class="wi_menu wi wi_hide">\r                                                                                                                                                                                     +
                         <li id="wi_panel_home" class="wi_icon wi">\r                                                                                                                                                                                +
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">\r                                                                                                                                                  +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id="wi_toggle_parent" class="wi wi_show">\r                                                                                                                                                                                    +
                         <object id="wi_toggle_image" class="wi_image wi"\r                                                                                                                                                                          +
                                                         data="Theme/wicci-toggle.svg"\r                                                                                                                                                             +
                                                         type="image/svg+xml">\r                                                                                                                                                                     +
                         </object> \r                                                                                                                                                                                                                +
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>\r                                                                                                                                                     +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 handle="h1">\r                                                                                                                                                                                                                                  +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 We're awfully sorry,\r                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 <span>\r                                                                                                                                                                                                                                            +
 :\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 simple.html\r                                                                                                                                                                                                                                       +
 <span>\r                                                                                                                                                                                                                                            +
 does not exist on site\r                                                                                                                                                                                                                            +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 wicci.org\r                                                                                                                                                                                                                                         +
 <span>\r                                                                                                                                                                                                                                            +
 .\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id="wi_stash"  class="wi_hide">\r                                                                                                                                                                                              +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id="wi_inline_controls_stash">\r                                                                                                                                                                                +
                                         <span id="wi_inline_controls" class="wi_controls wi">\r                                                                                                                                                     +
                                                 <span id="wi_inline_controls_0" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>\r                                                                                                 +
                                                         <span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>\r                                                                                               +
                                                         <span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>\r                                                                                                    +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id="wi_inline_controls_1" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>\r                                                                                                    +
                                                         <span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>\r                                                                                             +
                                                         <span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>\r                                                                                             +
                                                         <span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>\r                                                                                                +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src="JS/jquery.js" type="text/javascript"></script>\r                                                                                                                                                                       +
                 <script src="JS/tooltip.js" type="text/javascript"></script>\r                                                                                                                                                                      +
                 <script src="JS/cci.js" type="text/javascript"></script>\r                                                                                                                                                                          +
                 <script src="JS/wi.js" type="text/javascript"></script>\r                                                                                                                                                                           +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 
(1 row)

                 ?column?                 
------------------------------------------
 http_response_refs:http_response_rows:14
(1 row)

              test_func               
--------------------------------------
 http_request_text(http_request_refs)
(1 row)

              test_func               
--------------------------------------
 http_request_text(http_request_refs)
(1 row)

                                                                                                                 http_responses_text                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 _status: HTTP/1.1 404 Not Found                                                                                                                                                                                                                     +
 Date: Mon, 25-Jul-2016 23:00:38 GMT                                                                                                                                                                                                                 +
 Server: Wicci/0.2                                                                                                                                                                                                                                   +
 Content-Length: 2448                                                                                                                                                                                                                                +
 Content-Type: text/html; charset=UTF-8                                                                                                                                                                                                              +
 _body: <html>\r                                                                                                                                                                                                                                     +
 <head>\r                                                                                                                                                                                                                                            +
 <title id="title">\r                                                                                                                                                                                                                                +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />\r                                                                                                                             +
                 <style type="text/css">\r                                                                                                                                                                                                           +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id="wi_panel" class="wi_menu wi wi_hide">\r                                                                                                                                                                                     +
                         <li id="wi_panel_home" class="wi_icon wi">\r                                                                                                                                                                                +
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">\r                                                                                                                                                  +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id="wi_toggle_parent" class="wi wi_show">\r                                                                                                                                                                                    +
                         <object id="wi_toggle_image" class="wi_image wi"\r                                                                                                                                                                          +
                                                         data="Theme/wicci-toggle.svg"\r                                                                                                                                                             +
                                                         type="image/svg+xml">\r                                                                                                                                                                     +
                         </object> \r                                                                                                                                                                                                                +
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>\r                                                                                                                                                     +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 handle="h1">\r                                                                                                                                                                                                                                  +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 We're awfully sorry,\r                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 <span>\r                                                                                                                                                                                                                                            +
 :\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 simple.html\r                                                                                                                                                                                                                                       +
 <span>\r                                                                                                                                                                                                                                            +
 does not exist on site\r                                                                                                                                                                                                                            +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 wicci.org\r                                                                                                                                                                                                                                         +
 <span>\r                                                                                                                                                                                                                                            +
 .\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id="wi_stash"  class="wi_hide">\r                                                                                                                                                                                              +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id="wi_inline_controls_stash">\r                                                                                                                                                                                +
                                         <span id="wi_inline_controls" class="wi_controls wi">\r                                                                                                                                                     +
                                                 <span id="wi_inline_controls_0" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>\r                                                                                                 +
                                                         <span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>\r                                                                                               +
                                                         <span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>\r                                                                                                    +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id="wi_inline_controls_1" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>\r                                                                                                    +
                                                         <span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>\r                                                                                             +
                                                         <span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>\r                                                                                             +
                                                         <span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>\r                                                                                                +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src="JS/jquery.js" type="text/javascript"></script>\r                                                                                                                                                                       +
                 <script src="JS/tooltip.js" type="text/javascript"></script>\r                                                                                                                                                                      +
                 <script src="JS/cci.js" type="text/javascript"></script>\r                                                                                                                                                                          +
                 <script src="JS/wi.js" type="text/javascript"></script>\r                                                                                                                                                                           +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 
(1 row)

 case 
------
 
(1 row)

     env_rows_ref     
----------------------
 env_refs:env_rows:13
(1 row)

           fresh_http_transfer           
-----------------------------------------
 http_transfer_refs:http_transfer_rows:1
(1 row)

psql:wicci-page-simple-test.sql:201: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:1
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                 http_responses_text                                                                                                                  |                  _body                   
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------
 _status: HTTP/1.1 404 Not Found                                                                                                                                                                                                                     +| http_response_refs:http_response_rows:14
 Date: Mon, 25-Jul-2016 23:00:39 GMT                                                                                                                                                                                                                 +| 
 Server: Wicci/0.2                                                                                                                                                                                                                                   +| 
 Content-Length: 2448                                                                                                                                                                                                                                +| 
 Content-Type: text/html; charset=UTF-8                                                                                                                                                                                                              +| 
 _body: <html>\r                                                                                                                                                                                                                                     +| 
 <head>\r                                                                                                                                                                                                                                            +| 
 <title id="title">\r                                                                                                                                                                                                                                +| 
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +| 
 </title>\r                                                                                                                                                                                                                                          +| 
 \r                                                                                                                                                                                                                                                  +| 
 \r                                                                                                                                                                                                                                                  +| 
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />\r                                                                                                                             +| 
                 <style type="text/css">\r                                                                                                                                                                                                           +| 
                         <!--\r                                                                                                                                                                                                                      +| 
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +| 
                         -->\r                                                                                                                                                                                                                       +| 
                 </style>\r                                                                                                                                                                                                                          +| 
         \r                                                                                                                                                                                                                                          +| 
 </head>\r                                                                                                                                                                                                                                           +| 
 \r                                                                                                                                                                                                                                                  +| 
 <body>\r                                                                                                                                                                                                                                            +| 
 \r                                                                                                                                                                                                                                                  +| 
                 <ul id="wi_panel" class="wi_menu wi wi_hide">\r                                                                                                                                                                                     +| 
                         <li id="wi_panel_home" class="wi_icon wi">\r                                                                                                                                                                                +| 
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">\r                                                                                                                                                  +| 
                                         </object>\r                                                                                                                                                                                                 +| 
                         </li>\r                                                                                                                                                                                                                     +| 
                 </ul>\r                                                                                                                                                                                                                             +| 
                 <div id="wi_toggle_parent" class="wi wi_show">\r                                                                                                                                                                                    +| 
                         <object id="wi_toggle_image" class="wi_image wi"\r                                                                                                                                                                          +| 
                                                         data="Theme/wicci-toggle.svg"\r                                                                                                                                                             +| 
                                                         type="image/svg+xml">\r                                                                                                                                                                     +| 
                         </object> \r                                                                                                                                                                                                                +| 
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>\r                                                                                                                                                     +| 
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+| 
         \r                                                                                                                                                                                                                                          +| 
 <h1 handle="h1">\r                                                                                                                                                                                                                                  +| 
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +| 
 </h1>\r                                                                                                                                                                                                                                             +| 
 \r                                                                                                                                                                                                                                                  +| 
 <p>\r                                                                                                                                                                                                                                               +| 
 We're awfully sorry,\r                                                                                                                                                                                                                              +| 
 \r                                                                                                                                                                                                                                                  +| 
 <span>\r                                                                                                                                                                                                                                            +| 
 :\r                                                                                                                                                                                                                                                 +| 
 </span>\r                                                                                                                                                                                                                                           +| 
 \r                                                                                                                                                                                                                                                  +| 
 simple.html\r                                                                                                                                                                                                                                       +| 
 <span>\r                                                                                                                                                                                                                                            +| 
 does not exist on site\r                                                                                                                                                                                                                            +| 
 </span>\r                                                                                                                                                                                                                                           +| 
 \r                                                                                                                                                                                                                                                  +| 
 wicci.org\r                                                                                                                                                                                                                                         +| 
 <span>\r                                                                                                                                                                                                                                            +| 
 .\r                                                                                                                                                                                                                                                 +| 
 </span>\r                                                                                                                                                                                                                                           +| 
 \r                                                                                                                                                                                                                                                  +| 
 </p>\r                                                                                                                                                                                                                                              +| 
 \r                                                                                                                                                                                                                                                  +| 
 \r                                                                                                                                                                                                                                                  +| 
                 <div id="wi_stash"  class="wi_hide">\r                                                                                                                                                                                              +| 
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +| 
                         <dl>\r                                                                                                                                                                                                                      +| 
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +| 
                                 <dd id="wi_inline_controls_stash">\r                                                                                                                                                                                +| 
                                         <span id="wi_inline_controls" class="wi_controls wi">\r                                                                                                                                                     +| 
                                                 <span id="wi_inline_controls_0" class="wi_group wi">\r                                                                                                                                              +| 
                                                         <span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>\r                                                                                                 +| 
                                                         <span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>\r                                                                                               +| 
                                                         <span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>\r                                                                                                    +| 
                                                 </span>\r                                                                                                                                                                                           +| 
                                                 <span id="wi_inline_controls_1" class="wi_group wi">\r                                                                                                                                              +| 
                                                         <span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>\r                                                                                                    +| 
                                                         <span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>\r                                                                                             +| 
                                                         <span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>\r                                                                                             +| 
                                                         <span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>\r                                                                                                +| 
                                                 </span>\r                                                                                                                                                                                           +| 
                                         </span>\r                                                                                                                                                                                                   +| 
                                 </dd>\r                                                                                                                                                                                                             +| 
                         </dl>\r                                                                                                                                                                                                                     +| 
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +| 
                 <script src="JS/jquery.js" type="text/javascript"></script>\r                                                                                                                                                                       +| 
                 <script src="JS/tooltip.js" type="text/javascript"></script>\r                                                                                                                                                                      +| 
                 <script src="JS/cci.js" type="text/javascript"></script>\r                                                                                                                                                                          +| 
                 <script src="JS/wi.js" type="text/javascript"></script>\r                                                                                                                                                                           +| 
         \r                                                                                                                                                                                                                                          +| 
 </body>\r                                                                                                                                                                                                                                           +| 
 \r                                                                                                                                                                                                                                                  +| 
 </html>\r                                                                                                                                                                                                                                           +| 
                                                                                                                                                                                                                                                      | 
(1 row)

                              wicci_grafts_from_to                              
--------------------------------------------------------------------------------
 ({doc_node_refs:tree_doc_node_rows:34},{doc_node_refs:graft_doc_node_rows:62})
(1 row)

 case 
------
 
(1 row)

     env_rows_ref     
----------------------
 env_refs:env_rows:14
(1 row)

           fresh_http_transfer           
-----------------------------------------
 http_transfer_refs:http_transfer_rows:1
(1 row)

psql:wicci-page-simple-test.sql:222: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:1
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                           http_responses_text                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 _status: HTTP/1.1 200 OK                                                                                                                                                +
 Date: Mon, 25-Jul-2016 23:00:41 GMT                                                                                                                                     +
 Server: Wicci/0.2                                                                                                                                                       +
 Set-Cookie: user=user:greg@wicci.org; session=wicci_transaction_refs:wicci_transaction_rows:2; expires=Tue, 25-Jul-2017 23:00:41 GMT; path=simple.html; domain=wicci.org+
 Content-Length: 0                                                                                                                                                       +
 Content-Type: text
(1 row)

 refs_ready 
------------
 
(1 row)

 debug_on 
----------
 
(1 row)

 debug_on 
----------
 
(1 row)

psql:wicci-page-simple-test.sql:258: NOTICE:  00000: DEBUG Entered try_new_http_transfer(bytea,bytea): GET /simple.html?host=wicci.org&user=greg@wicci.org 1.1
User-Agent: curl/7.35.0
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-simple-test.sql:258: NOTICE:  00000: DEBUG Entered try_new_http_transfer(http_request_refs[],bytea): _type: GET
_url: /simple.html?host=wicci.org&user=greg@wicci.org
_protocol: 1.1
User-Agent: curl/7.35.0

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-simple-test.sql:258: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:4
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-simple-test.sql:258: NOTICE:  00000: DEBUG Entered wicci_serve(http_transfer_refs,uri_refs,uri_query_refs,http_response_name_refs): 
env_http_url: /simple.html?host=wicci.org&user=greg@wicci.org	env_cookies: 
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                wicci_serve                 
--------------------------------------------
 (_status,"HTTP/1.1 404 Not Found",)
 (_status,"HTTP/1.1 404 Not Found",)
 (_status,"HTTP/1.1 404 Not Found",)
 (_status,"HTTP/1.1 404 Not Found",)
 (_status,"HTTP/1.1 404 Not Found",)
 (Date,"Mon, 25-Jul-2016 23:00:41 GMT",)
 (Date,"Mon, 25-Jul-2016 23:00:41 GMT",)
 (Date,"Mon, 25-Jul-2016 23:00:41 GMT",)
 (Date,"Mon, 25-Jul-2016 23:00:41 GMT",)
 (Date,"Mon, 25-Jul-2016 23:00:41 GMT",)
 (Server,Wicci/0.2,)
 (Server,Wicci/0.2,)
 (Server,Wicci/0.2,)
 (Server,Wicci/0.2,)
 (Server,Wicci/0.2,)
 (Content-Type,"text/html; charset=UTF-8",)
 (Content-Type,"text/html; charset=UTF-8",)
 (Content-Type,"text/html; charset=UTF-8",)
 (Content-Type,"text/html; charset=UTF-8",)
 (Content-Type,"text/html; charset=UTF-8",)
(20 rows)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-page-fancy-data.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-page-fancy-data.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-page-fancy-data.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-page-fancy-data.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                       set_file                                       
--------------------------------------------------------------------------------------
 schema wicci-page-fancy-data.sql, module wicci-page-fancy-data, revision $Id, id 125
(1 row)

                    coalesce                     
-------------------------------------------------
 wicci_transaction_refs:wicci_transaction_rows:4
(1 row)

              set_wicci_page_transaction_grafts               
--------------------------------------------------------------
 (fancy.html,wicci_transaction_refs:wicci_transaction_rows:4)
(1 row)

              wicci_group_add_trans              
-------------------------------------------------
 wicci_transaction_refs:wicci_transaction_rows:4
(1 row)

                  test_func                  
---------------------------------------------
 wicci_grafts(doc_page_refs,wicci_user_refs)
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-page-fancy-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-page-fancy-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-page-fancy-test.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-page-fancy-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                       set_file                                       
--------------------------------------------------------------------------------------
 schema wicci-page-fancy-test.sql, module wicci-page-fancy-test, revision $Id, id 126
(1 row)

psql:wicci-page-fancy-test.sql:14: NOTICE:  00000: DEBUG Entered try_new_http_transfer(bytea,bytea): GET fancy.html HTTP/1.1
User-Agent: Mozilla

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-fancy-test.sql:14: NOTICE:  00000: DEBUG Entered try_new_http_transfer(http_request_refs[],bytea): _type: GET
_url: fancy.html
_protocol: HTTP/1.1
User-Agent: Mozilla

LOCATION:  exec_stmt_raise, pl_exec.c:3165
                coalesce                 
-----------------------------------------
 http_transfer_refs:http_transfer_rows:5
(1 row)

           fresh_http_transfer           
-----------------------------------------
 http_transfer_refs:http_transfer_rows:5
(1 row)

psql:wicci-page-fancy-test.sql:17: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:5
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-fancy-test.sql:17: NOTICE:  00000: DEBUG Entered wicci_serve(http_transfer_refs,uri_refs,uri_query_refs,http_response_name_refs): 
env_http_url: /fancy.html	env_cookies: 
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                  http_transfer_text                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 http_transfer_refs:http_transfer_rows:5                                                                                                                                                                                                             +
 when: 2016-07-25 15:59:03.342011                                                                                                                                                                                                                    +
 requests:                                                                                                                                                                                                                                           +
 GET fancy.html HTTP/1.1                                                                                                                                                                                                                             +
 User-Agent: Mozilla                                                                                                                                                                                                                                 +
 requests body length: 14 bytes                                                                                                                                                                                                                      +
 responses:                                                                                                                                                                                                                                          +
 _status: HTTP/1.1 404 Not Found                                                                                                                                                                                                                     +
 Date: Mon, 25-Jul-2016 23:00:44 GMT                                                                                                                                                                                                                 +
 Server: Wicci/0.2                                                                                                                                                                                                                                   +
 Content-Length: 2438                                                                                                                                                                                                                                +
 Content-Type: text/html; charset=UTF-8                                                                                                                                                                                                              +
 _body: <html>\r                                                                                                                                                                                                                                     +
 <head>\r                                                                                                                                                                                                                                            +
 <title id="title">\r                                                                                                                                                                                                                                +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />\r                                                                                                                             +
                 <style type="text/css">\r                                                                                                                                                                                                           +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id="wi_panel" class="wi_menu wi wi_hide">\r                                                                                                                                                                                     +
                         <li id="wi_panel_home" class="wi_icon wi">\r                                                                                                                                                                                +
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">\r                                                                                                                                                  +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id="wi_toggle_parent" class="wi wi_show">\r                                                                                                                                                                                    +
                         <object id="wi_toggle_image" class="wi_image wi"\r                                                                                                                                                                          +
                                                         data="Theme/wicci-toggle.svg"\r                                                                                                                                                             +
                                                         type="image/svg+xml">\r                                                                                                                                                                     +
                         </object> \r                                                                                                                                                                                                                +
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>\r                                                                                                                                                     +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 handle="h1">\r                                                                                                                                                                                                                                  +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 We're awfully sorry,\r                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 <span>\r                                                                                                                                                                                                                                            +
 :\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 fancy.html\r                                                                                                                                                                                                                                        +
 <span>\r                                                                                                                                                                                                                                            +
 does not exist on site\r                                                                                                                                                                                                                            +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
 <span>\r                                                                                                                                                                                                                                            +
 .\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id="wi_stash"  class="wi_hide">\r                                                                                                                                                                                              +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id="wi_inline_controls_stash">\r                                                                                                                                                                                +
                                         <span id="wi_inline_controls" class="wi_controls wi">\r                                                                                                                                                     +
                                                 <span id="wi_inline_controls_0" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>\r                                                                                                 +
                                                         <span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>\r                                                                                               +
                                                         <span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>\r                                                                                                    +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id="wi_inline_controls_1" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>\r                                                                                                    +
                                                         <span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>\r                                                                                             +
                                                         <span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>\r                                                                                             +
                                                         <span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>\r                                                                                                +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src="JS/jquery.js" type="text/javascript"></script>\r                                                                                                                                                                       +
                 <script src="JS/tooltip.js" type="text/javascript"></script>\r                                                                                                                                                                      +
                 <script src="JS/cci.js" type="text/javascript"></script>\r                                                                                                                                                                          +
                 <script src="JS/wi.js" type="text/javascript"></script>\r                                                                                                                                                                           +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 
(1 row)

 case 
------
 
(1 row)

     env_rows_ref     
----------------------
 env_refs:env_rows:17
(1 row)

           fresh_http_transfer           
-----------------------------------------
 http_transfer_refs:http_transfer_rows:5
(1 row)

psql:wicci-page-fancy-test.sql:41: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:5
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                 http_responses_text                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 _status: HTTP/1.1 404 Not Found                                                                                                                                                                                                                     +
 Date: Mon, 25-Jul-2016 23:00:45 GMT                                                                                                                                                                                                                 +
 Server: Wicci/0.2                                                                                                                                                                                                                                   +
 Content-Length: 2438                                                                                                                                                                                                                                +
 Content-Type: text/html; charset=UTF-8                                                                                                                                                                                                              +
 _body: <html>\r                                                                                                                                                                                                                                     +
 <head>\r                                                                                                                                                                                                                                            +
 <title id="title">\r                                                                                                                                                                                                                                +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />\r                                                                                                                             +
                 <style type="text/css">\r                                                                                                                                                                                                           +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id="wi_panel" class="wi_menu wi wi_hide">\r                                                                                                                                                                                     +
                         <li id="wi_panel_home" class="wi_icon wi">\r                                                                                                                                                                                +
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">\r                                                                                                                                                  +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id="wi_toggle_parent" class="wi wi_show">\r                                                                                                                                                                                    +
                         <object id="wi_toggle_image" class="wi_image wi"\r                                                                                                                                                                          +
                                                         data="Theme/wicci-toggle.svg"\r                                                                                                                                                             +
                                                         type="image/svg+xml">\r                                                                                                                                                                     +
                         </object> \r                                                                                                                                                                                                                +
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>\r                                                                                                                                                     +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 handle="h1">\r                                                                                                                                                                                                                                  +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 We're awfully sorry,\r                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 <span>\r                                                                                                                                                                                                                                            +
 :\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 fancy.html\r                                                                                                                                                                                                                                        +
 <span>\r                                                                                                                                                                                                                                            +
 does not exist on site\r                                                                                                                                                                                                                            +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
 <span>\r                                                                                                                                                                                                                                            +
 .\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id="wi_stash"  class="wi_hide">\r                                                                                                                                                                                              +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id="wi_inline_controls_stash">\r                                                                                                                                                                                +
                                         <span id="wi_inline_controls" class="wi_controls wi">\r                                                                                                                                                     +
                                                 <span id="wi_inline_controls_0" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>\r                                                                                                 +
                                                         <span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>\r                                                                                               +
                                                         <span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>\r                                                                                                    +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id="wi_inline_controls_1" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>\r                                                                                                    +
                                                         <span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>\r                                                                                             +
                                                         <span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>\r                                                                                             +
                                                         <span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>\r                                                                                                +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src="JS/jquery.js" type="text/javascript"></script>\r                                                                                                                                                                       +
                 <script src="JS/tooltip.js" type="text/javascript"></script>\r                                                                                                                                                                      +
                 <script src="JS/cci.js" type="text/javascript"></script>\r                                                                                                                                                                          +
                 <script src="JS/wi.js" type="text/javascript"></script>\r                                                                                                                                                                           +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 
(1 row)

                                                                                                                                               wicci_grafts_from_to                                                                                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 ("{doc_node_refs:tree_doc_node_rows:72,doc_node_refs:tree_doc_node_rows:77,doc_node_refs:tree_doc_node_rows:82,doc_node_refs:tree_doc_node_rows:87}","{doc_node_refs:graft_doc_node_rows:104,doc_node_refs:graft_doc_node_rows:105,doc_node_refs:graft_doc_node_rows:106,doc_node_refs:graft_doc_node_rows:107}")
(1 row)

 case 
------
 
(1 row)

     env_rows_ref     
----------------------
 env_refs:env_rows:18
(1 row)

           fresh_http_transfer           
-----------------------------------------
 http_transfer_refs:http_transfer_rows:5
(1 row)

psql:wicci-page-fancy-test.sql:65: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:5
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                 http_responses_text                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 _status: HTTP/1.1 404 Not Found                                                                                                                                                                                                                     +
 Date: Mon, 25-Jul-2016 23:00:47 GMT                                                                                                                                                                                                                 +
 Server: Wicci/0.2                                                                                                                                                                                                                                   +
 Set-Cookie: user=user:greg@wicci.org; session=wicci_transaction_refs:wicci_transaction_rows:5; expires=Tue, 25-Jul-2017 23:00:47 GMT; path=fancy.html; domain=                                                                                      +
 Content-Length: 2457                                                                                                                                                                                                                                +
 Content-Type: text/html; charset=UTF-8                                                                                                                                                                                                              +
 _body: <html>\r                                                                                                                                                                                                                                     +
 <head>\r                                                                                                                                                                                                                                            +
 <title id="title">\r                                                                                                                                                                                                                                +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />\r                                                                                                                             +
                 <style type="text/css">\r                                                                                                                                                                                                           +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id="wi_panel" class="wi_menu wi wi_hide">\r                                                                                                                                                                                     +
                         <li id="wi_panel_home" class="wi_icon wi">\r                                                                                                                                                                                +
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">\r                                                                                                                                                  +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id="wi_toggle_parent" class="wi wi_show">\r                                                                                                                                                                                    +
                         <object id="wi_toggle_image" class="wi_image wi"\r                                                                                                                                                                          +
                                                         data="Theme/wicci-toggle.svg"\r                                                                                                                                                             +
                                                         type="image/svg+xml">\r                                                                                                                                                                     +
                         </object> \r                                                                                                                                                                                                                +
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>\r                                                                                                                                                     +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 handle="h1">\r                                                                                                                                                                                                                                  +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 We're awfully sorry,\r                                                                                                                                                                                                                              +
 user:greg@wicci.org\r                                                                                                                                                                                                                               +
 <span>\r                                                                                                                                                                                                                                            +
 :\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 fancy.html\r                                                                                                                                                                                                                                        +
 <span>\r                                                                                                                                                                                                                                            +
 does not exist on site\r                                                                                                                                                                                                                            +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
 <span>\r                                                                                                                                                                                                                                            +
 .\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id="wi_stash"  class="wi_hide">\r                                                                                                                                                                                              +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id="wi_inline_controls_stash">\r                                                                                                                                                                                +
                                         <span id="wi_inline_controls" class="wi_controls wi">\r                                                                                                                                                     +
                                                 <span id="wi_inline_controls_0" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>\r                                                                                                 +
                                                         <span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>\r                                                                                               +
                                                         <span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>\r                                                                                                    +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id="wi_inline_controls_1" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>\r                                                                                                    +
                                                         <span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>\r                                                                                             +
                                                         <span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>\r                                                                                             +
                                                         <span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>\r                                                                                                +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src="JS/jquery.js" type="text/javascript"></script>\r                                                                                                                                                                       +
                 <script src="JS/tooltip.js" type="text/javascript"></script>\r                                                                                                                                                                      +
                 <script src="JS/cci.js" type="text/javascript"></script>\r                                                                                                                                                                          +
                 <script src="JS/wi.js" type="text/javascript"></script>\r                                                                                                                                                                           +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-page-404-data.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-page-404-data.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-page-404-data.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-page-404-data.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                     set_file                                     
----------------------------------------------------------------------------------
 schema wicci-page-404-data.sql, module wicci-page-404-data, revision $Id, id 127
(1 row)

 get_doc_page  
---------------
 wicci.org/404
(1 row)

set -o pipefail ; doc-to-sql -d wicci1  user.html 2>&1 | tee /home/greg/.Wicci/Make/wicci1/user.html-out-err && mv /home/greg/.Wicci/Make/wicci1/user.html-out-err /home/greg/.Wicci/Make/wicci1/user.html-out
doc-to-sql: process_input user.html html wicci1
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

NOTICE:  00000: DEBUG try_doc_page_from_uri_lang_root(page_uri_refs,doc_lang_name_refs,xml_tree_returns): user.html =  html xml_tree_return: <html />
prefix_uri_pairs:
id_node_pairs:
title--><title />
login-text-->Login Namename-text-->User Namegroups-text-->Your Groups
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 coalesce  
-----------
 user.html
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-page-user-data.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-page-user-data.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-page-user-data.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-page-user-data.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                      set_file                                      
------------------------------------------------------------------------------------
 schema wicci-page-user-data.sql, module wicci-page-user-data, revision $Id, id 128
(1 row)

  get_doc_page  
----------------
 wicci.org/user
(1 row)

set -o pipefail ; /usr/local/pgsql/bin/psql -v psql=../Sql/psql.sql wicci1 -f wicci-page-test.sql 2>&1 | tee /home/greg/.Wicci/Make/wicci1/wicci-page-test.sql-out-err && mv /home/greg/.Wicci/Make/wicci1/wicci-page-test.sql-out-err /home/greg/.Wicci/Make/wicci1/wicci-page-test.sql-out
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "s0_lib" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
psql:/home/greg/.Wicci/Core/settings.sql:21: NOTICE:  42P06: schema "public" already exists, skipping
LOCATION:  CreateSchemaCommand, schemacmds.c:115
DO
                            set_schema_path                             
------------------------------------------------------------------------
 {s7_wicci,s6_http,s5_xml,s4_doc,s3_more,s2_core,s1_refs,s0_lib,public}
(1 row)

 ensure_schema_ready 
---------------------
 text_refs_ready()
(1 row)

                                 set_file                                 
--------------------------------------------------------------------------
 schema wicci-page-test.sql, module wicci-page-test, revision $Id, id 129
(1 row)

 wicci_debug_on 
----------------
 
(1 row)

       doc_page_doc       
--------------------------
 doc_refs:tree_doc_rows:7
(1 row)

                                                                                                                   tree_doc_text                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 <html>                                                                                                                                                                                                                                            +
 <head>                                                                                                                                                                                                                                            +
 <title id="title">                                                                                                                                                                                                                                +
 Hello World!                                                                                                                                                                                                                                      +
 </title>                                                                                                                                                                                                                                          +
                                                                                                                                                                                                                                                   +
                                                                                                                                                                                                                                                   +
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />                                                                                                                             +
                 <style type="text/css">                                                                                                                                                                                                           +
                         <!--                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }                                                                                                                                                                                       +
                         -->                                                                                                                                                                                                                       +
                 </style>                                                                                                                                                                                                                          +
                                                                                                                                                                                                                                                   +
 </head>                                                                                                                                                                                                                                           +
                                                                                                                                                                                                                                                   +
 <body>                                                                                                                                                                                                                                            +
                                                                                                                                                                                                                                                   +
                 <ul id="wi_panel" class="wi_menu wi wi_hide">                                                                                                                                                                                     +
                         <li id="wi_panel_home" class="wi_icon wi">                                                                                                                                                                                +
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">                                                                                                                                                  +
                                         </object>                                                                                                                                                                                                 +
                         </li>                                                                                                                                                                                                                     +
                 </ul>                                                                                                                                                                                                                             +
                 <div id="wi_toggle_parent" class="wi wi_show">                                                                                                                                                                                    +
                         <object id="wi_toggle_image" class="wi_image wi"                                                                                                                                                                          +
                                                         data="Theme/wicci-toggle.svg"                                                                                                                                                             +
                                                         type="image/svg+xml">                                                                                                                                                                     +
                         </object>                                                                                                                                                                                                                 +
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>                                                                                                                                                     +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->+
                                                                                                                                                                                                                                                   +
 <h1 class="title" id="h1">                                                                                                                                                                                                                        +
 Hello World!                                                                                                                                                                                                                                      +
 </h1>                                                                                                                                                                                                                                             +
                                                                                                                                                                                                                                                   +
 <p>                                                                                                                                                                                                                                               +
 Relax into alertness.                                                                                                                                                                                                                             +
 <br />                                                                                                                                                                                                                                            +
                                                                                                                                                                                                                                                   +
 Intention free of effort.                                                                                                                                                                                                                         +
 <br />                                                                                                                                                                                                                                            +
                                                                                                                                                                                                                                                   +
 Love and kisses - Greg                                                                                                                                                                                                                            +
 </p>                                                                                                                                                                                                                                              +
                                                                                                                                                                                                                                                   +
                                                                                                                                                                                                                                                   +
                 <div id="wi_stash"  class="wi_hide">                                                                                                                                                                                              +
                         <h2> This section hidden in production version</h2>                                                                                                                                                                       +
                         <dl>                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>                                                                                                                                                                                  +
                                 <dd id="wi_inline_controls_stash">                                                                                                                                                                                +
                                         <span id="wi_inline_controls" class="wi_controls wi">                                                                                                                                                     +
                                                 <span id="wi_inline_controls_0" class="wi_group wi">                                                                                                                                              +
                                                         <span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>                                                                                                 +
                                                         <span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>                                                                                               +
                                                         <span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>                                                                                                    +
                                                 </span>                                                                                                                                                                                           +
                                                 <span id="wi_inline_controls_1" class="wi_group wi">                                                                                                                                              +
                                                         <span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>                                                                                                    +
                                                         <span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>                                                                                             +
                                                         <span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>                                                                                             +
                                                         <span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>                                                                                                +
                                                 </span>                                                                                                                                                                                           +
                                         </span>                                                                                                                                                                                                   +
                                 </dd>                                                                                                                                                                                                             +
                         </dl>                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->                                                                                                                         +
                 <script src="JS/jquery.js" type="text/javascript"></script>                                                                                                                                                                       +
                 <script src="JS/tooltip.js" type="text/javascript"></script>                                                                                                                                                                      +
                 <script src="JS/cci.js" type="text/javascript"></script>                                                                                                                                                                          +
                 <script src="JS/wi.js" type="text/javascript"></script>                                                                                                                                                                           +
                                                                                                                                                                                                                                                   +
 </body>                                                                                                                                                                                                                                           +
                                                                                                                                                                                                                                                   +
 </html>                                                                                                                                                                                                                                           +
 
(1 row)

          http_requests_text           
---------------------------------------
 _type: GET                           +
 _url: simple.html?user=greg@wicci.org+
 _protocol: HTTP/1.1                  +
 Host: wicci.org                      +
 
(1 row)

            ?column?             
---------------------------------
 simple.html?user=greg@wicci.org
(1 row)

 ref | protocol | page | port | tag | query 
-----+----------+------+------+-----+-------
(0 rows)

    ?column?    
----------------
 greg@wicci.org
(1 row)

    ?column?    
----------------
 greg@wicci.org
(1 row)

 try_entity_uri 
----------------
 
(1 row)

 try_wicci_user 
----------------
 
(1 row)

CREATE FUNCTION
CREATE FUNCTION
COMMENT
                                                real_transfer_                                                 
---------------------------------------------------------------------------------------------------------------
 GET /simple?user=user:greg@wicci.org HTTP/1.1                                                                +
 Host: wicci.org:8080                                                                                         +
 User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6+
 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8                                      +
 Accept-Language: en-us,en;q=0.5                                                                              +
 Accept-Encoding: gzip,deflate                                                                                +
 Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7                                                               +
 Keep-Alive: 115                                                                                              +
 Connection: keep-alive Cache-Control: max-age=0                                                              +
 Cookie: user=user:greg@wicci.org                                                                             +
 
(1 row)

psql:wicci-page-test.sql:91: NOTICE:  00000: DEBUG Entered try_new_http_transfer(bytea,bytea): GET /simple?user=user:greg@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:91: NOTICE:  00000: DEBUG Entered try_parse_http_requests(bytea): GET /simple?user=user:greg@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:91: NOTICE:  00000: DEBUG Entered try_new_http_transfer(http_request_refs[],bytea): _type: GET
_url: /simple?user=user:greg@wicci.org
_protocol: HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:91: NOTICE:  00000: DEBUG Entered new_http_transfer(bytea,bytea): GET /simple?user=user:greg@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
                coalesce                 
-----------------------------------------
 http_transfer_refs:http_transfer_rows:6
(1 row)

                    get_uri                     
------------------------------------------------
 wicci.org:8080/simple?user=user:greg@wicci.org
(1 row)

                                              http_requests_text                                               
---------------------------------------------------------------------------------------------------------------
 _type: GET                                                                                                   +
 _url: /simple?user=user:greg@wicci.org                                                                       +
 _protocol: HTTP/1.1                                                                                          +
 Host: wicci.org:8080                                                                                         +
 User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6+
 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8                                      +
 Accept-Language: en-us,en;q=0.5                                                                              +
 Accept-Encoding: gzip,deflate                                                                                +
 Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7                                                               +
 Keep-Alive: 115                                                                                              +
 Connection: keep-alive Cache-Control: max-age=0                                                              +
 Cookie: user=user:greg@wicci.org                                                                             +
 
(1 row)

 find_wicci_user_or_nil 
------------------------
 user:greg@wicci.org
(1 row)

           fresh_http_transfer           
-----------------------------------------
 http_transfer_refs:http_transfer_rows:6
(1 row)

           try_get_http_requests_url            
------------------------------------------------
 wicci.org:8080/simple?user=user:greg@wicci.org
(1 row)

 get_http_requests_cookies 
---------------------------
 user=user:greg@wicci.org
(1 row)

                                                                                                                                                                                                                                                          array                                                                                                                                                                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"_type: GET","_url: /simple?user=user:greg@wicci.org","_protocol: HTTP/1.1","Host: wicci.org:8080","User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6","Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","Accept-Language: en-us,en;q=0.5","Accept-Encoding: gzip,deflate","Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7","Keep-Alive: 115","Connection: keep-alive Cache-Control: max-age=0","Cookie: user=user:greg@wicci.org"}
(1 row)

                                              http_transfer_text                                               
---------------------------------------------------------------------------------------------------------------
 http_transfer_refs:http_transfer_rows:6                                                                      +
 when: 2016-07-25 15:59:03.342011                                                                             +
 requests:                                                                                                    +
 GET /simple?user=user:greg@wicci.org HTTP/1.1                                                                +
 Host: wicci.org:8080                                                                                         +
 User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6+
 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8                                      +
 Accept-Language: en-us,en;q=0.5                                                                              +
 Accept-Encoding: gzip,deflate                                                                                +
 Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7                                                               +
 Keep-Alive: 115                                                                                              +
 Connection: keep-alive Cache-Control: max-age=0                                                              +
 Cookie: user=user:greg@wicci.org                                                                             +
 requests body length: NULL!                                                                                  +
 responses:                                                                                                   +
 
(1 row)

psql:wicci-page-test.sql:140: NOTICE:  00000: DEBUG Entered try_wicci_serve_body(env_refs,wicci_user_refs,uri_query_refs,doc_page_refs,doc_refs,doc_lang_name_refs): 
env_wicci_user: user:greg@wicci.org	env_http_url: wicci.org:8080/simple?user=user:greg@wicci.org
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:140: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:6
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:140: NOTICE:  00000: DEBUG Entered wicci_serve(http_transfer_refs,uri_refs,uri_query_refs,http_response_name_refs): 
env_http_url: wicci.org:8080/simple?user=user:greg@wicci.org	env_cookies: user=user:greg@wicci.org
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                  http_transfer_text                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 http_transfer_refs:http_transfer_rows:6                                                                                                                                                                                                             +
 when: 2016-07-25 15:59:03.342011                                                                                                                                                                                                                    +
 requests:                                                                                                                                                                                                                                           +
 GET /simple?user=user:greg@wicci.org HTTP/1.1                                                                                                                                                                                                       +
 Host: wicci.org:8080                                                                                                                                                                                                                                +
 User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6                                                                                                                                       +
 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8                                                                                                                                                                             +
 Accept-Language: en-us,en;q=0.5                                                                                                                                                                                                                     +
 Accept-Encoding: gzip,deflate                                                                                                                                                                                                                       +
 Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7                                                                                                                                                                                                      +
 Keep-Alive: 115                                                                                                                                                                                                                                     +
 Connection: keep-alive Cache-Control: max-age=0                                                                                                                                                                                                     +
 Cookie: user=user:greg@wicci.org                                                                                                                                                                                                                    +
 requests body length: NULL!                                                                                                                                                                                                                         +
 responses:                                                                                                                                                                                                                                          +
 _status: HTTP/1.1 200 OK                                                                                                                                                                                                                            +
 Date: Mon, 25-Jul-2016 23:00:54 GMT                                                                                                                                                                                                                 +
 Server: Wicci/0.2                                                                                                                                                                                                                                   +
 Set-Cookie: user=user:greg@wicci.org; session=wicci_transaction_refs:wicci_transaction_rows:6; expires=Tue, 25-Jul-2017 23:00:54 GMT; path=simple; domain=wicci.org                                                                                 +
 Content-Length: 2379                                                                                                                                                                                                                                +
 Content-Type: text/html; charset=UTF-8                                                                                                                                                                                                              +
 _body: <html>\r                                                                                                                                                                                                                                     +
 <head>\r                                                                                                                                                                                                                                            +
 <title id="title">\r                                                                                                                                                                                                                                +
 Hello World!\r                                                                                                                                                                                                                                      +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />\r                                                                                                                             +
                 <style type="text/css">\r                                                                                                                                                                                                           +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id="wi_panel" class="wi_menu wi wi_hide">\r                                                                                                                                                                                     +
                         <li id="wi_panel_home" class="wi_icon wi">\r                                                                                                                                                                                +
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">\r                                                                                                                                                  +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id="wi_toggle_parent" class="wi wi_show">\r                                                                                                                                                                                    +
                         <object id="wi_toggle_image" class="wi_image wi"\r                                                                                                                                                                          +
                                                         data="Theme/wicci-toggle.svg"\r                                                                                                                                                             +
                                                         type="image/svg+xml">\r                                                                                                                                                                     +
                         </object> \r                                                                                                                                                                                                                +
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>\r                                                                                                                                                     +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 class="title" id="h1">\r                                                                                                                                                                                                                        +
 Hello World!\r                                                                                                                                                                                                                                      +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 Relax into alertness.\r                                                                                                                                                                                                                             +
 <br />\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
 Intention free of effort.\r                                                                                                                                                                                                                         +
 <br />\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
 Love and kisses - Greg\r                                                                                                                                                                                                                            +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id="wi_stash"  class="wi_hide">\r                                                                                                                                                                                              +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id="wi_inline_controls_stash">\r                                                                                                                                                                                +
                                         <span id="wi_inline_controls" class="wi_controls wi">\r                                                                                                                                                     +
                                                 <span id="wi_inline_controls_0" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>\r                                                                                                 +
                                                         <span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>\r                                                                                               +
                                                         <span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>\r                                                                                                    +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id="wi_inline_controls_1" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>\r                                                                                                    +
                                                         <span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>\r                                                                                             +
                                                         <span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>\r                                                                                             +
                                                         <span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>\r                                                                                                +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src="JS/jquery.js" type="text/javascript"></script>\r                                                                                                                                                                       +
                 <script src="JS/tooltip.js" type="text/javascript"></script>\r                                                                                                                                                                      +
                 <script src="JS/cci.js" type="text/javascript"></script>\r                                                                                                                                                                          +
                 <script src="JS/wi.js" type="text/javascript"></script>\r                                                                                                                                                                           +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 
(1 row)

psql:wicci-page-test.sql:147: NOTICE:  00000: DEBUG Entered try_wicci_serve_body(env_refs,wicci_user_refs,uri_query_refs,doc_page_refs,doc_refs,doc_lang_name_refs): 
env_wicci_user: user:greg@wicci.org	env_http_url: wicci.org:8080/simple?user=user:greg@wicci.org
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:147: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:6
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:147: NOTICE:  00000: DEBUG Entered wicci_serve(http_transfer_refs,uri_refs,uri_query_refs,http_response_name_refs): 
env_http_url: wicci.org:8080/simple?user=user:greg@wicci.org	env_cookies: user=user:greg@wicci.org
LOCATION:  exec_stmt_raise, pl_exec.c:3165
 ?column? 
----------
 t
(1 row)

         http_transfer_rows_ref          
-----------------------------------------
 http_transfer_refs:http_transfer_rows:6
(1 row)

psql:wicci-page-test.sql:158: NOTICE:  00000: DEBUG Entered try_wicci_serve_body(env_refs,wicci_user_refs,uri_query_refs,doc_page_refs,doc_refs,doc_lang_name_refs): 
env_wicci_user: user:greg@wicci.org	env_http_url: wicci.org:8080/simple?user=user:greg@wicci.org
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:158: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:6
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:158: NOTICE:  00000: DEBUG Entered wicci_serve(http_transfer_refs,uri_refs,uri_query_refs,http_response_name_refs): 
env_http_url: wicci.org:8080/simple?user=user:greg@wicci.org	env_cookies: user=user:greg@wicci.org
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                      _url                      |         _cookies         | x | http_transfer_text 
------------------------------------------------+--------------------------+---+--------------------
 wicci.org:8080/simple?user=user:greg@wicci.org | user=user:greg@wicci.org |   | 
(1 row)

psql:wicci-page-test.sql:162: NOTICE:  00000: DEBUG Entered wicci_serve(bytea,bytea,text): GET /simple?user=user:greg@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org
 _body_bin
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:162: NOTICE:  00000: DEBUG Entered try_new_http_transfer(bytea,bytea): GET /simple?user=user:greg@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:162: NOTICE:  00000: DEBUG Entered try_parse_http_requests(bytea): GET /simple?user=user:greg@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:162: NOTICE:  00000: DEBUG Entered try_new_http_transfer(http_request_refs[],bytea): _type: GET
_url: /simple?user=user:greg@wicci.org
_protocol: HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:162: NOTICE:  00000: DEBUG Entered new_http_transfer(bytea,bytea): GET /simple?user=user:greg@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:162: NOTICE:  00000: DEBUG Entered wicci_serve_responses(bytea,bytea,http_response_name_refs): GET /simple?user=user:greg@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:162: NOTICE:  00000: DEBUG Entered try_wicci_serve_body(env_refs,wicci_user_refs,uri_query_refs,doc_page_refs,doc_refs,doc_lang_name_refs): 
env_wicci_user: user:greg@wicci.org	env_http_url: wicci.org:8080/simple?user=user:greg@wicci.org
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:162: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:7
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:162: NOTICE:  00000: DEBUG Entered wicci_serve(http_transfer_refs,uri_refs,uri_query_refs,http_response_name_refs): 
env_http_url: wicci.org:8080/simple?user=user:greg@wicci.org	env_cookies: user=user:greg@wicci.org
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                     wicci_serve                                                                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 (_status,"HTTP/1.1 200 OK",)
 (_status,"HTTP/1.1 200 OK",)
 (_status,"HTTP/1.1 200 OK",)
 (_status,"HTTP/1.1 200 OK",)
 (_status,"HTTP/1.1 200 OK",)
 (Date,"Mon, 25-Jul-2016 23:00:56 GMT",)
 (Date,"Mon, 25-Jul-2016 23:00:56 GMT",)
 (Date,"Mon, 25-Jul-2016 23:00:56 GMT",)
 (Date,"Mon, 25-Jul-2016 23:00:56 GMT",)
 (Date,"Mon, 25-Jul-2016 23:00:56 GMT",)
 (Server,Wicci/0.2,)
 (Server,Wicci/0.2,)
 (Server,Wicci/0.2,)
 (Server,Wicci/0.2,)
 (Server,Wicci/0.2,)
 (Content-Length,2379,)
 (Content-Length,2379,)
 (Content-Length,2379,)
 (Content-Length,2379,)
 (Content-Length,2379,)
 (Content-Type,"text/html; charset=UTF-8",)
 (Content-Type,"text/html; charset=UTF-8",)
 (Content-Type,"text/html; charset=UTF-8",)
 (Content-Type,"text/html; charset=UTF-8",)
 (Content-Type,"text/html; charset=UTF-8",)
 (_body,"<html>\r                                                                                                                                                                                                                                    +
 <head>\r                                                                                                                                                                                                                                            +
 <title id=""title"">\r                                                                                                                                                                                                                              +
 Hello World!\r                                                                                                                                                                                                                                      +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel=""stylesheet"" type=""text/css"" media=""screen"" href=""http://wicci.org/CSS/wicci4screen.css"" />\r                                                                                                                     +
                 <style type=""text/css"">\r                                                                                                                                                                                                         +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id=""wi_panel"" class=""wi_menu wi wi_hide"">\r                                                                                                                                                                                 +
                         <li id=""wi_panel_home"" class=""wi_icon wi"">\r                                                                                                                                                                            +
                                         <object class=""wi_image wi"" data=""Theme/wicci-home.svg"">\r                                                                                                                                              +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id=""wi_toggle_parent"" class=""wi wi_show"">\r                                                                                                                                                                                +
                         <object id=""wi_toggle_image"" class=""wi_image wi""\r                                                                                                                                                                      +
                                                         data=""Theme/wicci-toggle.svg""\r                                                                                                                                                           +
                                                         type=""image/svg+xml"">\r                                                                                                                                                                   +
                         </object> \r                                                                                                                                                                                                                +
                         <div id=""wi_toggle"" class=""wi_jigger wi"" title=""Wicci Toggle""> </div>\r                                                                                                                                               +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 class=""title"" id=""h1"">\r                                                                                                                                                                                                                    +
 Hello World!\r                                                                                                                                                                                                                                      +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 Relax into alertness.\r                                                                                                                                                                                                                             +
 <br />\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
 Intention free of effort.\r                                                                                                                                                                                                                         +
 <br />\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
 Love and kisses - Greg\r                                                                                                                                                                                                                            +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id=""wi_stash""  class=""wi_hide"">\r                                                                                                                                                                                          +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id=""wi_inline_controls_stash"">\r                                                                                                                                                                              +
                                         <span id=""wi_inline_controls"" class=""wi_controls wi"">\r                                                                                                                                                 +
                                                 <span id=""wi_inline_controls_0"" class=""wi_group wi"">\r                                                                                                                                          +
                                                         <span id=""wi_inline_move_up"" class=""wi_move wi_control wi"" title=""move up"">&uArr; </span>\r                                                                                           +
                                                         <span id=""wi_inilne_move_dn"" class=""wi_move wi_control wi"" title=""move down"">&dArr; </span>\r                                                                                         +
                                                         <span id=""wi_inline_more_0"" class=""wi_next wi_control wi"" title=""more"">&raquo; </span>\r                                                                                              +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id=""wi_inline_controls_1"" class=""wi_group wi"">\r                                                                                                                                          +
                                                         <span id=""wi_inline_back_1"" class=""wi_prev wi_control wi"" title=""back"">&laquo; </span>\r                                                                                              +
                                                         <span id=""wi_inline_add_above"" class=""wi_add wi_control wi"" title=""add above"">+&uarr; </span>\r                                                                                       +
                                                         <span id=""wi_inline_add_below"" class=""wi_add wi_control wi"" title=""add below"">+&darr; </span>\r                                                                                       +
                                                         <span id=""wi_inline_delete"" class=""wi_delete wi_control wi"" title=""delete"">&times; </span>\r                                                                                          +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src=""JS/jquery.js"" type=""text/javascript""></script>\r                                                                                                                                                                   +
                 <script src=""JS/tooltip.js"" type=""text/javascript""></script>\r                                                                                                                                                                  +
                 <script src=""JS/cci.js"" type=""text/javascript""></script>\r                                                                                                                                                                      +
                 <script src=""JS/wi.js"" type=""text/javascript""></script>\r                                                                                                                                                                       +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 ",)
 (_body,"<html>\r                                                                                                                                                                                                                                    +
 <head>\r                                                                                                                                                                                                                                            +
 <title id=""title"">\r                                                                                                                                                                                                                              +
 Hello World!\r                                                                                                                                                                                                                                      +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel=""stylesheet"" type=""text/css"" media=""screen"" href=""http://wicci.org/CSS/wicci4screen.css"" />\r                                                                                                                     +
                 <style type=""text/css"">\r                                                                                                                                                                                                         +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id=""wi_panel"" class=""wi_menu wi wi_hide"">\r                                                                                                                                                                                 +
                         <li id=""wi_panel_home"" class=""wi_icon wi"">\r                                                                                                                                                                            +
                                         <object class=""wi_image wi"" data=""Theme/wicci-home.svg"">\r                                                                                                                                              +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id=""wi_toggle_parent"" class=""wi wi_show"">\r                                                                                                                                                                                +
                         <object id=""wi_toggle_image"" class=""wi_image wi""\r                                                                                                                                                                      +
                                                         data=""Theme/wicci-toggle.svg""\r                                                                                                                                                           +
                                                         type=""image/svg+xml"">\r                                                                                                                                                                   +
                         </object> \r                                                                                                                                                                                                                +
                         <div id=""wi_toggle"" class=""wi_jigger wi"" title=""Wicci Toggle""> </div>\r                                                                                                                                               +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 class=""title"" id=""h1"">\r                                                                                                                                                                                                                    +
 Hello World!\r                                                                                                                                                                                                                                      +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 Relax into alertness.\r                                                                                                                                                                                                                             +
 <br />\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
 Intention free of effort.\r                                                                                                                                                                                                                         +
 <br />\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
 Love and kisses - Greg\r                                                                                                                                                                                                                            +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id=""wi_stash""  class=""wi_hide"">\r                                                                                                                                                                                          +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id=""wi_inline_controls_stash"">\r                                                                                                                                                                              +
                                         <span id=""wi_inline_controls"" class=""wi_controls wi"">\r                                                                                                                                                 +
                                                 <span id=""wi_inline_controls_0"" class=""wi_group wi"">\r                                                                                                                                          +
                                                         <span id=""wi_inline_move_up"" class=""wi_move wi_control wi"" title=""move up"">&uArr; </span>\r                                                                                           +
                                                         <span id=""wi_inilne_move_dn"" class=""wi_move wi_control wi"" title=""move down"">&dArr; </span>\r                                                                                         +
                                                         <span id=""wi_inline_more_0"" class=""wi_next wi_control wi"" title=""more"">&raquo; </span>\r                                                                                              +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id=""wi_inline_controls_1"" class=""wi_group wi"">\r                                                                                                                                          +
                                                         <span id=""wi_inline_back_1"" class=""wi_prev wi_control wi"" title=""back"">&laquo; </span>\r                                                                                              +
                                                         <span id=""wi_inline_add_above"" class=""wi_add wi_control wi"" title=""add above"">+&uarr; </span>\r                                                                                       +
                                                         <span id=""wi_inline_add_below"" class=""wi_add wi_control wi"" title=""add below"">+&darr; </span>\r                                                                                       +
                                                         <span id=""wi_inline_delete"" class=""wi_delete wi_control wi"" title=""delete"">&times; </span>\r                                                                                          +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src=""JS/jquery.js"" type=""text/javascript""></script>\r                                                                                                                                                                   +
                 <script src=""JS/tooltip.js"" type=""text/javascript""></script>\r                                                                                                                                                                  +
                 <script src=""JS/cci.js"" type=""text/javascript""></script>\r                                                                                                                                                                      +
                 <script src=""JS/wi.js"" type=""text/javascript""></script>\r                                                                                                                                                                       +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 ",)
 (_body,"<html>\r                                                                                                                                                                                                                                    +
 <head>\r                                                                                                                                                                                                                                            +
 <title id=""title"">\r                                                                                                                                                                                                                              +
 Hello World!\r                                                                                                                                                                                                                                      +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel=""stylesheet"" type=""text/css"" media=""screen"" href=""http://wicci.org/CSS/wicci4screen.css"" />\r                                                                                                                     +
                 <style type=""text/css"">\r                                                                                                                                                                                                         +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id=""wi_panel"" class=""wi_menu wi wi_hide"">\r                                                                                                                                                                                 +
                         <li id=""wi_panel_home"" class=""wi_icon wi"">\r                                                                                                                                                                            +
                                         <object class=""wi_image wi"" data=""Theme/wicci-home.svg"">\r                                                                                                                                              +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id=""wi_toggle_parent"" class=""wi wi_show"">\r                                                                                                                                                                                +
                         <object id=""wi_toggle_image"" class=""wi_image wi""\r                                                                                                                                                                      +
                                                         data=""Theme/wicci-toggle.svg""\r                                                                                                                                                           +
                                                         type=""image/svg+xml"">\r                                                                                                                                                                   +
                         </object> \r                                                                                                                                                                                                                +
                         <div id=""wi_toggle"" class=""wi_jigger wi"" title=""Wicci Toggle""> </div>\r                                                                                                                                               +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 class=""title"" id=""h1"">\r                                                                                                                                                                                                                    +
 Hello World!\r                                                                                                                                                                                                                                      +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 Relax into alertness.\r                                                                                                                                                                                                                             +
 <br />\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
 Intention free of effort.\r                                                                                                                                                                                                                         +
 <br />\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
 Love and kisses - Greg\r                                                                                                                                                                                                                            +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id=""wi_stash""  class=""wi_hide"">\r                                                                                                                                                                                          +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id=""wi_inline_controls_stash"">\r                                                                                                                                                                              +
                                         <span id=""wi_inline_controls"" class=""wi_controls wi"">\r                                                                                                                                                 +
                                                 <span id=""wi_inline_controls_0"" class=""wi_group wi"">\r                                                                                                                                          +
                                                         <span id=""wi_inline_move_up"" class=""wi_move wi_control wi"" title=""move up"">&uArr; </span>\r                                                                                           +
                                                         <span id=""wi_inilne_move_dn"" class=""wi_move wi_control wi"" title=""move down"">&dArr; </span>\r                                                                                         +
                                                         <span id=""wi_inline_more_0"" class=""wi_next wi_control wi"" title=""more"">&raquo; </span>\r                                                                                              +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id=""wi_inline_controls_1"" class=""wi_group wi"">\r                                                                                                                                          +
                                                         <span id=""wi_inline_back_1"" class=""wi_prev wi_control wi"" title=""back"">&laquo; </span>\r                                                                                              +
                                                         <span id=""wi_inline_add_above"" class=""wi_add wi_control wi"" title=""add above"">+&uarr; </span>\r                                                                                       +
                                                         <span id=""wi_inline_add_below"" class=""wi_add wi_control wi"" title=""add below"">+&darr; </span>\r                                                                                       +
                                                         <span id=""wi_inline_delete"" class=""wi_delete wi_control wi"" title=""delete"">&times; </span>\r                                                                                          +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src=""JS/jquery.js"" type=""text/javascript""></script>\r                                                                                                                                                                   +
                 <script src=""JS/tooltip.js"" type=""text/javascript""></script>\r                                                                                                                                                                  +
                 <script src=""JS/cci.js"" type=""text/javascript""></script>\r                                                                                                                                                                      +
                 <script src=""JS/wi.js"" type=""text/javascript""></script>\r                                                                                                                                                                       +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 ",)
 (_body,"<html>\r                                                                                                                                                                                                                                    +
 <head>\r                                                                                                                                                                                                                                            +
 <title id=""title"">\r                                                                                                                                                                                                                              +
 Hello World!\r                                                                                                                                                                                                                                      +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel=""stylesheet"" type=""text/css"" media=""screen"" href=""http://wicci.org/CSS/wicci4screen.css"" />\r                                                                                                                     +
                 <style type=""text/css"">\r                                                                                                                                                                                                         +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id=""wi_panel"" class=""wi_menu wi wi_hide"">\r                                                                                                                                                                                 +
                         <li id=""wi_panel_home"" class=""wi_icon wi"">\r                                                                                                                                                                            +
                                         <object class=""wi_image wi"" data=""Theme/wicci-home.svg"">\r                                                                                                                                              +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id=""wi_toggle_parent"" class=""wi wi_show"">\r                                                                                                                                                                                +
                         <object id=""wi_toggle_image"" class=""wi_image wi""\r                                                                                                                                                                      +
                                                         data=""Theme/wicci-toggle.svg""\r                                                                                                                                                           +
                                                         type=""image/svg+xml"">\r                                                                                                                                                                   +
                         </object> \r                                                                                                                                                                                                                +
                         <div id=""wi_toggle"" class=""wi_jigger wi"" title=""Wicci Toggle""> </div>\r                                                                                                                                               +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 class=""title"" id=""h1"">\r                                                                                                                                                                                                                    +
 Hello World!\r                                                                                                                                                                                                                                      +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 Relax into alertness.\r                                                                                                                                                                                                                             +
 <br />\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
 Intention free of effort.\r                                                                                                                                                                                                                         +
 <br />\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
 Love and kisses - Greg\r                                                                                                                                                                                                                            +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id=""wi_stash""  class=""wi_hide"">\r                                                                                                                                                                                          +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id=""wi_inline_controls_stash"">\r                                                                                                                                                                              +
                                         <span id=""wi_inline_controls"" class=""wi_controls wi"">\r                                                                                                                                                 +
                                                 <span id=""wi_inline_controls_0"" class=""wi_group wi"">\r                                                                                                                                          +
                                                         <span id=""wi_inline_move_up"" class=""wi_move wi_control wi"" title=""move up"">&uArr; </span>\r                                                                                           +
                                                         <span id=""wi_inilne_move_dn"" class=""wi_move wi_control wi"" title=""move down"">&dArr; </span>\r                                                                                         +
                                                         <span id=""wi_inline_more_0"" class=""wi_next wi_control wi"" title=""more"">&raquo; </span>\r                                                                                              +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id=""wi_inline_controls_1"" class=""wi_group wi"">\r                                                                                                                                          +
                                                         <span id=""wi_inline_back_1"" class=""wi_prev wi_control wi"" title=""back"">&laquo; </span>\r                                                                                              +
                                                         <span id=""wi_inline_add_above"" class=""wi_add wi_control wi"" title=""add above"">+&uarr; </span>\r                                                                                       +
                                                         <span id=""wi_inline_add_below"" class=""wi_add wi_control wi"" title=""add below"">+&darr; </span>\r                                                                                       +
                                                         <span id=""wi_inline_delete"" class=""wi_delete wi_control wi"" title=""delete"">&times; </span>\r                                                                                          +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src=""JS/jquery.js"" type=""text/javascript""></script>\r                                                                                                                                                                   +
                 <script src=""JS/tooltip.js"" type=""text/javascript""></script>\r                                                                                                                                                                  +
                 <script src=""JS/cci.js"" type=""text/javascript""></script>\r                                                                                                                                                                      +
                 <script src=""JS/wi.js"" type=""text/javascript""></script>\r                                                                                                                                                                       +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 ",)
 (_body,"<html>\r                                                                                                                                                                                                                                    +
 <head>\r                                                                                                                                                                                                                                            +
 <title id=""title"">\r                                                                                                                                                                                                                              +
 Hello World!\r                                                                                                                                                                                                                                      +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel=""stylesheet"" type=""text/css"" media=""screen"" href=""http://wicci.org/CSS/wicci4screen.css"" />\r                                                                                                                     +
                 <style type=""text/css"">\r                                                                                                                                                                                                         +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id=""wi_panel"" class=""wi_menu wi wi_hide"">\r                                                                                                                                                                                 +
                         <li id=""wi_panel_home"" class=""wi_icon wi"">\r                                                                                                                                                                            +
                                         <object class=""wi_image wi"" data=""Theme/wicci-home.svg"">\r                                                                                                                                              +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id=""wi_toggle_parent"" class=""wi wi_show"">\r                                                                                                                                                                                +
                         <object id=""wi_toggle_image"" class=""wi_image wi""\r                                                                                                                                                                      +
                                                         data=""Theme/wicci-toggle.svg""\r                                                                                                                                                           +
                                                         type=""image/svg+xml"">\r                                                                                                                                                                   +
                         </object> \r                                                                                                                                                                                                                +
                         <div id=""wi_toggle"" class=""wi_jigger wi"" title=""Wicci Toggle""> </div>\r                                                                                                                                               +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 class=""title"" id=""h1"">\r                                                                                                                                                                                                                    +
 Hello World!\r                                                                                                                                                                                                                                      +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 Relax into alertness.\r                                                                                                                                                                                                                             +
 <br />\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
 Intention free of effort.\r                                                                                                                                                                                                                         +
 <br />\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
 Love and kisses - Greg\r                                                                                                                                                                                                                            +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id=""wi_stash""  class=""wi_hide"">\r                                                                                                                                                                                          +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id=""wi_inline_controls_stash"">\r                                                                                                                                                                              +
                                         <span id=""wi_inline_controls"" class=""wi_controls wi"">\r                                                                                                                                                 +
                                                 <span id=""wi_inline_controls_0"" class=""wi_group wi"">\r                                                                                                                                          +
                                                         <span id=""wi_inline_move_up"" class=""wi_move wi_control wi"" title=""move up"">&uArr; </span>\r                                                                                           +
                                                         <span id=""wi_inilne_move_dn"" class=""wi_move wi_control wi"" title=""move down"">&dArr; </span>\r                                                                                         +
                                                         <span id=""wi_inline_more_0"" class=""wi_next wi_control wi"" title=""more"">&raquo; </span>\r                                                                                              +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id=""wi_inline_controls_1"" class=""wi_group wi"">\r                                                                                                                                          +
                                                         <span id=""wi_inline_back_1"" class=""wi_prev wi_control wi"" title=""back"">&laquo; </span>\r                                                                                              +
                                                         <span id=""wi_inline_add_above"" class=""wi_add wi_control wi"" title=""add above"">+&uarr; </span>\r                                                                                       +
                                                         <span id=""wi_inline_add_below"" class=""wi_add wi_control wi"" title=""add below"">+&darr; </span>\r                                                                                       +
                                                         <span id=""wi_inline_delete"" class=""wi_delete wi_control wi"" title=""delete"">&times; </span>\r                                                                                          +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src=""JS/jquery.js"" type=""text/javascript""></script>\r                                                                                                                                                                   +
                 <script src=""JS/tooltip.js"" type=""text/javascript""></script>\r                                                                                                                                                                  +
                 <script src=""JS/cci.js"" type=""text/javascript""></script>\r                                                                                                                                                                      +
                 <script src=""JS/wi.js"" type=""text/javascript""></script>\r                                                                                                                                                                       +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 ",)
(30 rows)

psql:wicci-page-test.sql:169: NOTICE:  00000: DEBUG Entered try_new_http_transfer(bytea,bytea): GET /fancy?user=user:greg@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:169: NOTICE:  00000: DEBUG Entered try_parse_http_requests(bytea): GET /fancy?user=user:greg@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:169: NOTICE:  00000: DEBUG Entered try_new_http_transfer(http_request_refs[],bytea): _type: GET
_url: /fancy?user=user:greg@wicci.org
_protocol: HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:169: NOTICE:  00000: DEBUG Entered new_http_transfer(bytea,bytea): GET /fancy?user=user:greg@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:greg@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
                coalesce                 
-----------------------------------------
 http_transfer_refs:http_transfer_rows:8
(1 row)

           fresh_http_transfer           
-----------------------------------------
 http_transfer_refs:http_transfer_rows:8
(1 row)

psql:wicci-page-test.sql:175: NOTICE:  00000: DEBUG Entered try_wicci_serve_body(env_refs,wicci_user_refs,uri_query_refs,doc_page_refs,doc_refs,doc_lang_name_refs): 
env_wicci_user: user:greg@wicci.org	env_http_url: wicci.org:8080/fancy?user=user:greg@wicci.org
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:175: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:8
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:175: NOTICE:  00000: DEBUG Entered wicci_serve(http_transfer_refs,uri_refs,uri_query_refs,http_response_name_refs): 
env_http_url: wicci.org:8080/fancy?user=user:greg@wicci.org	env_cookies: user=user:greg@wicci.org
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                  http_transfer_text                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 http_transfer_refs:http_transfer_rows:8                                                                                                                                                                                                             +
 when: 2016-07-25 15:59:03.342011                                                                                                                                                                                                                    +
 requests:                                                                                                                                                                                                                                           +
 GET /fancy?user=user:greg@wicci.org HTTP/1.1                                                                                                                                                                                                        +
 Host: wicci.org:8080                                                                                                                                                                                                                                +
 User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6                                                                                                                                       +
 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8                                                                                                                                                                             +
 Accept-Language: en-us,en;q=0.5                                                                                                                                                                                                                     +
 Accept-Encoding: gzip,deflate                                                                                                                                                                                                                       +
 Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7                                                                                                                                                                                                      +
 Keep-Alive: 115                                                                                                                                                                                                                                     +
 Connection: keep-alive Cache-Control: max-age=0                                                                                                                                                                                                     +
 Cookie: user=user:greg@wicci.org                                                                                                                                                                                                                    +
 requests body length: NULL!                                                                                                                                                                                                                         +
 responses:                                                                                                                                                                                                                                          +
 _status: HTTP/1.1 200 OK                                                                                                                                                                                                                            +
 Date: Mon, 25-Jul-2016 23:00:57 GMT                                                                                                                                                                                                                 +
 Server: Wicci/0.2                                                                                                                                                                                                                                   +
 Set-Cookie: user=user:greg@wicci.org; session=wicci_transaction_refs:wicci_transaction_rows:10; expires=Tue, 25-Jul-2017 23:00:57 GMT; path=fancy; domain=wicci.org                                                                                 +
 Content-Length: 2430                                                                                                                                                                                                                                +
 Content-Type: text/html; charset=UTF-8                                                                                                                                                                                                              +
 _body: <html>\r                                                                                                                                                                                                                                     +
 <head>\r                                                                                                                                                                                                                                            +
 <title id="title">\r                                                                                                                                                                                                                                +
 Love to All The World!\r                                                                                                                                                                                                                            +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />\r                                                                                                                             +
                 <style type="text/css">\r                                                                                                                                                                                                           +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id="wi_panel" class="wi_menu wi wi_hide">\r                                                                                                                                                                                     +
                         <li id="wi_panel_home" class="wi_icon wi">\r                                                                                                                                                                                +
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">\r                                                                                                                                                  +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id="wi_toggle_parent" class="wi wi_show">\r                                                                                                                                                                                    +
                         <object id="wi_toggle_image" class="wi_image wi"\r                                                                                                                                                                          +
                                                         data="Theme/wicci-toggle.svg"\r                                                                                                                                                             +
                                                         type="image/svg+xml">\r                                                                                                                                                                     +
                         </object> \r                                                                                                                                                                                                                +
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>\r                                                                                                                                                     +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 class="title" id="header">\r                                                                                                                                                                                                                    +
 Love to All The World!\r                                                                                                                                                                                                                            +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <ol id="list">\r                                                                                                                                                                                                                                    +
 <li>\r                                                                                                                                                                                                                                              +
 Everyone needs love!\r                                                                                                                                                                                                                              +
 </li>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <li>\r                                                                                                                                                                                                                                              +
 Anyone can give love!\r                                                                                                                                                                                                                             +
 </li>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <li>\r                                                                                                                                                                                                                                              +
 Let's share love!\r                                                                                                                                                                                                                                 +
 </li>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 </ol>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id="wi_stash"  class="wi_hide">\r                                                                                                                                                                                              +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id="wi_inline_controls_stash">\r                                                                                                                                                                                +
                                         <span id="wi_inline_controls" class="wi_controls wi">\r                                                                                                                                                     +
                                                 <span id="wi_inline_controls_0" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>\r                                                                                                 +
                                                         <span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>\r                                                                                               +
                                                         <span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>\r                                                                                                    +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id="wi_inline_controls_1" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>\r                                                                                                    +
                                                         <span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>\r                                                                                             +
                                                         <span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>\r                                                                                             +
                                                         <span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>\r                                                                                                +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src="JS/jquery.js" type="text/javascript"></script>\r                                                                                                                                                                       +
                 <script src="JS/tooltip.js" type="text/javascript"></script>\r                                                                                                                                                                      +
                 <script src="JS/cci.js" type="text/javascript"></script>\r                                                                                                                                                                          +
                 <script src="JS/wi.js" type="text/javascript"></script>\r                                                                                                                                                                           +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 
(1 row)

psql:wicci-page-test.sql:182: NOTICE:  00000: DEBUG Entered try_new_http_transfer(bytea,bytea): GET /fancy?user=user:sher@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:sher@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:182: NOTICE:  00000: DEBUG Entered try_parse_http_requests(bytea): GET /fancy?user=user:sher@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:sher@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:182: NOTICE:  00000: DEBUG Entered try_new_http_transfer(http_request_refs[],bytea): _type: GET
_url: /fancy?user=user:sher@wicci.org
_protocol: HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:sher@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:182: NOTICE:  00000: DEBUG Entered new_http_transfer(bytea,bytea): GET /fancy?user=user:sher@wicci.org HTTP/1.1
Host: wicci.org:8080
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 115
Connection: keep-alive Cache-Control: max-age=0
Cookie: user=user:sher@wicci.org

LOCATION:  exec_stmt_raise, pl_exec.c:3165
                coalesce                 
-----------------------------------------
 http_transfer_refs:http_transfer_rows:9
(1 row)

           fresh_http_transfer           
-----------------------------------------
 http_transfer_refs:http_transfer_rows:9
(1 row)

psql:wicci-page-test.sql:188: NOTICE:  00000: DEBUG Entered try_wicci_serve_body(env_refs,wicci_user_refs,uri_query_refs,doc_page_refs,doc_refs,doc_lang_name_refs): 
env_wicci_user: user:sher@wicci.org	env_http_url: wicci.org:8080/fancy?user=user:sher@wicci.org
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:188: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:9
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:188: NOTICE:  00000: DEBUG Entered wicci_serve(http_transfer_refs,uri_refs,uri_query_refs,http_response_name_refs): 
env_http_url: wicci.org:8080/fancy?user=user:sher@wicci.org	env_cookies: user=user:sher@wicci.org
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                  http_transfer_text                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 http_transfer_refs:http_transfer_rows:9                                                                                                                                                                                                             +
 when: 2016-07-25 15:59:03.342011                                                                                                                                                                                                                    +
 requests:                                                                                                                                                                                                                                           +
 GET /fancy?user=user:sher@wicci.org HTTP/1.1                                                                                                                                                                                                        +
 Host: wicci.org:8080                                                                                                                                                                                                                                +
 User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100626 SUSE/3.6.6-1.1 Firefox/3.6.6                                                                                                                                       +
 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8                                                                                                                                                                             +
 Accept-Language: en-us,en;q=0.5                                                                                                                                                                                                                     +
 Accept-Encoding: gzip,deflate                                                                                                                                                                                                                       +
 Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7                                                                                                                                                                                                      +
 Keep-Alive: 115                                                                                                                                                                                                                                     +
 Connection: keep-alive Cache-Control: max-age=0                                                                                                                                                                                                     +
 Cookie: user=user:sher@wicci.org                                                                                                                                                                                                                    +
 requests body length: NULL!                                                                                                                                                                                                                         +
 responses:                                                                                                                                                                                                                                          +
 _status: HTTP/1.1 200 OK                                                                                                                                                                                                                            +
 Date: Mon, 25-Jul-2016 23:00:59 GMT                                                                                                                                                                                                                 +
 Server: Wicci/0.2                                                                                                                                                                                                                                   +
 Set-Cookie: user=user:sher@wicci.org; session=wicci_transaction_refs:wicci_transaction_rows:11; expires=Tue, 25-Jul-2017 23:00:59 GMT; path=fancy; domain=wicci.org                                                                                 +
 Content-Length: 2430                                                                                                                                                                                                                                +
 Content-Type: text/html; charset=UTF-8                                                                                                                                                                                                              +
 _body: <html>\r                                                                                                                                                                                                                                     +
 <head>\r                                                                                                                                                                                                                                            +
 <title id="title">\r                                                                                                                                                                                                                                +
 Love to All The World!\r                                                                                                                                                                                                                            +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />\r                                                                                                                             +
                 <style type="text/css">\r                                                                                                                                                                                                           +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id="wi_panel" class="wi_menu wi wi_hide">\r                                                                                                                                                                                     +
                         <li id="wi_panel_home" class="wi_icon wi">\r                                                                                                                                                                                +
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">\r                                                                                                                                                  +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id="wi_toggle_parent" class="wi wi_show">\r                                                                                                                                                                                    +
                         <object id="wi_toggle_image" class="wi_image wi"\r                                                                                                                                                                          +
                                                         data="Theme/wicci-toggle.svg"\r                                                                                                                                                             +
                                                         type="image/svg+xml">\r                                                                                                                                                                     +
                         </object> \r                                                                                                                                                                                                                +
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>\r                                                                                                                                                     +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 class="title" id="header">\r                                                                                                                                                                                                                    +
 Love to All The World!\r                                                                                                                                                                                                                            +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <ol id="list">\r                                                                                                                                                                                                                                    +
 <li>\r                                                                                                                                                                                                                                              +
 Everyone needs love!\r                                                                                                                                                                                                                              +
 </li>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <li>\r                                                                                                                                                                                                                                              +
 Anyone can give love!\r                                                                                                                                                                                                                             +
 </li>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <li>\r                                                                                                                                                                                                                                              +
 Let's share love!\r                                                                                                                                                                                                                                 +
 </li>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 </ol>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id="wi_stash"  class="wi_hide">\r                                                                                                                                                                                              +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id="wi_inline_controls_stash">\r                                                                                                                                                                                +
                                         <span id="wi_inline_controls" class="wi_controls wi">\r                                                                                                                                                     +
                                                 <span id="wi_inline_controls_0" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>\r                                                                                                 +
                                                         <span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>\r                                                                                               +
                                                         <span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>\r                                                                                                    +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id="wi_inline_controls_1" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>\r                                                                                                    +
                                                         <span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>\r                                                                                             +
                                                         <span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>\r                                                                                             +
                                                         <span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>\r                                                                                                +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src="JS/jquery.js" type="text/javascript"></script>\r                                                                                                                                                                       +
                 <script src="JS/tooltip.js" type="text/javascript"></script>\r                                                                                                                                                                      +
                 <script src="JS/cci.js" type="text/javascript"></script>\r                                                                                                                                                                          +
                 <script src="JS/wi.js" type="text/javascript"></script>\r                                                                                                                                                                           +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 
(1 row)

psql:wicci-page-test.sql:202: NOTICE:  00000: DEBUG Entered try_new_http_transfer(bytea,bytea): GET /favicon.ico HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1
Accept: image/png,image/*;q=0.8,*/*;q=0.5
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip, deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Connection: keep-alive


LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:202: NOTICE:  00000: DEBUG Entered try_parse_http_requests(bytea): GET /favicon.ico HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1
Accept: image/png,image/*;q=0.8,*/*;q=0.5
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip, deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Connection: keep-alive


LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:202: NOTICE:  00000: DEBUG Entered try_new_http_transfer(http_request_refs[],bytea): _type: GET
_url: /favicon.ico
_protocol: HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1
Accept: image/png,image/*;q=0.8,*/*;q=0.5
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip, deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Connection: keep-alive

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:202: NOTICE:  00000: DEBUG Entered new_http_transfer(bytea,bytea): GET /favicon.ico HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1
Accept: image/png,image/*;q=0.8,*/*;q=0.5
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip, deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Connection: keep-alive


LOCATION:  exec_stmt_raise, pl_exec.c:3165
                 coalesce                 
------------------------------------------
 http_transfer_refs:http_transfer_rows:10
(1 row)

           fresh_http_transfer            
------------------------------------------
 http_transfer_refs:http_transfer_rows:10
(1 row)

                                 http_transfer_text                                 
------------------------------------------------------------------------------------
 http_transfer_refs:http_transfer_rows:10                                          +
 when: 2016-07-25 15:59:03.342011                                                  +
 requests:                                                                         +
 GET /favicon.ico HTTP/1.1                                                         +
 Host: localhost:8080                                                              +
 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1+
 Accept: image/png,image/*;q=0.8,*/*;q=0.5                                         +
 Accept-Language: en-us,en;q=0.5                                                   +
 Accept-Encoding: gzip, deflate                                                    +
 Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7                                    +
 Connection: keep-alive                                                            +
 requests body length: NULL!                                                       +
 responses:                                                                        +
 
(1 row)

psql:wicci-page-test.sql:210: NOTICE:  00000: DEBUG Entered try_wicci_serve_body(env_refs,wicci_user_refs,uri_query_refs,doc_page_refs,doc_refs,doc_lang_name_refs): 
env_wicci_user: 	env_http_url: wicci.org:8080/favicon.ico
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:210: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:10
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:210: NOTICE:  00000: DEBUG Entered wicci_serve(http_transfer_refs,uri_refs,uri_query_refs,http_response_name_refs): 
env_http_url: wicci.org:8080/favicon.ico	env_cookies: 
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                  http_transfer_text                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 http_transfer_refs:http_transfer_rows:10                                                                                                                                                                                                            +
 when: 2016-07-25 15:59:03.342011                                                                                                                                                                                                                    +
 requests:                                                                                                                                                                                                                                           +
 GET /favicon.ico HTTP/1.1                                                                                                                                                                                                                           +
 Host: localhost:8080                                                                                                                                                                                                                                +
 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1                                                                                                                                                                  +
 Accept: image/png,image/*;q=0.8,*/*;q=0.5                                                                                                                                                                                                           +
 Accept-Language: en-us,en;q=0.5                                                                                                                                                                                                                     +
 Accept-Encoding: gzip, deflate                                                                                                                                                                                                                      +
 Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7                                                                                                                                                                                                      +
 Connection: keep-alive                                                                                                                                                                                                                              +
 requests body length: NULL!                                                                                                                                                                                                                         +
 responses:                                                                                                                                                                                                                                          +
 _status: HTTP/1.1 404 Not Found                                                                                                                                                                                                                     +
 Date: Mon, 25-Jul-2016 23:01:00 GMT                                                                                                                                                                                                                 +
 Server: Wicci/0.2                                                                                                                                                                                                                                   +
 Content-Length: 2448                                                                                                                                                                                                                                +
 Content-Type: text/html; charset=UTF-8                                                                                                                                                                                                              +
 _body: <html>\r                                                                                                                                                                                                                                     +
 <head>\r                                                                                                                                                                                                                                            +
 <title id="title">\r                                                                                                                                                                                                                                +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />\r                                                                                                                             +
                 <style type="text/css">\r                                                                                                                                                                                                           +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id="wi_panel" class="wi_menu wi wi_hide">\r                                                                                                                                                                                     +
                         <li id="wi_panel_home" class="wi_icon wi">\r                                                                                                                                                                                +
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">\r                                                                                                                                                  +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id="wi_toggle_parent" class="wi wi_show">\r                                                                                                                                                                                    +
                         <object id="wi_toggle_image" class="wi_image wi"\r                                                                                                                                                                          +
                                                         data="Theme/wicci-toggle.svg"\r                                                                                                                                                             +
                                                         type="image/svg+xml">\r                                                                                                                                                                     +
                         </object> \r                                                                                                                                                                                                                +
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>\r                                                                                                                                                     +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1 handle="h1">\r                                                                                                                                                                                                                                  +
 CODE 404: Wicci Page Not Found!\r                                                                                                                                                                                                                   +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 We're awfully sorry,\r                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 <span>\r                                                                                                                                                                                                                                            +
 :\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 favicon.ico\r                                                                                                                                                                                                                                       +
 <span>\r                                                                                                                                                                                                                                            +
 does not exist on site\r                                                                                                                                                                                                                            +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 wicci.org\r                                                                                                                                                                                                                                         +
 <span>\r                                                                                                                                                                                                                                            +
 .\r                                                                                                                                                                                                                                                 +
 </span>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id="wi_stash"  class="wi_hide">\r                                                                                                                                                                                              +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id="wi_inline_controls_stash">\r                                                                                                                                                                                +
                                         <span id="wi_inline_controls" class="wi_controls wi">\r                                                                                                                                                     +
                                                 <span id="wi_inline_controls_0" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_move_up" class="wi_move wi_control wi" title="move up">&uArr; </span>\r                                                                                                 +
                                                         <span id="wi_inilne_move_dn" class="wi_move wi_control wi" title="move down">&dArr; </span>\r                                                                                               +
                                                         <span id="wi_inline_more_0" class="wi_next wi_control wi" title="more">&raquo; </span>\r                                                                                                    +
                                                 </span>\r                                                                                                                                                                                           +
                                                 <span id="wi_inline_controls_1" class="wi_group wi">\r                                                                                                                                              +
                                                         <span id="wi_inline_back_1" class="wi_prev wi_control wi" title="back">&laquo; </span>\r                                                                                                    +
                                                         <span id="wi_inline_add_above" class="wi_add wi_control wi" title="add above">+&uarr; </span>\r                                                                                             +
                                                         <span id="wi_inline_add_below" class="wi_add wi_control wi" title="add below">+&darr; </span>\r                                                                                             +
                                                         <span id="wi_inline_delete" class="wi_delete wi_control wi" title="delete">&times; </span>\r                                                                                                +
                                                 </span>\r                                                                                                                                                                                           +
                                         </span>\r                                                                                                                                                                                                   +
                                 </dd>\r                                                                                                                                                                                                             +
                         </dl>\r                                                                                                                                                                                                                     +
                 </div>                                                                                  <!-- wi_stash -->\r                                                                                                                         +
                 <script src="JS/jquery.js" type="text/javascript"></script>\r                                                                                                                                                                       +
                 <script src="JS/tooltip.js" type="text/javascript"></script>\r                                                                                                                                                                      +
                 <script src="JS/cci.js" type="text/javascript"></script>\r                                                                                                                                                                          +
                 <script src="JS/wi.js" type="text/javascript"></script>\r                                                                                                                                                                           +
         \r                                                                                                                                                                                                                                          +
 </body>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 </html>\r                                                                                                                                                                                                                                           +
 
(1 row)

                                       latin1                                       
------------------------------------------------------------------------------------
 GET /hello.html?host=wicci.org,user=greg@wicci.org HTTP/1.1                       +
 Host: localhost:8080                                                              +
 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1+
 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8           +
 Accept-Language: en-us,en;q=0.5                                                   +
 Accept-Encoding: gzip, deflate                                                    +
 Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7                                    +
 Connection: keep-alive                                                            +
 
(1 row)

psql:wicci-page-test.sql:234: NOTICE:  00000: DEBUG Entered try_new_http_transfer(bytea,bytea): GET /hello.html?host=wicci.org,user=greg@wicci.org HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip, deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Connection: keep-alive

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:234: NOTICE:  00000: DEBUG Entered try_parse_http_requests(bytea): GET /hello.html?host=wicci.org,user=greg@wicci.org HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip, deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Connection: keep-alive

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:234: NOTICE:  00000: DEBUG Entered try_new_http_transfer(http_request_refs[],bytea): _type: GET
_url: /hello.html?host=wicci.org,user=greg@wicci.org
_protocol: HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip, deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Connection: keep-alive

LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:234: NOTICE:  00000: DEBUG Entered new_http_transfer(bytea,bytea): GET /hello.html?host=wicci.org,user=greg@wicci.org HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip, deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Connection: keep-alive

LOCATION:  exec_stmt_raise, pl_exec.c:3165
                 coalesce                 
------------------------------------------
 http_transfer_refs:http_transfer_rows:11
(1 row)

           fresh_http_transfer            
------------------------------------------
 http_transfer_refs:http_transfer_rows:11
(1 row)

psql:wicci-page-test.sql:239: NOTICE:  00000: DEBUG Entered try_wicci_serve_body(env_refs,wicci_user_refs,uri_query_refs,doc_page_refs,doc_refs,doc_lang_name_refs): 
env_wicci_user: 	env_http_url: wicci.org:8080/hello.html?host=wicci.org,user=greg@wicci.org
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:239: NOTICE:  00000: DEBUG Entered try_wicci_serve_responses(env_refs,http_transfer_refs,wicci_user_refs,uri_refs,uri_query_refs,http_response_refs,bigint,doc_lang_name_refs): http_transfer_refs:http_transfer_rows:11
LOCATION:  exec_stmt_raise, pl_exec.c:3165
psql:wicci-page-test.sql:239: NOTICE:  00000: DEBUG Entered wicci_serve(http_transfer_refs,uri_refs,uri_query_refs,http_response_name_refs): 
env_http_url: wicci.org:8080/hello.html?host=wicci.org,user=greg@wicci.org	env_cookies: 
LOCATION:  exec_stmt_raise, pl_exec.c:3165
                                                                                                                  http_transfer_text                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 http_transfer_refs:http_transfer_rows:11                                                                                                                                                                                                            +
 when: 2016-07-25 15:59:03.342011                                                                                                                                                                                                                    +
 requests:                                                                                                                                                                                                                                           +
 GET /hello.html?host=wicci.org,user=greg@wicci.org HTTP/1.1                                                                                                                                                                                         +
 Host: localhost:8080                                                                                                                                                                                                                                +
 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:7.0.1) Gecko/20100101 Firefox/7.0.1                                                                                                                                                                  +
 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8                                                                                                                                                                             +
 Accept-Language: en-us,en;q=0.5                                                                                                                                                                                                                     +
 Accept-Encoding: gzip, deflate                                                                                                                                                                                                                      +
 Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7                                                                                                                                                                                                      +
 Connection: keep-alive                                                                                                                                                                                                                              +
 requests body length: NULL!                                                                                                                                                                                                                         +
 responses:                                                                                                                                                                                                                                          +
 _status: HTTP/1.1 200 OK                                                                                                                                                                                                                            +
 Date: Mon, 25-Jul-2016 23:01:02 GMT                                                                                                                                                                                                                 +
 Server: Wicci/0.2                                                                                                                                                                                                                                   +
 Content-Length: 2348                                                                                                                                                                                                                                +
 Content-Type: text/html; charset=UTF-8                                                                                                                                                                                                              +
 _body: <html>\r                                                                                                                                                                                                                                     +
 <head>\r                                                                                                                                                                                                                                            +
 <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />\r                                                                                                                                                                        +
 \r                                                                                                                                                                                                                                                  +
 <title>\r                                                                                                                                                                                                                                           +
 Hello World!\r                                                                                                                                                                                                                                      +
 </title>\r                                                                                                                                                                                                                                          +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <link rel="stylesheet" type="text/css" media="screen" href="http://wicci.org/CSS/wicci4screen.css" />\r                                                                                                                             +
                 <style type="text/css">\r                                                                                                                                                                                                           +
                         <!--\r                                                                                                                                                                                                                      +
                                 .wi_hide { display: none; }\r                                                                                                                                                                                       +
                         -->\r                                                                                                                                                                                                                       +
                 </style>\r                                                                                                                                                                                                                          +
         \r                                                                                                                                                                                                                                          +
 </head>\r                                                                                                                                                                                                                                           +
 \r                                                                                                                                                                                                                                                  +
 <body>\r                                                                                                                                                                                                                                            +
 \r                                                                                                                                                                                                                                                  +
                 <ul id="wi_panel" class="wi_menu wi wi_hide">\r                                                                                                                                                                                     +
                         <li id="wi_panel_home" class="wi_icon wi">\r                                                                                                                                                                                +
                                         <object class="wi_image wi" data="Theme/wicci-home.svg">\r                                                                                                                                                  +
                                         </object>\r                                                                                                                                                                                                 +
                         </li>\r                                                                                                                                                                                                                     +
                 </ul>\r                                                                                                                                                                                                                             +
                 <div id="wi_toggle_parent" class="wi wi_show">\r                                                                                                                                                                                    +
                         <object id="wi_toggle_image" class="wi_image wi"\r                                                                                                                                                                          +
                                                         data="Theme/wicci-toggle.svg"\r                                                                                                                                                             +
                                                         type="image/svg+xml">\r                                                                                                                                                                     +
                         </object> \r                                                                                                                                                                                                                +
                         <div id="wi_toggle" class="wi_jigger wi" title="Wicci Toggle"> </div>\r                                                                                                                                                     +
                 </div>                                                                                                                                                                                                           <!-- wi_panel -->\r+
         \r                                                                                                                                                                                                                                          +
 <h1>\r                                                                                                                                                                                                                                              +
 Hello World!\r                                                                                                                                                                                                                                      +
 </h1>\r                                                                                                                                                                                                                                             +
 \r                                                                                                                                                                                                                                                  +
 <p>\r                                                                                                                                                                                                                                               +
 Have a nice day!\r                                                                                                                                                                                                                                  +
 </p>\r                                                                                                                                                                                                                                              +
 \r                                                                                                                                                                                                                                                  +
 \r                                                                                                                                                                                                                                                  +
                 <div id="wi_stash"  class="wi_hide">\r                                                                                                                                                                                              +
                         <h2> This section hidden in production version</h2>\r                                                                                                                                                                       +
                         <dl>\r                                                                                                                                                                                                                      +
                                 <dt> Wicci Inline Controls </dt>\r                                                                                                                                                                                  +
                                 <dd id="wi_inline_controls_stash">\r                                                                                                                                                                                +
                                         <span id="wi_inline_controls" class="wi_controls wi">\r      
Compilation exited abnormally with code 2 at Mon Jul 25 16:01:05
